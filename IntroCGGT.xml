<?xml version="1.0" encoding="UTF-8"?>
<pretext>
  <docinfo>
    <brandlogo source="images/CGGT.png"/>
    
    <latex-image-preamble>
      \usepackage{tikz}
      \usetikzlibrary{arrows}
    \tikzstyle{vertex}=[circle, draw, fill=black, inner sep=0pt, minimum width=4pt]
    
    </latex-image-preamble>
  <macros>
    \newcommand{\into}{\hookrightarrow}
    \newcommand{\onto}{\twoheadrightarrow}
    \newcommand{\QQ}{\mathbb{Q}}
    \newcommand{\ZZ}{\mathbb{Z}}
    \newcommand{\RR}{\mathbb{R}}
    \newcommand{\GL}[2]{\mathrm{GL(#1,#2)}}
    \newcommand{\gen}[1]{{\left\langle #1 \right\rangle}}
    \newcommand{\ncl}[1]{\gen{\gen{#1}}}
    \newcommand{\pres}[2]{{\left\langle #1 \middle | #2
    \right\rangle}}
    \newcommand{\cay}[2]{{\mathbf{Cay}_{#1}\left(#2\right)}}
    \newcommand{\lab}{\mathbf{label}}
    \newcommand{\Stal}[1]{\Gamma(#1)}
    \newcommand{\lang}[2]{\mathcal{L}_{#1}(#2)}
  </macros>
</docinfo>

<book xml:id="IntroCGGT">
  <title>An introduction to combinatorial and geometric group
  theory</title>
  <frontmatter>
    <titlepage>
      <author>
	<personname>Nicholas Touikan</personname>
      </author>
      <date>Last Modified <today/></date>
    </titlepage>
    <introduction xml:id="chap_intro"><title>Introduction</title>
    <p>
      Because the field of geometric group theory is relatively new,
      sounds cool, is cool, and is accessible, it is, in 2020, very
      active and evolving. This also means that geometric group
      theory means different things to different people.
    </p>
    
    <p>
      Lie groups, for example, are interesting as groups, play a
      critical role in geometry, and would certainly have their place
      in a course in geometric group theory. But, Dynkin diagrams
      notwithstanding, drawings are not a major tool for dealing with
      Lie groups. Furthermore, differential geometry is a prerequisite
      to studying these groups.
    </p>

    <p>
      This course will be a self-contained introduction to the art of
      working with infinite discrete groups by drawing pictures. In
      particular this course has no advanced prerequisites, besides
      mathematical maturity. This constraint will guide the choice of
      topics.
    </p>

    <p>
      We will start with a rigorous exploration of the <m>F(X)</m>,
      the free group on a set <m>X</m> of letters and touch on the
      classical subject of combinatorial group theory, which is the
      study of groups given by generators and relations. One driving
      question will be: <i>Which calculations can we perform, or which
      algorithmic problems can we solve, in a group given by a certain
      presentation?</i>
    </p>
    
    <p>
      Our approach to this will be geometrical: group presentations
      enable us to draw Van Kampen diagrams and we will see that in
      the presence of (combinatorial) negative curvature, many
      algorithmic problems become tractable.
    </p>

    <p>Along the way we will touch on many other topics that can be
    explored by the techniques we will develop.</p>

    </introduction>



  </frontmatter>

  <chapter><title>Free groups and presentations</title>
    <section xml:id="reductions"><title>Lecture 1: Words and reductions</title>
    <p>
      Let <m>X</m> be a set. We will call <m>X</m> an
      <term>alphabet</term> and we will call its elements
      <term>symbols</term>. For each symbol <m>x \in X</m> take a
      formal inverse <m>x^{-1}</m> and we denote:
      <me>
	 X^{\pm 1} = X \cup \{x^{-1} : x \in X\}.
      </me>
      We further adopt the convention that <m>\left(x^{-1}\right)^{-1}
      = x</m>.
      
      A <term>word</term> in <m>X^{\pm 1}</m> is a string of symbols
      <me>
	w(X) = x_1x_2\cdots x_n
      </me>
      where each symbol <m>x_i \in X^{\pm 1}</m>. In the situation
      where alphabet is clear we will simply write <m>w</m> instead of
      <m>w(X)</m>.   
      
      So, for example, if  <m>X = \{a,b,c\}</m> then <m>X^{\pm 1} = \{a,
      a^{-1}, b, b^{-1},c , c^{-1}\}</m> and the string <me>
      abbac^{-1}b^{-1}ba^{-1}</me> is a word in <m>X^{\pm 1}</m>.
    </p>

    <p>
      Given two words <m>w_1,w_2</m> in some alphabet <m>X</m>, we
      denote their <term>concatenation</term> by <m>w_1\ast
      w_2</m>. For example if
      <me>
	w_1 = ab \text{  and  } w_2 = ba,
      </me>
      then <m>w_1\ast w_2 = abba</m>. 
    </p>

    <p>We will state the following proposition without proof, we would
    encourage the reader to prove this for themselves, but since the
    the reader will soon be asked to prove similar statements, we will
    not insist. That being said, <em>composition of functions and
    concatenation are two prototypical associative binary
    operations. </em></p>
    <proposition xml:id="cat-assoc">
      <statement><p>
	Concatenation of words is associative, i.e. <me>
	\left(w_1\ast w_2\right)\ast w_3 = w_1\ast
	\left(w_2\ast w_3\right). </me></p>
      </statement>
    </proposition>
    
    <p>
      In particular the concatenation of three words <me> w_1\ast
      w_2 \ast w_3
    </me>
    is well defined. Given a word <m>w</m> we will say that <m>u</m>
    is a <term>subword</term> of <m>w</m> if there are words
    <m>w',w''</m>, which may be empty, such that
    <me>
      w = w'\ast u \ast w''.
    </me>
    </p>

    <p> We say that a word <m>w(X)</m> is <term>reduced</term> if it
    has no subwords of the form <m> xx^{-1}</m> where <m>x \in X^{\pm
    1}.</m> We are now in a situation where we can describe the set
    underlying <m>F(X)</m> the <term>free group on alphabet
    <m>X</m></term>.
    </p>

    <p>Let&apos;s first consider an analogy with the set <m>\QQ</m> of
    fractions. We can consider fractions to be formal ratios of
    integers, but two different formal ratios, such as <m>\frac 2 4
    \text{ and } \frac 4 8</m>, can be equal. <m>\QQ</m> is therefore
    best thought of the set of ratios of formal ratios of integers
    modulo some equivalence relation. Furthermore every equivalence
    class of ratios has a reduced element. In <m>\QQ</m> a ratio is
    reduced if the numerator and denominator are relatively prime.</p>

    <p>As a set <m>F(X)</m> can be thought of as the collection of
    words in the alphabet <m>X</m> modulo an equivalence relation
    which we will now define.
    </p>

    <definition xml:id="cancellation">
      <statement>
	<p> An <term>elementary cancellation</term> in a word <m>w</m>
	is the operation of deleting a subword of the form
	<m>xx^{-1}</m> where <m>x \in X^{\pm 1}</m>, i.e.<me>
	w = w'\ast xx^{-1} \ast w'' \stackrel{c}{\to} w'\ast w''</me>.
	</p>
	<p> If <m>u</m> is obtained from <m>w</m> by an elementary
	cancellation, i.e. <m>w \stackrel{c}{\to}u</m>, then we say
	that <m>w</m> is obtained from <m>u</m> by an <term>elementary
	insertion</term>. </p>
	<p>
	  We the identity operation <m>w \to w</m> to simultaneously
	  be a <term>trivial cancellation</term> and a <term>trivial
	  insertion.</term>
	</p>
      </statement>
    </definition>
    <p>
    So, for example, we have:
    <me>
      bca^{-1}ac \stackrel{c}{\to} bcc.
    </me>
    Is an elementary cancellation.
    </p>
    
    <p>
      We now define an equivalence relation <m>\stackrel{c}{\sim}</m>
      on the set of words in <m>X</m> as follows:
      <ol>
	<li>
	   For each word we declare <m>w \stackrel c \sim
	   w</m>. (Reflexivity)
	</li>
	<li>
	  We declare <m>w \stackrel c \sim u</m> if <m>w</m> can be
	  brought to <m>u</m> by a sequence of elementary
	  cancellations and elementary insertions.
	</li>
      </ol>
    </p>

    <p>Now, on the one hand, given any word, because it has finite
    <term>length</term> (which here means number of symbols) after a
    finite sequence of elementary cancellations we will arrive at a
    reduced word. On the other hand, a given word can admit many
    distinct elementary cancellations, and in particular there are
    many different possible sequences of elementary cancellations
    which bring a word <m>w</m> to its reduced form. We can now state
    the main result of this lecture.</p>

    <theorem xml:id="thm_unique_reduced">
      <statement>
	Every word <m>w</m> in an alphabet <m>X</m> has a unique
	reduced form <m>\overline w</m>,
	i.e. if <m>w' \stackrel c \sim w \stackrel c \sim w''</m> and
	both <m>w,w''</m> are reduced, then <m>w'=w''</m>.
      </statement>
    </theorem>

    A restatement of this theorem is that elementary reductions form a
    <url href="https://en.wikipedia.org/wiki/Confluence_(abstract_rewriting)">
      confluent rewriting system.
    </url>
    
    The following exercises will guide the reader through the proof.
    
    <exercises><title>Lecture 1 exercises</title>
    <p> The purpose of these exercises, besides proving a crucial fact
    about free groups, is to get the reader to write arguments using
    words and using the technique of induction on word length.
    </p>
      <exercise>
	<statement>
	  <p>Prove the diamond lemma:</p>
	  <lemma xml:id="lem_diamond"><title>The diamond lemma</title>
	    <statement>
	      Suppose we have two elementary cancellations of a word
	      <m>w</m> <me>w_1 \stackrel c \leftarrow w \stackrel c
	      \to w_2</me>, then there exists some <m>w'</m> such that
	      there are (possibly trivial) cancellations <me> w_1
	      \stackrel c \to w' \stackrel c \leftarrow w_2.  </me>
	      See <xref ref="fig_diamond"/>.
	    </statement>
	  </lemma>
	    <figure xml:id="fig_diamond">
	      <caption>The diamond lemma</caption>
	      <image width="20%" xml:id="diamond_lemma">
		<latex-image>
		  \begin{tikzpicture}
		  \node (w) at (0,0) {$w$};
		  \node (w1) at (-1,-1) {$w_1$};
		  \node (w2) at (1,-1) {$w_2$};
		  \node (wp) at (0,-2) {$w'$};
		  \draw[->] (w) -- node[above]{$c$} (w1);
		  \draw[->] (w) -- node[above]{$c$} (w2);
		  \draw[->] (w1) -- node[above]{$c$} (wp);
		  \draw[->] (w2) -- node[above]{$c$} (wp);
		  \end{tikzpicture}
		</latex-image>
	      </image>
	    </figure>
	  <p>
	    Hint: There are two cases to consider: whether or not the
	    cancelled subwords in <m>w</m> overlap. Be thoughtful with
	    your notation and use of subscripts.
	  </p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>Use the diamond lemma to prove <xref
	  ref="thm_unique_reduced"/>
	  </p>
	  <p>Hint:
	  <!-- <ul> -->
	  <!--   <li>Start by writing out some words to see how the -->
	  <!--   diamons lemma works.</li> -->
	  <!--   <li>Suppose towards a contradiction that some word <m>w</m> -->
	  <!--   could be reduced to two distinct reduced forms.</li> -->
	  <!--   <li>Use induction on the length of words, i.e. consider a -->
	  <!--   minimal length counterexample.</li> -->
	  <!--   <li> -->
	      Start with this diagram where <m>w</m> is a minimal
	      length counterexample and <m>\overline w</m> and
	      <m>\overline w'</m> are distinct reduced words:
	      <image width="50%" xml:id="confluence">
		<latex-image>
		  \begin{tikzpicture}
		  \node (w) at (0,0) {$w$};
		  \node (w1) at (-1,-1) {$w_1$};
		  \node (w2) at (1,-1) {$w_2$};
		  \node (ow) at (-3,-3) {$\overline w'$};
		  \node (owp) at (3,-3) {$\overline w$};
		  \draw[->] (w) -- node[above]{$c$} (w1);
		  \draw[->] (w) -- node[above]{$c$} (w2);
		  \draw[->] (w1) -- node[above]{$c$} (-2,-2);
		  \draw[->] (w2) -- node[above]{$c$} (2,-2);
		  \path (-2,-2) --node[sloped]{$\cdots$} (ow);
		  \path (2,-2) --node[sloped]{$\cdots$} (owp);
		  \end{tikzpicture}
		</latex-image>
	      </image>
	  <!--   </li> -->
	  <!-- </ul> -->
	  </p>
	</statement>
      </exercise>
    </exercises>
    
    </section>

    <section xml:id="universal"><title>Lecture 2: The free group and
    its universal property</title>
    <p>As the reader should already know, a <term>group</term>
    <m>(G,\cdot)</m> is a pair consisting of a set <m>G</m> and a
    binary operation <m>\star:G\times G \to G</m>, usually called
    <term>multiplication</term>, which satisfies the following axioms:
    <ul>
      <li>The multiplication operation is <term>associative</term>,
      i.e. for all <m>g,h,k \in G</m> we have <me>(g\star h)\star k =
      g\star(h \star k).</me></li>
      <li>There exists an element <m>1_G\in G</m> called the
      <term>identity element</term> such that for every <m>g\in ,
      1_G \star g = g</m>.</li>
      <li>For every <m>g \in G</m> there exists an inverse <m>g^{-1}
      \in G</m> such that <m>g\star g^{-1}=1_G.</m>
      </li>
    </ul>
    We will always denote a group by simply <m>G</m>, we will almost
    always omit the subscript for the identity element, and we will
    usually denote multiplication simply by concatenation, i.e. we&apos;ll
    write stuff like <me>gg^{-1}=1.</me> </p> <p> <m>F(X)</m>, the
    <term>free group on an alphabet <m>X</m></term> consists of the
    set of reduced words in <m>X</m> and multiplication is defined by
    concatenation and reduction, i.e.  <me> u\star v = \overline{u*v},
    </me> where <m>*</m> denotes concatenation of strings.  The
    identity <m>1_{F(X)}</m> is the empty word (i.e. the word with
    zero symbols in it). Associativity amounts to showing that
    <me>
      (u\star v)\star w = \overline{\overline{u * v} * w} = \overline{
      u* \overline{v * w}} = u\star (v\star w),
    </me>
    which immediately follows from <xref
    ref="thm_unique_reduced"/>. We leave the third group axiom as
    <xref ref="ex_free_gp_inv"/>.
  </p>

  <p>
    The free group plays a crucial role because of the following
    <term>universal property.</term>
  </p>

  <theorem xml:id="thm_free_gp_universal"><title>The universal
  property of free groups</title>
    <statement>Let <m>G</m> be any group and let <m>F(X)</m> be the
    free group on the alphabet <m>X</m>. Then for any function
    <me>
      \varphi:X \to G
    </me>
    there exists a unique group homomorphism
    <me>
      \varphi^*: F(X) \to G
      </me>  such that <m>\varphi \mid_X = \varphi</m>,
      i.e. <m>\varphi^*</m> is an extension of <m>\varphi</m>.
    </statement>
      <figure xml:id="fig_universal_prop">
	      <caption>The universal property of free groups.</caption>
	      <image width="20%" xml:id="universal_prop">
		<latex-image>
		  \begin{tikzpicture}[xscale=2]
		  \node (FX) at (0,0) {$F(X)$};
		  \node (X) at (0,-1) {$X$};
		  \node (G) at (1,0) {$G$};
		  \path (X) --node[sloped]{$\subset$} (FX);
		  \draw[->] (X) --node[below]{$\forall \varphi$} (G);
		  \draw[dashed,->] (FX)
		  --node[above]{$\exists!\varphi^*$}
		  (G);
		  \end{tikzpicture}
		</latex-image>
	      </image>
      </figure>
  </theorem>

  <p>
    Our approach to Theorem <xref ref="thm_free_gp_universal"/> hinges
    on a consequence of associativity: <term>generalized
    associativity</term>. Since it is difficult to get excited about
    associativity, some discussion is in order.
  </p>

  <p> Division <m>\div</m> is not associative, which means that
  expressions of the form <m>12\div 12 \div 12</m> are not well
  defined:<me> \frac{1}{12} = (12\div 12) \div 12 \neq 12\div(12\div
  12) = 12.</me> Different bracketings give different results. In the
  previous lecture associativity was used to say that a product of
  three elements <m>w_1\star w_2 \star w_3</m> is well-defined, which
  in turn enables us to define subwords. So what about arbitrary
  products such as
  <me>
    g_1g_2\cdots g_n = \prod_{i=1}^n g_i
  </me>?
  The issue here is that our group operation is a <em>binary
  operation</em>. Bracketing simply gives the order in which we
  perform the multiplication operations, multiplying two elements at a
  time. Associativity only says that products of three factors are
  well defined. We will say that a product is <term>nice</term> if it
  looks like
  <me>
    a_1*(a_2*(a_3*a_4))
  </me>
  and other wise a product like <me> ((a_1*a_2)*(a_3*a_4))*a_5</me> is
  called <term>messy</term>. This terminology is neither standard nor
  particularly good. In fact we didn&apos;t even give precise
  definitions. In <xerv ref="ex_nice"/> you are asked to give a
  precise recursive definition of a nice product and then you will be
  asked to prove the following:
  </p>
  <theorem xml:id="thm_gen_assoc"><title>Generalized
  associativity</title>
  <statement>
    Any messy product can be turned into a nice product by a sequence
    of applications of the associativity axiom. Furthermore the order
    the factors is preserved.
  </statement>
  </theorem>

  From which the following immediately follows:

  <corollary xml:id="cor_products">
    <statement>
      In any group (or any algebraic structure with an associative
      binary operation) long products <me>
      g_1\cdots g_n = \prod_{i=1}^n g_i; g_i \in G
    </me>
    are well-defined.
    </statement>
  </corollary>

  <p>
  Here is why we care. Suppose you are given some <m>\varphi:X \to
  G</m> which maps each letter of the alphabet to arbitrary elements
  of <m>G</m>, then we can extend this to a function <m>\varphi^*:
  F(X)\to G</m>. Indeed let <m>w = a_1^{\epsilon_1}\cdots
  a_n^{\epsilon_n}</m>, where each <m>a_i \in X</m> and each
  <m>\epsilon_i \in \{1,-1\}</m>, be some arbitrary element of
  <m>F(X),</m> then we set
  <men xml:id="eq_free_gp">
  \varphi^*(w) = \prod_{i=1}^n\varphi(a_i)^{\epsilon_i}, </men> which
  is a product of elements of <m>G</m>. Generalized associativity
  ensures that this mapping is <em>well-defined.</em> Showing that this is a
  homomorphism is left as an exercise.
  </p>

  <p>If, so far, our treatment has seemed rather formal, this is
  because our goal up to now was to construct a group using nothing
  but the axioms of group theory and some set of letters we had lying
  around and then to show it is satisfied a universal property in the
  category of groups, i.e. <xref ref="thm_free_gp_universal"/>. Such
  universal constructions in algebra look this way.</p>

  <p>It is also worth noting that everybody just seems to assume
  generalized associativity. We will do the same in subsequent
  lectures, in fact we won&apos;t even mention it again, but at least we
  are assured that long products are well defined.</p>
  
  <p>
    We end this lecture with the following result which algebraically
    characterizes free groups.
  </p>
  <corollary xml:id="cor_free_gp">
    <statement>
      Let <m>G</m> be some group with a subset <m>Y\subset G</m> such
      that for any group <m>H</m> and any map <m>f:Y \to H</m>, there is
      an extension of <m>f</m> to a homomorphism <m>f^*:G \to
      H</m>. Then <m>G</m> is isomorphic to the free group
      <m>F(Y)</m>.
    </statement>
  </corollary>
  Recall that although we would call the set <m>Y</m> an alphabet and
  its elements letters, the alphabet can be any set, even elements of
  another group. For clarity, however, we make a copies of sets in the
  proof below.

  <proof>
    <p>
      For clarity let us take <m>X</m> to be a copy of <m>Y</m>,
      i.e. we have a bijection <m>\psi:X\to Y</m> and we denote its
      inverse <m>\phi:Y \to X</m>. We consider <m>Y\subset G</m> and
      <m>X \subset F(X)</m>.
    </p>
    <p>      
      By <xref ref="thm_free_gp_universal"/> there is a homomorphism
      <m>\psi^*:F(X) \to G</m> which extends <m>\psi</m>. By
      hypothesis there is also a homomorphism <m>\phi^*:G \to F(X)</m>
      which extends <m>\phi</m>.
    </p>
    <p>
      Let <m>w = \prod_{i=1}^n x_i</m>, where <m>x_i \in X^{\pm 1}</m>
      be an arbitrary element of <m>F(X)</m>. Then by the definition
      of a homomorphism and generalized associativity we have:<me>
      \phi^*\circ\psi^*\left( \prod_{i=1}^n x_i\right)= \prod_{i=1}^n
      \phi^*\circ\psi^*(x_i) = \prod_{i=1}^n x_i, </me> since on
      <m>X</m>, <m>\phi^*\circ\psi^*= \phi\circ\psi = Id.</m> 
    </p>

    <p>The homomorphisms <m>\psi^*,\phi^*</m> are therefore inverses
    of each other; and thus are isomorphisms.</p>
  </proof>

  <p>
    Any subset <m>Y</m> of a group <m>G</m> with this universal
    mapping property is called a <term>basis of <m>G</m></term>, and
    since we&apos;re <em>free</em> to send elements of <m>Y</m>
    wherever we want, we say that <m>G</m> is a free group with basis
    <m>Y</m>. As is the case in linear algebra, bases are never
    unique, but that is for another lecture (not the next one)!
  </p>
  
  <exercises><title>Lecture 2 exercises</title>
  <exercise xml:id="ex_free_gp_inv">
    <statement>
      <p>Prove that every element in <m>F(X)</m> has an inverse.</p>
    <p>
      Hint: Give the procedure to produce the inverse of a
      word.<em>sdrawkcab etirw.</em>
    </p>
    </statement>
    
  </exercise>
  <exercise xml:id="ex_nice">
    <statement>
    <p>It is an important skill to be able to capture an
    idea with a good definition.</p>
    <p>
      There are two parts to this exercise:
      <ol>
	<li>Give a precise recursive definition of a nice
	product.</li>
	<li>Use this definition to prove <xref
	ref="thm_gen_assoc"/>.</li>
      </ol>      
    </p>
    </statement>
  </exercise>
  <exercise>
    <statement>
      Prove <xref ref="thm_free_gp_universal"/>.
    <p>
      Hint: This really amounts to verifying that the mapping <xref
      ref="eq_free_gp"/> is well-defined (which is ensured by
      generalized associativity) and that it satisfies the
      requirements of a homomorphism. All the work was really done in
      showing generalized associativity.
    </p>
    </statement>
  </exercise>
  </exercises>

    </section>
    <section xml:id="sec_generation_and_presentation"><title>Lecture 3:
    Generating and presenting groups</title>
    <p>
      Long products are group elements are important to us. The
      following lemma gives us a definition of <term>a subgroup
      generated by a collection of elements</term>
    </p>
      <lemma xml:id="lem_generate">
	<statmement>
	  Let <m>H \leq G</m> be a subgroup and let
	  <m>S=\{h_1,\ldots\} \subset G</m> be a set of
	  elements. The following are equivalent:
	  <ul>
	    <li><m>H</m> is the smallest subgroup of <m>G</m>
	    containing <m>S</m>, i.e.
	    <me>
	      H = \bigcap_{S\subset K \leq G} K,
	    </me> i.e. the intersection of all subgroups of <m>G</m>
	    containing <m>S</m>.
	    </li>
	    <li>
	      <m>H</m> consists of all products of elements <m>S^{\pm
	      1}</m>, i.e. <me> H = \left\{h_{i_1}^{\epsilon_1}\cdots
	      h_{i_n}^{\epsilon_n} \in G \mid h_{i_j}\in S, \epsilon_j
	      \in \{\pm 1\}, n \in \ZZ_{\geq 0} \right\}
	    </me>
	    </li>
	  </ul>
	</statmement>
      </lemma>
    <p>
      We will denote the subgroup generated by
      <m>S=\{h_1,\ldots\}</m> as <m>\gen S</m> or
      <m>\gen{h_1,\ldots}</m>.
    </p>
    <proof>
      <p>
      Let us denote by <m>H</m> the smallest subgroup containing
      <m>S</m> and by <m>\gen S</m> set of products of elements in
      <m>S^{\pm 1}</m>. <m>\gen S</m> is closed under multiplication
      and taking inverses so it&apos;s a subgroup of <m>G</m>. By
      definition, it&apos;s therefore immediate that <m>H \subset \gen S</m>.
      </p>

      
      <p>
      To see that <m>H \supset \gen S</m>, we proceed by induction on
      the length of a product. By definition any product of length 1,
      being an element of <m>S^{\pm 1}</m>, is in <m>H</m>. If every
      product of length at most <m>n</m> is in <m>H</m>, then, because
      a product of length <m>n+1</m> is a product of a product of
      length <m>n</m> and a product of length <m>1</m> and because
      <m>H</m>, being a subgroup, is closed under multiplication,
      every product of length <m>n+1</m> is also in
      <m>H</m>. Therefore, by induction, <m>H \supset \gen S</m> and
      equality follows.
      </p> 
    </proof>
    <p>
    Any set <m>S \subset G</m> such that <m>G = \gen S</m> is
    called a <term>generating set of G</term>.  If <m>G</m> has a
    finite generating subset <m>\{g_1,\cdots,g_k\}\subset G</m> then
    we way <m>G</m> is <term>finitely generated.</term>

    The <term>rank</term> of a group <m>G</m> is the minimal
    cardinality achieved by its generating sets, though this
    terminology is less standard and typically has other meanings in
    different group theoretical contexts.
    </p>

    <p> Since <m>G = \gen G</m>, every finite group is finitely
    generated and it is a standard fact that every symmetric group
    <m>S_n</m> has rank 2. It&apos;s already more impressive when an
    infinite group has finite rank. Here are three examples:
    <ul>
      <li>
	If <m>X = \{a,b,c\}</m> then the free group <m>F(X)</m> has
	rank 3. In general if <m>|X|=n</m> then we will say that
	<m>F(X)</m> is a <term>free group of rank <m>n</m>.</term>
      </li>
      <li>
	<m>\GL 2 \ZZ</m>, the group of <m>2\times 2</m> invertible
	matrices with <m>\ZZ</m> coefficients also has rank 2, indeed
	it is generated by elementary matrices:
	<me>
	  \GL 2 \ZZ = \gen{
	  \begin{bmatrix}
	  0&amp;1\\
	  1&amp;0
	  \end{bmatrix},
	  \begin{bmatrix}
	  1&amp;1\\
	  0&amp;1
	  \end{bmatrix}
	  }.
	</me>
      </li>
      <li>
	<m>\pi_1(M)</m>, where <m>M</m> is a compact finite
	dimensional manifold is also finitely generated.
      </li>
    </ul>
    </p>

    <p>If <m>\gen S =G</m>, then by <xref
    ref="thm_free_gp_universal"/>, there is an epimorphism, or a
    surjective homomorphism, <m>\varphi:F(S) \onto G</m>. So it is immediate
    that if <m>G</m> has rank <m>n</m> then it is the homomorphic
    image of a free group of rank <m>n</m>.</p>

    <p>
      In any case if <m>G = \gen S</m> and <m>X</m> is any alphabet
      such that <m>|X| = |S|</m>, by the First Isomorphism Theorem for
      groups we have
      <me>
	F(X)/\ker(\varphi) \approx G.
      </me>     
    </p>

    <p>
      Let us fix some more terminology before continuing. If <m>g,h
      \in G</m>, then the <term>conjugate of <m>g</m> by
      <m></m>h</term> is
      <me>
	g^h = h^{-1} g h.
      </me> Some people write <m>g^h = h g h^{-1}</m>, but they are
      <em>wrong</em> because we should have <m>(g^h)^k =
      g^{hk}</m>. Although it looks weird, it makes more sense to write
      <me>
	{~}^h g = h gh^{-1} = g^{h^{-1}}.
	</me> The correct notation is
	consistent with the concepts of left and right actions.
    </p>

    <p>
      Recall that a normal subgroup <m>N \triangleleft G</m> is a
      subgroup that is closed under conjugation by arbitrary elements
      in <m>G</m>, and the class of normal subgroups coincides with
      the kernels of homomorphisms from <m>G</m>. Consider now the
      concept of <term>normal generation</term>:
    </p>
    <proposition xml:id="prop_normal_gen">
      <statement>
	Let <m>R\subset G</m> be some subset. Then
	the smallest normal subgroup of <m>G</m> containing <m>R</m>
	coincides with
	<me>
	  \ncl R = \left\{\prod_{i=1}^n c_i^{-1}r_i^{\epsilon_i} c_i
	  \middle |
	  r_i \in R,\epsilon_i \in \{\pm 1\}, c_i \in G, n \in
	  \ZZ_{\geq 0}\right\},
	</me> the set of products of conjugates of elements in
	<m>R^{\pm 1}</m>.
      </statement>
    </proposition>
    <p>
    We leave the proof to <xref ref="ex_normal_gen"/>.
    </p>

    <p>
      So if <m>R \subset F(X)</m> is a subset then we call we call the
      the pair <m>\pres X R</m> a <term>presentation</term> for the
      group
      <me>
	F(X)/\ncl R.
      </me>
      The set <m>X</m> is called the <term>generators</term> and the
      set <m>R</m> is called the <term>relations.</term>
    </p>
    <p>
      For the rest of the course we will make the following
      abuse of notation. If there is an epimorphisms <m>f:F(X) \onto
      G</m> and <m>\ker(f) = \ncl R</m> then we will just go ahead and
      write
      <me>
	G = \pres X R.
      </me>
      There will come a time we will need to be subtle about the fact
      that <m>\pres X R</m> is just a set of letters and a set of
      strings separated by a pipe inside angled brackets and that in
      fact <m> G \approx F(X)/\ncl R</m>. When that time comes we will
      say so. If there exists some <m>R \subset F(X)</m> such that
      <m>G = \pres X R</m> and <m>|R|\lt\infty</m>, then we will say
      that <m>G</m> is <term>finitely presentable</term> and if the set
      <m>R</m> is explicitly given, then <m>G</m> is said to be
      <term>finitely presented</term>. We will not usually make a
      distinction between these two terms and <em>we will usually just
      say that <m>G</m> is finitely presented.</em>
    </p>


    <p>
      By expressing <m>G = \pres X R</m>, we are identifying <m>G</m>
      with the set of words in <m>X</m> modulo the equivalence
      relation generated by the following rewriting rules
      <ul>
	<li>
	  Elementary cancellations, and their inverses.
	</li>
	<li>
	  Insertion of subwords from <m>R</m>, i.e. write <m>w</m> as
	  a word and "splice in" <m>r</m> somewhere:
	  <me>
	    w = w_1*w_2 \to w_1*r*w_2,
	  </me>
	  for some <m>r \in R</m>, and the inverse operation: deleting
	  a subword that lies in <m>R</m>
	</li>
      </ul>
      The group multiplication operation is again concatenation of
      words. The last two exercises are about this group of strings
      with this rewriting system.
    </p>
    
    <exercises>
      <exercise xml:id="ex_normal_gen">
	<statement>
	  <p>Prove <xref ref="prop_normal_gen"/>.</p>
	  <p>Hint: This is similar to the proof of <xref
	  ref="lem_generate"/> the only issue is that if you take a
	  conjugate of a product of conjugates, i.e. <me>
	  g^{-1} \left(\prod_{i=1}^n \left(c_i^{-1}r_i c_i\right) \right)g,
	</me> then it&apos;s not clear that the result is again a product
	of conjugates. See what happens when you conjugate each factor
	of the product by <m>g</m>.
	  </p>	
	</statement>
      </exercise>
      <exercise>
	<statement>
	  <p>
	  Let <m>w \in F(X)</m> be written as a word, let <m>R</m> be
	  a subset of <m>F(X)</m> and consider the new word
	  <m>w&apos;</m> obtained by inserting some element <m>r \in
	  R</m>, i.e.
	  <me>
	    w = w_1*w_2 \to w_1*r*w_2.
	  </me>
	  Show that there are elements <m>h,k \in \ncl R</m> such
	  that:
	  <me>
	    hw = w&apos; = wk.
	  </me>
	  </p>
	  <p>
	    Hint: conjugate <m>r</m> by a prefix or suffix of of
	    <m>w</m>.
	  </p>
 	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>
	    For this exercise, formally define <m>\pres X R</m> to be
	    the group of words in <m>X</m> modulo the equivalence
	    relation generated by the rewriting rule given at the end
	    of the lecture and multiplication given by concatenation.
	    <ol>
	      <li> Prove that <m>\pres X R</m> is a
	      group. (Optional)</li>
	      <li> Assuming the previous item, prove <me> \pres X R
	      \approx F(X)/\ncl R.
	    </me>
	      </li>
	    </ol>
	  </p>
	</statement>
      </exercise>
    </exercises>
  </section>

  <section xml:id="lec_cayley_graphs"><title>Lecture 4: Cayley
  graphs</title>

  <p>
    So far we have been very combinatorial. Let&apos;s get geometric!
    First recall that a directed graph <m>Z</m> consists of a set
    <m>V</m> of <term>vertices</term> and a set <m>E \subset V\times
    V</m> of directed <term>edges</term>. If we want we can also
    <term>label</term> the directed edges using some symbol from some
    alphabet.
  </p>

  <p>
    Given a generating set <m>S\subset G</m> of a group <m>G</m> we
    can form a <term>Cayley graph</term>, denoted <m>\cay S G</m>, by
    taking the vertex set be the set <m>G</m> itself and for each <m>a
  \in S</m> and each <m>g \in G</m> we draw the directed edge labelled
  <m>a</m> from <m>g</m> to <m>ga</m>:
    <image width="15%" xml:id="cayley_edge">
      <latex-image>
	\begin{tikzpicture}[xscale =2]
	\node[vertex] (u) at (0,0) {};
	\node[vertex] (v) at (1,0) {};
	
	\draw (u)--node[sloped]{$\blacktriangleright$}(v);
	\path (u) --node[above]{$a$} (v);
	\draw (u) node[above]{$g$} ;
	\draw (v) node[above]{$ga$} ;
	\end{tikzpicture}
      </latex-image>,
    </image>
    where the group element is drawn above the vertex. Thus <m>g =
    a_1\cdots a_n.</m>
  </p>

  <p>Let&apos;s do an example. Consider <m>D_{2\times 3}</m>, the
  dihedral group of order 6, or the symmetry group of the triangle. It
  is generated by <m>\rho</m>, the clockwise rotation by
  <m>120^\circ</m>, and <m>r</m> the reflection about the vertical
  axis. We let <m>D_{2 \times 3}</m> act on the left.
  </p>
  <p>
    It is known that <m>D_{2\times 3}</m> has 6 elements, we draw
    its Cayley graph <m>\cay{\{\rho,r\}}{D_{2\times 3}}</m> here
    where next to each vertex <m>g \in G</m> we have the result of
    applying <m>g</m> to the triangle.
    <figure xml:id="fig_cay_d6">
      <caption>The Cayley graph <m>\cay{\{\rho,r\}}{D_{2\times
      3}}</m></caption>
      <image width="75%" xml:id="D6_gens" source="images/Cay_D6.png"/>
    </figure>
    Note that our left action convention means that, say, the element
    <m>r\rho</m>, mean "first rotate, then reflect." The result is that
    the transformed triangles in <xref ref="fig_cay_d6"/> don&apos;t
    immediately look in the right place.    
  </p>

  <p>
    Because they are highly symmetric, Cayley graphs are aesthetically
    pleasing, and they essentially play the role of a multiplication
    table in a group. Unfortunately (see <xref ref="ex_S3_cay"/>) a
    group has multiple Cayley graphs, depending on the choice of
    generating set. 
  </p>


  <p>
    Infinite groups also have Cayley graphs. Consider for example
    <m>\ZZ\oplus\ZZ = \ZZ^2</m> which is the set
    <me>
      \ZZ^2= \{(n,m) \mid n,m \in \ZZ\}
    </me>
    equipped with component-wise addition. If we take generators <m>a =
    (1,0)</m> and <m>b=(0,1)</m> then <m>\cay{\{a,b\}}{\ZZ^2}</m> looks
    like:
    <figure xml:id="fig_cay_ZZ2">
      <caption>A Cayley graph for  <m>\ZZ^2</m></caption>
      <image width="75%" xml:id="cay_ZZ2" source="images/Cay-Z2.png">
      </image>
    </figure>
  </p>
  
  <p>
    Every edge <m>e</m> in a directed labelled graph has an
    <term>initial</term> vertex <m>\iota(e)</m>, a
    <term>terminal</term> vertex <m>\tau(e)</m> and a label
    <m>\lab(e)</m>. For example if <m>e=(u,v)</m>, where <m>u,v</m> are
    vertices then <m>\iota(e)=u,\tau(e)=v</m>. We may define the
    <term>formal inverse</term> <m>e^{-1}</m> of an edge <m>e</m> so
    that <m>\tau(e)=\iota(e^{-1})</m> and <m>\tau(e^{-1})=\iota(e)</m>
    and the label <m>\lab(e^{-1}) = \lab(e)^{-1}.y</m>
  </p>
  <p>
    A <term>path</term> in a directed graph <m>Z</m> with edge set
    <m>E</m> is a sequences of edges and formal inverses:
    <me>
      \alpha: e_1\cdots e_n; e_i \in E^{\pm 1}
    </me>
  that "connect together", i.e. <m>\tau(e_i) = \iota(e_{i+1})</m> for
  <m>1\leq i \lt n</m>. The <term>initial point</term> of a path is
  the vertex <m>\iota(e_1)</m> and the <term>terminal vertex</term> is
  the vertex <m>\tau(e_n)</m>. We say that the path <m>\alpha</m>
  <term>goes from its initial vertex to its terminal
  vertex</term>. Here&apos;s an example:
  <image width="15%" xml:id="graph_path">
      <!-- picture of a path in a graph -->
  </image>
  A path is said to be <term>reduced</term> if it has no subpaths of
  the form <m>e e^{-1}</m> for some <m>e \in E^{\pm 1}</m>.
  </p>
  <p>
    This is similar to our treatment of words in an alphabet. The only
    distinction is that you can only concatenate paths if one starts
    where the other ends. Otherwise there is associativity and even a
    reduction procedure where we successively delete subpaths of the
    form <m>ee^-1</m> which we can call
    <term>tightening</term>. Everything works out like in <xref
    ref="reductions"/>, we can even define inverses. Such a structure,
    which is almost like a group except that multiplication is not
    always defined is called a <term>groupoid</term>.
  </p>
  <p>
    If the reader has any experience with fundamental groups in
    topology, then this should also look familiar, as all we are doing
    here is giving a combinatorial treatment of a path:
    <me>
      f:[0,1] \to Z
    </me>
    where the graph <m>Z</m> is thought of as a topological
    space. Specifically, a CW complex with 0 and 1 dimensional cells.
  </p>
  
  <p>
    Given a path <m>\alpha = e_1\cdots e_n</m>, we will say that its
    <term>length</term> is <m>n</m>, the number of edges is contains
    and its <term>label</term> is the word
    <me>
      \lab(\alpha) = \lab(e_1)\cdots\lab(e_n).
    </me>
  </p>
  <p>
    The whole point of <xref ref="reductions"/> was that in a free
    group on a specified alphabet distinct reduced words correspond to
    distinct elements. Once relations are added this is no longer the
    case. Indeed if <m>G = \pres X R</m> and given two distinct
    reduced words <m>w</m> and <m>w&apos;</m> in the alphabet <m>X</m>
    it may be that <m> w \neq_{F(X)} w&apos;</m> (i.e. they are
    distinct reduced words) but that viewed as products of generators
    of <m>G</m> we have <m>w =_G w&apos;</m>, i.e. they have the same
    image via the standard map <m>F(X) \to \pres X R</m>.
  </p>
  <p>
    The Cayley graph illustrates this nicely:
  </p>
  <lemma xml:id="lem_cay_paths_elements">
    <statement>
      <p>
	Let <m>S \subset G</m> be generating set. Let <m>\beta</m> be a
	path in <m>\cay S G</m>that goes from the identity <m>1</m> to
	some element <m>g \in G</m> (recall that the vertices of <m>\cay
	S G</m> are the elements of <m>G</m>) then, viewed as a product
	of element in <m>S^{\pm 1}</m> we have:
	<me>
	  \lab(\beta) =_G g
	</me>
      </p>
    </statement>
  </lemma>
  <proof>
    <p>Let <m>\beta:e_1\cdots e_n</m> and let <m>\lab(e_i) = a_i \in
    S^{\pm 1}</m>. Then by the definition of a Cayley graph we have
        <image width="75%" xml:id="path_elements">
      <latex-image>
	\begin{tikzpicture}[xscale =2]
	\node[vertex] (u1) at (0,0) {};
	\node[vertex] (u2) at (1,0) {};
	\node[vertex] (un) at (3,0) {};
	
	\draw (u1)--node[sloped]{$\blacktriangleright$}(u2);
	\path (u1) --node[above]{$a_1$} (u2);
	\draw (u1) node[above]{$1$};
	\draw (u2) node[above]{$a_1$};
	\path (u2) --node{$\cdots$}(2,0);
	\draw (un) node[above]{$a_1\cdots a_n$} ;
	\draw (2,0)--node[sloped]{$\blacktriangleright$}(un);
	\path (2,0) --node[above]{$a_n$} (un);
	\end{tikzpicture}
      </latex-image>
    </image>
    </p>
  </proof>
  <exercises>
    <exercise xml:id="ex_S3_cay">
      <statement>
	<p>
	  It is well-known that <m>D_{2\times 3} \approx S_3</m>, the
	  group of permutations of the set
	  <m>\{1,2,3\}</m>. <m>S_3</m>, like any symmetric group, is
	  generated by permutations. Using cycle notation we have
	  <me>
	    \gen{(1,2),(2,3)} = S_3.
	  </me>
	</p>
	<p>
	  Draw the Cayley graph <m>\cay{\{(1,2),(2,3)\}}{S_3}</m> and
	  compare it with the Cayley graph for <m>D_{2\times 3}</m>
	  shown above.
	</p>
      </statement>
    </exercise>

    <exercise>
      <statement>
	<p>
	  We always have <m>\gen G = G</m>. What does <m>\cay G G</m>
	  look like?
	</p>
      </statement>
    </exercise>
    
    <exercise>
      <statement>
	<p>
	  Let <m>S\subset G</m> be a generating set. Let <m>d:G\times
	  G \to \RR</m> be the function defined as <m>d(g,h)=m</m>,
	  where <m>m</m> is the length of the shortest path in <m>\cay
	S G</m> from <m>g</m> to <m>h</m>.
	</p>
	<p>
	  Show that <m>d</m> is a metric on <m>G</m>. This metric is
	  called the <term>word metric</term> on <m>G</m>.
	</p>
      </statement>
    </exercise>
    
    <exercise xml:id="ex_cay_ZZ_ZZ2">
      <statement>
	<p>
	  The group <m>(\ZZ,+)</m> is generated by <m>1</m> (here the
	  identity is 0, so that <m>1_\ZZ = 0</m>). Consider the
	  generating set <m>\{1,10\} = \{a,b\}</m> of <m>\ZZ</m>.
	</p>
	<p>
	  Sketch <m>\cay{\{a,b\}}\ZZ</m>. What can you say about the
	  ball of radius 4 about the identity in
	  <m>\cay{\{a,b\}}\ZZ</m> compared to the ball of radius 4
	  about the identity in <m>\cay{\{a,b\}}{\ZZ^2}</m>
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p>
	  Let <m>X</m> be a finite alphabet, let <m>F(X)</m> be the
	  free group on <m>X</m> and consider <m>X</m> as a generating
	  set of <m>F(X)</m>. Prove that <m>\cay{X}{F(X)}</m> is a tree.
	</p>
	<p> Hint: A tree is a connected graph without any cycles. The
	label of a cycle in a group&apos;s Cayley graph must be
	reduced product that equals the identity.  </p> </statement>
      </exercise> </exercises> </section>

      <section
	  xml:id="sec_homs_tietze"> <title>Lecture 5: Homomorphisms
	  and Tietze transformations</title> <p> Let&apos;s return to
	  group presentations. In the previous lectures we drew Cayley
	  graphs for <m>D_{6 \times 3}</m> and <m>\ZZ^2</m>, we will
	  now try to compute presentations. Before continuing <em>a
	  word of caution:</em> in general, working with presentations
	  is very tricky. Specifically (and we will discuss this
	  properly in a couple lectures) there is not general
	  procedure which determines if a finite presentation gives a
	  nontrivial group.</p>

  <p>Let&apos;s start with a presentation for <m>D_{2\times 3}</m>. We saw
  in Lecture <xref ref="lec_cayley_graphs"/> that <m>D_{2\times 3}</m>
  was generated by elements <m>\rho,r</m>. Therefore by the universal
  property of free groups there is a surjective homomorphism:
  <md>
    <mrow>\amp \varphi: F(r,\rho) \onto D_{2\times 3}</mrow>
    <mrow>\amp \Rightarrow D_{2\times 3} \approx F(r,\rho)/\ker(\varphi)</mrow>
  </md>
  and we are left to find a normal generating set for
  <m>\ker(\varphi)</m>. We must be careful because adding relations
  has consequences, so we must not add too many. We first note that
  the following elements are trivial in <m>D_{2\times 3}</m>:
  <me>
    \rho\rho\rho=_{D_{2\times 3}} rr =_{D_{2\times 3}} r\rho r \rho
    =_{D_{2\times 3}} 1.
  </me>
It therefore follows that <m>\ncl{\rho\rho\rho,rr,r\rho r\rho} \leq
\ker\varphi</m> which means that there is a surjective homomorphism
<men xml:id="eq_d6_pres">
  \pres{r,\rho}{\rho\rho\rho,rr,r\rho r\rho}\onto D_{2\times 3}.
</men>
In other words, we have not added too many relations, we must now
verify that we have added sufficiently many relations. In order to
show this we will use a <term>normal forms argument</term>. We will
show that for the group <m>H = \pres{r,\rho}{\rho\rho\rho,rr,r\rho
r\rho}</m>, we will be able to use the relations to rewrite any
element as
<men xml:id="eq_d6_nf">
  w(r,\rho) =_H \rho^i r^j; 0\leq i \leq 2, 0\leq j \leq 1
</men>
so that <m>H</m> has only 6 elements and there fore the mapping <xref
ref="eq_d6_pres"/> is not only surjective, but also injective and
therefore and isomorphism.
  </p>

  <p>
    The relations <m>\rho\rho\rho=1</m> and <m>rr=1</m> imply that any
    word <m>w(\rho,r)</m> in <m>H</m> can be written as an alternation
    of powers of <m>\rho</m> of exponent between 0 and 2, and of the
    letter <m>r</m>, for example <me> \rho^2 r \rho^2 r \rho r \rho.
    </me>
    We now want to show that any word can be brought to the desired
    form.
  </p>

  <p>
    Suppose that the final factor was of the form <m>\rho^m</m>
    so that<me> w = \cdots r \rho^m</me> then we can splice-in the
    inverse of a relation so that:<me> w = \cdots r \rho \rho^{m-1} =
    \cdots r \rho (\rho^{-1}r^{-1}\rho^{-1}r^{-1})\rho^{m-1} = \cdots
    \rho^{-1}r^{-1} \rho^{m-1}</me> and since <me> r^{-1} = r^{-1}(rr)
    =r</me> we have <me> w = \cdots\rho^{-1}r \rho^{m-1}</me>
    repeating this process removes the last <m>\rho</m> power
    syllable. This is progress, but the argument is tiresome!
  </p>

  <p>
    Although we could do everything by splicing in and deleting
    relations, applying elementary reductions and their inverses, we
    can also just use group theory to replace subwords by equal
    elements.
  </p>
  <p>
   In <m>H</m> we have <men xml:id="eq_d6_commute"> r \rho r \rho =1
   \Rightarrow r \rho = \rho^{-1}r^{-1} = \rho^2 r </men> which means
   we can can simply replace any subword <m>\cdots r\rho \cdots</m> by
   <m> \cdots \rho^2r\cdots </m>. In this manner, we can "commute" all
   the <m>\rho</m> symbols to the left of the word, giving <m>w =
   \rho^k r^j</m>, and since <m>\rho^3=r^2=1</m> the exponents
   <m>k,j</m> can be taken to be division remainders so we can rewrite
   any word in <m>H</m> as in <xref ref="eq_d6_nf"/>. Therefore the 3
   relations <m>\rho\rho\rho, rr, r\rho r\rho</m> ensure the group has
   6 elements.
  </p>
  
  <p> Let us now consider homomorphisms given from groups with
  presentations.</p>
  <lemma xml:id="lem_pres_hom">
    <statement>
      Let <m>G</m> be some group and let <m>H = \pres X R</m> be a
      group given by a presentation. A mapping <m>\varphi^*:X \to
      G</m> extends to homomorphism <m>\varphi:H \to G</m> if and only
      if for each <m>r(X) = x_1^{\epsilon_1}\cdots x_n^{\epsilon_n} \in
      R</m>, where <m>x_i \in X, \epsilon_i \in \{\pm 1\}</m> upon
      substitution in <m>G</m> we get:
      <me>
	\varphi^*(x_1)^{\epsilon_1} \cdots \varphi^*(x_n)^{\epsilon_n}
	=_G 1.
      </me>
    </statement>
  </lemma>
  <p>
    One consequence of this equations. Let <m>G</m> be a group, let
    <m>x_1,\ldots,x_n</m> be a collection of unknowns and consider a
    system of equations:
    <me>
      \mathcal{E} :\left\{
      \begin{array}{l}
      r_1(X) = x_{i_{11}}^{\epsilon_{11}}\cdots
      x_{i_{1c_1}}^{\epsilon_{1c_1}}=_G 1\\
      \cdots\\
      r_m(X) = x_{i_{m1}}^{\epsilon_{m1}}\cdots x_{i_{mc_m}}^{\epsilon_{mc_m}}=_G 1\\
      \end{array}
      \right.,
    </me>
    where <m>x_{i_{jk}} \in X</m> and <m>\epsilon_{jk} \in \{\pm
    1\}</m>. Then the solutions of <m>\mathcal E</m> are precisely the
    given by the homomorphisms
    
    <me>
      \pres{x_1,\ldots,x_n}{r_1,\cdots,r_m} \to G.
    </me>
  </p>

  
  <p>
    As we saw in the previous lecture, different choices of generating
    sets gave different Cayley graphs. We will now describe all
    possible presentations of a group.
  </p>

  <p>
    Let <m>\mathcal P = \pres X R</m> be a presentation (not a group,
    but a formal presentation) and consider the following three
    <term>Tietze</term> transformations.
    <ul>
      <li><term>T1: The dictionary transformation.</term><me>
      \pres X R \to \pres{X \cup \{y\}}{R\cup\{y^{-1}w(X)\}},
    </me>
    where <m>y \not\in X</m> and <m>w(X)</m> is a word in <m>X</m>.
    Informally, add a new symbol for an element <m>y</m> and say that
    <me>
      y = w(X) \Leftrightarrow y^{-1}w(X)=1.
    </me>
    So that they new symbol <m>y</m> is just "shorthand" for the
    element <m>w(X)</m>.
      </li>
      <li><term>T2: Add a redundant relation.</term><me>
      \pres X R \to \pres{X}{R\cup\{r&apos;\}},</me> where <m>r&apos; \in \ncl
      R</m>. Informally, add a relation <m>r&apos;</m> which is already a
      consequence of the relations in <m>R</m>.</li>
      <li><term>T3: Rename a symbol.</term> Take some symbol <m>z
      \not\in X</m>, take <m>X&apos;=(X\setminus \{x\})\cup\{z\}</m> and do
      <me>\pres X R \to \pres{X&apos;}{R&apos;},</me> where <m>R&apos;</m> is
      obtained by replacing every instance of <m>x</m> by <m>z</m> in
      every word in <m>R.</m></li>
    </ul>
    <xref ref="ex_tietze_1"/> is to show that these transformations
    yield presentations defining isomorphic groups. Note that the
    inverse of T1 involves deleting a generator and a very specific
    type of relation and the inverse of T2 involves removing a
    relation that is a consequence of the remaining relations. 
  </p>

  <p>
    As promised we have the following:
    <theorem xml:id="thm_tietze_trans">
      <statement>
	<p>
	  Two finite presentations <m>\pres X R</m> and <m>\pres Y S</m>
	  define isomorphic groups if and only if <m>\pres Y S</m> can
	  be obtained from <m>\pres X R</m> by a sequence of Tietze
	  transformations and their inverses.
	</p>
      </statement>
    </theorem>
    The proof is deferred to <xref ref="ex_tietze_2"/>.
  </p>
  <exercises>
    <exercise xml:id="ex_ZZ2_pres">
      <statement>
	<p>Prove that <me>\ZZ^2 = \pres{a,b}{a^{-1}b^{-1}ab}</me>.</p>
	<p>Hint: Use the same approach as for <m>D_{2\times 3}</m>,
	use the normal forms <m>a^nb^m, n,m \in \ZZ</m>.</p>
      </statement>
    </exercise>
    <exercise xml:id="ex_lem_hom">
      <statement>
	<p>Prove <xref ref="lem_pres_hom"/>.</p>
      </statement>
    </exercise>
    <exercise xml:id="ex_d6_commute">
      <statment>
	Deduce the result of <xref ref="eq_d6_commute"/>, namely that
	we can substitute <m>r\rho</m> by <m>\rho^2 r</m>, only by
	using insertions and deletions of relations, elementary
	cancellations or their inverses. <em>Or at least try and
	appreciate how useful the axioms of group theory and
	generalized associativity are.</em>
      </statment>
    </exercise>
    <exercise xml:id="ex_tietze_1">
      <statement>
	<p>
	  Prove that all three Tietze transformations give
	  isomorphisms.
	</p>
      </statement>
    </exercise>
    <exercise xml:id="ex_tietze_2">
      <statement>
	<p>
	  Prove <xref ref="thm_tietze_trans"/>.
	</p>
	<p>
	  Hint: One direction is obvious. To show the converse one
	  approach is to construct an intermediate presentation <me>
	  \pres{X \cup Y}{ R \cup S \cup D}</me> which is obtainable
	  from <m>\pres X R</m> and from <m>\pres Y S</m> by a
	  sequence of Tietze transformations. <m>D</m> will be a bunch
	  of dictionary relations.
	</p>
	<p>
	  Some dictionary relations will be needed. To find them
	  consider an isomorphism <m>\varphi: \pres X R \to \pres Y
	  S.</m> This will map each <m>x \in X</m> to some word in
	  <m>Y</m>. You will also need <m>\varphi^{-1}</m> and add
	  relations.
	</p>
      </statement>
    </exercise>
    
  </exercises>  
  </section>


  <section xml:id="sec_alg_prob"><title> Lecture 6: Algorithmic
  problems in group theory and elements of recursion theory</title>
  <p>
    Our combinatorial approach to group theory naturally turns groups
    into computational objects: sets of strings with rewriting
    rules. In the 1920s Max Dehn proposed the following three
    algorithmic problems:
    <ul>
      <li>
	<term>The word problem:</term> Given a group presentation <m>G
	= \pres X R</m> and word <m>w(X)</m> in the alphabet <m>X</m>
	determine if <m>w(X)=_G 1</m>.
      </li>
      <li>
	<term>The conjugacy problem:</term> Given a group presentation
	<m>G = \pres X R</m> and words <m>w(X),u(X)</m> in the
	alphabet <m>X</m> determine if <em>there exists</em> some <m>g
	\in G</m> such that <m>g^{-1}w(X)g=_G u(X).</m>
      </li>
      <li>
	<term>The isomorphism problem:</term> Given two group
	presentations <m>\pres X R</m> and <m>\pres Y S</m> determine
	if they define isomorphic groups.
      </li>
    </ul>    
  </p>
  <p>
    First the bad news:
    <theorem xml:id="thm_novikov_boone"><title>The Novikov-Boone
    theorem</title>
    <statement>
      <p>There exists a finitely presented group
      <m>G=\pres{x_1,\ldots,x_n}{r_1,\ldots,r_m}</m> for which the
      word problem is undecidable.</p>
    </statement>
    </theorem>

    Let&apos;s explain this result in more detail. There exists a group
    presentation which you can actually write out so that for any
    algorithm you come up with, for example a computer program written
    in Python, to determine <em>correctly</em> whether words are equal
    to the trivial element, there will be a word (in fact many, many
    words) for which your algorithm will never terminate.    
  </p>

  <p> We say a set <m>S</m> is <term>recursively enumerable</term> or
  <term>r.e.</term> if there is some algorithm <m>\mathfrak A</m>
  which enumerates the elements of <m>S</m>.
  <proposition xml:id="prop_trivial_re"><title>Trivial elements are
  recursively enumerable</title>
  <statement>
    <p>
      Let <m>G=\pres {x_1,\ldots,x_n}{r_1,\ldots,r_m}</m> be a
      finitely presented group. Then the set
      <me>
	\mathcal E = \left\{w(X) \mid w(X) \textrm{ is reduced and }
	w(X)=_G 1\right\} </me> of reduced words equal to <m>1</m> is
	recursively enumerable.
    </p>
  </statement>
  <proof>
    <p>
      By <xref ref="prop_normal_gen"/> the set <m>\mathcal E</m>
      consists of taking all products
      <me>
	\prod_{i=1}^n c_i^{-1}r_{j_i}^{\epsilon_i}c_i
      </me>
    </p> where <m>r_{j_i} \in \{r_1,\cdots,r_m\}, \epsilon_i \in \{\pm
    1\}</m> and then performing free reduction. Consider the sets
    <m>\mathcal E_N</m> consisting of all products consisting of at
    most <m>N</m> factors <m>c_i^{-1}r_{j_i}c_i</m>, and where each
    conjugator also has length at most <m>N</m>. Then <m>\mathcal
    E_N</m> is recursively enumerable for each <m>N</m> therefore so
    must the countable union<me> \mathcal E = \bigcup_{N=1}^{\infty}
    \mathcal E_N.
  </me>
  </proof>
  </proposition>
  </p>
  <p>
    Although enumeration seems somewhat contrived, it is fact
    equivalent the more mathematically natural concept of set
    membership.
    <proposition xml:id="prop_re_membership">
      <statement>
	<p> Let <m>S</m> be a set of strings of symbols in some
	alphabet <m>X</m>. The following are equivalent:
	<ul>
	  <li>There exists a <term>membership algorithm</term>
	  <m>\mathfrak A</m> which takes as inputs strings in <m>X</m>
	  with the following property: <m>s \in S</m> if and only if
	  <m>\mathfrak A</m> terminates on the input <m>s</m>.</li>
	  <li> <m>S</m> is recursively enumerable. </li>
	</ul>
	</p>
      </statement>
      <proof>
	<p>
	  Suppose first you are given the algorithm <m>\mathfrak A</m>
	  as in the statement of the proposition. Let
	  <m>w_1,w_2,\ldots</m> be an enumeration of the strings in
	  <m>X</m> and let <m>\mathfrak M_N</m> be a program which
	  performs the <m>N</m> first steps of <m>\mathfrak A</m> on
	  the inputs <m>w_1,\ldots,w_N</m>. If one of the parallel
	  processes terminates then <m>\mathfrak N</m> outputs the
	  string <m>w_j</m> of the corresponding terminating
	  process. Then our enumeration algorithm is an algorithm
	  which sequentially runs
	  <m>\mathfrak N_{1},\mathfrak N_2,\ldots</m>.
	</p>

	<p>
	  Conversely suppose <m>S</m> is <m>r.e.</m> and let
	  <m>\mathfrak B</m> be the enumeration algorithm. Then we can
	  make our membership algorithm <m>\mathfrak A</m> a follows:
	  gien an input <m>s</m>, run <m>\mathfrak B</m> and wait
	  until <m>s</m> appears, if it ever does, stop.
	</p>
      </proof>
    </proposition>
  </p>
  <p>
    Now, in general, when asking <me> x \stackrel{?}{\in} S</me> we
    expect a definitive yes or no answer. So consider the finitely
    presented group <m>G = \pres X R</m>, then the word problem is
    decidable if and only if <m>\mathcal E</m>, the set of reduced
    words representing <m>1</m> in <m>G</m> is r.e. and the set
    <m>F(X)\setminus \mathcal E</m> of reduced words not representing
    the identity is also recursively enumerable. Indeed, in this case,
    there is a procedure which is guaranteed to terminate on any
    reduced word and correctly say whether or not the word is trivial.
  </p>
  <p>
    So how does this work with <xref ref="thm_novikov_boone"/>? Well
    <xref ref="prop_trivial_re"/> says that all trivial elements can
    be enumerated, so what is difficult is to show that some reduced
    word represents a non-trivial element. This is equivalent to
    saying that some word <em>cannot</em> be written as a product of
    conjugates of the relations. Thus, asserting that a word is
    non-trivial, is a <em>non-existence</em> statement: there does not
    exist a product of conjugates of relators that is freely equal to
    some word.
  </p>
  <p>
    It is a common theme in mathematics that non-existence proofs are
    difficult. One of the triumphs of geometric group theory is that
    we can solve all three of Dehn&apos;s problems for many interesting
    classes of groups. Next lecture we will do this for free groups.
  </p>
  
  <exercises>
    <exercise xml:id="ex_free_gp_wp">
      <statement>
	<p>Show that the word problem is solvable for <m>F(X)</m>, the
	free group on the alphabet <m>X</m>.</p>
	<p>Hint: This problem is not difficult.</p>
      </statement>
    </exercise>
    <exercise xml_id="ex_equality_problem">
      <statement>
	<p> The <term>equality problem</term> for <m>G = \pres X R</m>
	is do decide, given two words, whether:
	<me>
	   u \stackrel ? = w.
	</me>
	Show that solvability of the equality problem is equivalent to
	solvability of the word problem.
	</p>
      </statement>
    </exercise>
    <exercise xml:id="ex_conjugacy_search">
      <statement>
	<p> The <term>conjugacy search problem</term> is a variation
	of the conjugacy problem which, given elements <m>h,k</m>, not
	only outputs YES or NO to the question of whether they are
	conjugate, but, if YES, will also produce an element such that
	<me>
	  g^{-1}hg = k
	</me>
	</p>
	<p>
	  Show that solvability of the conjugacy search problem is
	  equivalent to solvability of the conjugacy problem.
	</p>
      </statement>
    </exercise>
    <exercise xml:id="ex_pres_re">
      <statement>
	<p>
	  Let <m>G = \pres X R</m> be a finite presentation.
	</p>
	<p>
	  Show that (up to relabeling the generators) the set of all
	  finite presentations which define groups isomorphic to
	  <m>G</m> is recursively enumerable.
	</p>
      </statement>
    </exercise>

    <exercise xml:id="ex_recursively_presented">
      <statement>
	<p>
	  We say that <m>G = \pres X R </m> is <term>recursively
	  presented</term> if there are algorithms <m>\mathfrak{X}</m>
	  and <m>\mathfrak{R}</m> which enumerate the sets
	  <m>X=\{x_1,x_2,\ldots\}</m> and <m>R=\{r_1,r_2,\ldots\}</m>
	  (respectively.)	  
	</p>
	<p> Show that if <m>G = \pres X R</m> is a recursive
	presentation, then the set of finite words is recursively
	enumerable.</p> 
      </statement>
    </exercise>
  </exercises>
</section>

<section xml:id="sec_free_group_dehn"><title>Lecture 7: Solving Dehn&apos;s
algorithmic problems in the class of finitely generated free
groups.</title>
<p>
  We already saw that the isomorphism class of <m>F(X)</m> was
  determined by the cardinality <m>n=|X|</m>, so we&apos;ll fix the
  following notation <me>
  F_n = \pres{a_1,\ldots,a_n}{}.
</me>
Solving the word problem in <m>F_n</m> is straightforward: bring a
word to reduced form and make the obvious conlcusion.
</p>

<p>
  Although the isomorphism problem is undecidable if you&apos;re working
  over arbitrary finite presentations. In practice we usually consider
  the isomorphism problem resricted to a class of groups. For finitely
  generated free groups we are asking whether it is possible that
  <m>m\neq n</m> but that <m>F_n \approx F_m</m>. We will see that the
  answer is "no", but before doing so a couple observations are in
  order.
</p>
<p>
  First of all, we will see later on that for any <m>m,n</m> (in fact
  we could even take the countably infinite cardinal
  <m>m=\aleph_0</m>) there is an injective homomorphisms
  <me>
    F_m \into F_n.
  </me>
  In fact in the early 2000s it was proved that all finite rank free
  groups have the same elementary theory. All this to say that
  directly showing that free groups of different rank are
  non-isomorphic is difficult.
</p>
<p>
  Given any group <m>G</m> we can consider the <term>commutator
  subgroup</term><me>[G,G] = \ncl{\{g^{-1}h^{-1}gh\mid g,h \in
  G\}}.</me> The quotient:
  <me>
    G \onto G/[G,G]
  </me> is called the <term>abelianization</term> of <m>G</m> and it
  is an abelian group since
  <me>
    g^{-1}h^{-1}gh=1 \Rightarrow gh=hg.
  </me>
  Fans of category theory will rejoice to observe that the
  abelianization map is a functor from the category fo groups to the
  category of abelian groups.
</p>
<p>
  For free groups, the abelianization is
  <me>
    F_n \onto F_n/[F_n,F_n] \approx \ZZ^n. 
  </me>
  Now if this were linear algebra we would have <m>\dim(\ZZ^n)=n</m>
  and vector spaces are isomorphic if and only if they have the same
  dimension. Thus
  <me>
    F_n \approx F_m \Leftrightarrow F_n/[F_n,F_n] \approx F_m/[F_m,F_m]
    \Leftrightarrow \ZZ^n \approx \ZZ^m \Leftrightarrow m = n.
  </me>
 Unfortunately <m>\ZZ</m> isn&apos;t a field. However, there is a canonical
 algebraic constructions which embeds <m>\ZZ^n</m> into <m>\QQ^n</m>
 (or any <m>\ZZ</m>-module into a <m>\QQ</m>-vector space) is called
 <term>extension of scalars</term> and we get can use linear algebra
 again:
 <me>
   \dim_\QQ\left(\left(F_n/[F_n,F_n]\right)\otimes_{\ZZ}\QQ\right)=n.
 </me>
 So the number <m>n</m> in <m>F_n</m> is determined by algebraic
 structure, and that solves the isomorphism problem.
</p>
<p>
  Actually there is a name for this group invariant.
  <definition xml:id="def_first_betti_number">
    Let <m>G</m> be a finitely generated group then <m>b_1(G)</m>, the
    <term>first Betti number</term> of <m>G</m> is the torsion-free
    rank of the the abelianization <m>G/[G,G]</m>, viewed as a
    <m>\ZZ</m>-module or
    <me>
      b_1(G) = \dim_\QQ\left(G/[G,G]\otimes_\ZZ\QQ\right)
    </me>
  </definition>
</p>

<p>
  Let&apos;s now tackle the conjugacy problem. A useful tool for free
  groups is cancellation diagrams. Note that for the remainder of the
  section we will sometimes put a <m>\cdot</m> to denote
  multiplication for emphasis. Let <m>w_1</m> and <m>w_2</m> be
  reduced words then we have the cancellation diagram:
  <figure xml:id="fig_canc_diag">
    <caption>The cancellation bewteen two words.</caption>
    <image width="75%" xml:id="canc_diag" source="images/canc_diag.png"/>
  </figure>
</p>
<p>
And we denote by <m>p(w_1,w_2)</m> the maximal co-terminal subword of
<m>w_1</m> that cancels in the product <m>w_1\cdot w_2</m>. We will
call this the <term>pinch in the product <m>w_1\cdot w_2</m>.</term>
</p>
<p>
  When conjugating <m>u^{-1}\cdot w \cdot u</m> we can obtain different
  combinatorial types of cancellation diagrams.
    <figure xml:id="fig_conj_canc_diag">
    <caption>The cancellations in a conjugation.</caption>
    <image width="75%" xml:id="conj_canc_diag" source="images/conj_canc.png"/>
  </figure>
</p>

<p>
  Let&apos;s now solve the conjugacy problem. The conjugacy class of
  <m>w</m> consists of the set <m>\{g^{-1}w g \mid g \in G\}</m>.
  <definition xml:id="def_cyclically_reduced">
    <statement>
      A reduced word <m>w=x_1\cdots x_{m} \in F_n</m>, <m>x_i \in
      \{a_1,\ldots,a_n\}^{\pm 1}</m> is <term>cyclically reduced</term>
      if <m>x_1 \neq x_m^{-1}.</m>
    </statement>
  </definition>
  <lemma xml:id="lem_cr_algo">
    <statement>
      <p>
	Given a reduced word <m>w \in F_n</m>, there is an algorithm to find a
	word <m>u</m> such that <m>uwu^{-1}</m> is cyclically reduced.
      </p>
    </statement>
  </lemma>
  <lemma xml:id="lem_cr_min">
    <statement>
      In <m>F_n</m>, a cyclically reduced word has minimal length
      within its conjugacy class.
    </statement>
  </lemma>
  <lemma xml:id="lem_cyclic_perm">
    <statement>
      Given any cyclically reduced word <m>w=x_1\cdots x_{m} \in
      F_</m>, 
      <ul>
	<li>any cyclic permutation <m>w&apos;=x_j\cdots x_m x_1\cdots
	x_{j-1} \in F_n</m> of <m>w</m> can be obtained by
	conjugation, and </li>
	<li> all cyclically reduced conjugates of <m>w</m> are cyclic
	permutations.
	</li>
      </ul>
    </statement>
  </lemma>
  <corollary xml:id="cor_conj_problem">
    <statement>
      The conjugacy problem in <m>F_n</m> is solvable.
    </statement>
    <proof>
      Given two words <m>u,w \in F_n</m>, by <xref ref="lem_cr_algo"/>
      we can algorithmically conjugate them to cyclically reduced
      forms <m>u&apos;,w&apos;</m> respectively. By <xref ref="lem_cr_min"/> and
      <xref ref="lem_cyclic_perm"/> <m>u</m> and <m>w</m> are
      conjugate if and only if <m>u&apos;</m> is equal to one of the
      finitely many cyclic permutations of <m>w&apos;.</m>
    </proof>
  </corollary>
</p>
<exercises>
  <exercise>
    <statement>
      <p>
	Let <m>G = \pres{a,b,c}{aa,abc,bab^{-1}a^{-1}}</m>. Compute
	<m>b_1(G)</m>.
      </p>
      <p>
	Hint: Work in abelianizations. Let <m>a,b,c</m> be the vectors
	<m>\pmatrix{1\\0\\1},\pmatrix{0\\1\\0},\pmatrix{0\\0\\1}</m>
	respectively. The relations also correspond to vectors,
	e.g. <m>abc=\pmatrix{1\\1\\1}</m>. Now
	<m>G/[G,G]\otimes_\ZZ\QQ</m> is the vector space
	<me>
	  V=\QQ^3/U
	</me>
	where <m>U</m> is the subspace spanned by the relation
	vectors, and <m>\dim(V)=3-\dim(U)</m>.
      </p>
    </statement>
  </exercise>
  <exercise>
    <statement>
      <p>
	Prove <xref ref="lem_cr_algo"/>
      </p>
    </statement>
  </exercise>
    <exercise>
    <statement>
      <p>
	Prove <xref ref="lem_cr_min"/>
      </p>
    </statement>
    </exercise>
    <exercise>
    <statement>
      <p>
	Prove <xref ref="lem_cyclic_perm"/>
      </p>
    </statement>
    </exercise>
</exercises>
</section>
</chapter>

<chapter>
  <title>First elements of geometric group theory</title>

  <section xml:id="sec_qi_fg">
    <title>Lecture 8: Quasi isometries</title>
    <p>
      Back in <xref ref="lec_cayley_graphs"/> we saw that a choice of
      generating set <m>G = \gen A</m> gave rise to a Cayley graph
      <m>\cay A G</m> which in turn endows <m>G</m> with a metric
      <m>d_{\cay A G}</m>. However, the subject matter in the previous
      sections should have reinforced the fact that there should be no
      expectation that such a metric be <em>canonical</em> for the
      group. A surprisingly successful strategy has been to
      simultaneously consider all possible metrics on <m>G</m> that
      arise from choices of finite generating sets. This motivates the
      following definition.
    </p>


    <p>
    <alert>Spoiler:</alert> Quasi isometry is an unreasonably
    effective tool in group theory. 
    </p>
    
    <definition xml:id="def_qi_embedding">
      <title>Quasi isometric embedding</title> Let <m>(X,d_X)</m> and
      <m>(Y,d_Y)</m> be metric spaces. We say a function <m>f:X \to
      Y</m> is a <term><m>(K,C)</m>-quasi isometric embedding</term>
      where <m>K,C</m> are strictly positive real numbers and we have
      <men xml:id="eq_qi_i">
	\frac{1}{K}d_y(f(x_1),f(x_2))-C \leq d_X(x_1,x_2) \leq
	Kd_Y(f(x_1,f(x_2)) + C,
      </men> for every <m>x_1,x_2 \in X</m>.
    </definition>
    <p>We can always make the numbers bigger.</p>
    <lemma xml:id="lem_bigger">
      <statement>
	<p>
	  If <m>f:X \to Y</m> is a <m>(K,C)</m>-quasi isometric
	  embedding and <m>K&apos;>K, C&apos;>C</m> then <m>f</m> is also a
	  <m>(K&apos;,C&apos;)</m>-quasi isometric embedding.
	</p>
      </statement>
      <proof>
	<xref ref="ex_bigger"/>.
      </proof>
    </lemma>
    <p>
      Often we will omit the bounds <m>(K,C)</m> and simply talk of a
      quasi isometric embedding, i.e. we&apos;ll say that <m>f:X \to Y</m>
      is a <term>quasi isometric embedding</term> if there exist
      numbers <m>(K,C)</m> that satisfy the requirement of <xref
      ref="def_qi_embedding"/>.
    </p>
    <definition xml:id="def_coarsely_dense">
      <title>Coarsely dense</title>
      <p>
	Let <m>(X,d_x),(Y,d_y)</m> be metric spaces and let <m>f:X \to
	Y</m> be a quasi-isometric embedding. We&apos;ll say its image is
	<term><m>D</m>-coarsely dense</term> if there is some
	<m>D>0</m> such that for every <m>y\in Y</m> there exists some
	<m>x_y \in X</m> such that:
	<me>
	  d_Y(y,f(x_y))\leq D.
	</me>
      </p>
    </definition>
    <p> As before, we will say that the image of a quasi isometry is
    <term>coarsely dense</term>, if it is <m>D</m>-coarsely dense for
    some <m>D>0</m>. In this business, the actual parameters don&apos;t
    always matter.</p>
    <definition xml:id="def_qi">
      <title>Quasi isometry</title>
      <p>
	Let <m>(X,d_X),(Y,d_Y)</m> be metric spaces and let <m>f:X \to
	Y</m> be a quasi isometric embedding. We say that <m>f</m> is
	a quasi-isometry if there exists a quasi isometric embedding <m>g:Y \to
	X</m> called a <term>quasi-inverse</term> such that there is
	some number <m>D</m> such that:
	<ul>
	  <li>For all <m>x \in X</m>, <m>d_X(x,g(f(x))\leq D</m>,
	  and</li>
	  <li>For all <m>y \in Y</m>, <m>d_Y(y,f(g(y))\leq D</m>.
	  </li>
	</ul>
      </p>
    </definition>
    <p>
      Another way to say this is that the compositions <m>g\circ f</m>
      and <m>f\circ g</m> are <term><m>D</m>-close to the
      identity</term>.
    </p>
    <p>
      We will finally state two results and leave proofs and examples
      as exercises.
    </p>
    <proposition xml:id="prop_cay_qi_invariance">
      <satement>
	<p>
	  Let <m>A,B</m> be two different finite generating sets of a
	  group <m>G</m>, then the Cayley graphs <m>\cay A G</m> and
	  <m>\cay B G</m> are quasi isometric.
	</p>	
      </satement>
      <proof>
	<xref ref="ex_cay_qi_invariance"/>
      </proof>
    </proposition>

    <proposition xml:id="prop_quasi_dense_qi">
      <statement>
	<p>
	  Let <m>(X,d),(Y,d)</m> be metric spaces. Prove that if
	  <m>f:X \to Y</m> is quasi isometric embedding with a
	  coarsely dense image, then <m>f</m> is a quasi-isometry.
	</p>
      </statement>
      <proof>
	<xref ref="ex_quasi_dense_qi"/>.
      </proof>
    </proposition>
    
    <exercises>
      <exercise xml:id="ex_bigger">
	<statement>
	  Prove <xref ref="lem_bigger"/>.
	</statement>
      </exercise>
      <exercise>
	<statement>
	  <p>Show that quasi isometry gives an equialence relation
	  between metric spaces.</p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>The following question is stated in the context of
	  function <m>f:X\to Y</m> between metric space.
	  </p>
	  <p>
	    By a <term>linear growing function</term> we mean a linear
	    function <m>\ell(x) = mx +b</m> where <m>m,b \in \RR</m>
	    and <m>m>0</m> (like in Calculus 1.) Show the following:
	    <ol>
	      <li> If there is a linear growing function <m>\ell_r(x)</m> such
	      that <me>d_Y(f(x),f(y)) \leq \ell_r(d_X(x,y))</me>, then
	      there is a linear growing function <m>\ell_l(x)</m> such that
	      <me>
		\ell_l(d_Y(f(x),f(y))) \leq d_X(x,y)
	      </me></li>
	      <li>
		Show that if there are linear growing functions
		<m>\ell_1,\ell_2</m> such that for all <m>x,y \in
		X</m> we have <me> d_X(x,y) \leq \ell_1(d_Y(f(x),f(
		y))) </me> and
		<me>
		  d_Y(f(x),f(y)) \leq \ell_2(d_X(x,y)),
		</me>
		then <m>f:X\to Y</m> is a quasi isometric embedding.
	      </li>
	    </ol>
	  </p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>
	    Let <m>\Gamma</m> be a graph and let <m>V(\Gamma)</m> be
	    it&apos;s vertex set. Let <m>V(\Gamma)</m> be equipped with the
	    metric induced by <m>\Gamma</m>. Suppose every edge has
	    length <m>1</m> and consider a retraction <me>r:\Gamma
	    \to V(\Gamma)</me> where each edge interior is mapped to
	    some adjacent vertex. Show that <m>r</m> is a
	    quasi-isometry.
	  </p>
	</statement>
      </exercise>
      
      <exercise xml:id="ex_cay_qi_invariance">
	<statement>
	  <p>Prove <xref ref="prop_cay_qi_invariance"/>.</p>
	  <p>Hint: Look back at <xref ref="ex_tietze_2"/></p>
	  <p>Other hint: In this case you are considering the a group
	  <m>G</m> with two metrics <m>d_A</m> and <m>d_B</m> (from
	  two finite generating sets of <m>G</m>) and function you
	  want to use is the identity. Show that there are linear
	  functions <m>\ell_1,\ell_2</m> such that
	  <me>
	    d_A(x,y) \leq \ell_1(d_B(x,y))\textrm{ and } d_B(x,y) \leq
	    \ell_2(d_A(x,y)), 
	  </me>
	  for all <m>x,y \in G.</m>
	  </p>
	</statement>
      </exercise>
      <exercise xml:id="ex_quasi_dense_qi">
	<statement>
	  <p> Prove <xref ref="prop_quasi_dense_qi"/>.</p>
	  <p> Hint: Although the statement of <xref
	  ref="prop_quasi_dense_qi"/> doesn&apos;t have any parameters, you
	  should start by fixing parameters.</p>
	  <p>Other hint: for a quasi-inverse define <m>g(y)</m> to be
	  some <m>x\in X</m> such that <m>d_Y(f(x),y)</m> is
	  minimal, or at least unifomly bounded for all <m>y</m> (this
	  is where <m>D</m>-coarsely dense becomes important.)
	  </p>
	</statement>
      </exercise>
      
      <exercise xml:id="ex_qi_1">
	<statement>
	  <p>
	    Prove that with the standard Euclidean metric that the
	    mapping
	    <md>
	      <mrow> \RR \amp \to \RR^2</mrow>
	      <mrow> x \amp \mapsto (x,0)</mrow>
	    </md>
	    Is a quasi-isometric embeding, but not a quasi-isometry.
	  </p>
	</statement>
      </exercise>
      
      <exercise>
	<statement>
	  <p>
	Consider the graph <m>\Gamma= \cay{\{1\}} \ZZ</m>, i.e. the
	real line with vertices at integer points. Let&apos;s conisider
	what happens when we change the lengths of edges.
	<ol>
	  <li> Fix <m>0\lt a\lt b\in \RR </m>. Show that if for each edge
	  <m>e</m> of <m>\Gamma</m>
	  we randomly change its length to some number
	  <m>a\lt\ell_e\lt b</m> then the resulting metric space
	  <m>\Gamma&apos;</m> is quasi-isometric to <m>\Gamma</m>.</li>
	  <li> Show that if we let the length of edges be any <m>0 \lt
	l_e \leq 1</m>, then the resulting graph may not be
	  quasi-isometric to <m>\Gamma</m></li>
	</ol>
	  </p>
	  <p>
	    Hint: if edges schrink too much maybe the graph will have
	    finite diameter.
	  </p>
	</statement>
      </exercise>
    </exercises>
    
  </section>

  <section>
    <title>Lecture 9: Can anything be expressed by quasi
    isometry?</title>
    <p>
      Two metric spaces are the same if they are isometric. In the
      previous section we saw although there is no canonical
      <term>word metric</term> on a group, if we consider metric
      spaces only up to quasi isometry, then we do obtain something
      canonical: namely the <term> quasi isometry class of word
      metrics coming from finite generating sets.</term> The issue
      then becomes that maybe quasi isometry is too vague and that all
      groups are quasi isometric. <em>For quasi isometry to be useful,
      it must be able to tell groups apart.</em>
    </p>

    <p>
      All finite groups are quasi isometric to the metric space
      consisting of a single point, so this viewpoint is not useful
      for the study of finite groups. We also see that quasi isometry
      is able to distinguish finite groups from infinite groups, but
      that isn&apos;t particularly impressive.
    </p>

    <p>
      In this lecture we will show that the groups <m>\ZZ</m> and
      <m>\ZZ^2</m> are not quasi isometric and we will prove <xref
      ref="thm_svarc_milnor"/>, the Svarc-Milnor Lemma, which has far
      reaching consequences such as the fact that if <m>K \leq H</m>
      is a finite index subgroup then <m>H</m> and <m>K</m> are quasi
      isometric. This gives us a limitation of how much can be
      determined by quasi isometry. 
    </p>
    
    <p>
      Let <m>x</m> be a point in a metric space <m>(X,d)</m>, let
      <m>r\gt 0</m> be some number, then we define the <term>closed
      ball of radius <m>r</m> about <m>x</m></term> to be the set
      <me>
	B(x,r) = \{ y \in X \mid d(x,y) \leq r\}.
      </me>
      When it is clear from the context in which metric space a given
      ball lies, we will not bother explicitly giving the metric.
    </p>

    <p> It is worth recalling from <xref ref="ex_cay_ZZ_ZZ2"/> that
    for any ball about the identity in the standard Cayley graph of
    <m>\ZZ^2</m>, we can find a generating set of <m>\ZZ</m> which
    gives the exact same ball about the identity.  In other words, at
    small and medium scales word metrics will not distinguish
    <m>\ZZ</m> and <m>\ZZ^2</m>
    </p>

    <p>
      The proof of the following is known as an
      <term>asymptotic</term> argument.
    </p>
    
    <proposition xml:id="prop_z2_not_qi_z">
      <statement>
	<p>The groups <m>\ZZ</m> and <m>\ZZ^2</m> are not quasi
	isometric.</p>
      </statement>
      <proof>
	<p>
	  We take the standard cayley graphs <m>\cay{\{1\}}{\ZZ}</m>,
	  the line, and
	  <m>\cay{\left\{\pmatrix{1\\0},\pmatrix{0\\1}\right\}}{\ZZ^2}</m>,
	  the infinite grid, and equip <m>\ZZ</m> and <m>\ZZ^2</m>
	  with the induced word metric.
	</p>
	<p>
	  Suppose towards a contradiction that <m>\ZZ</m> and
	  <m>\ZZ^2</m> were quasi-isometric. Then there would exist a
	  <m>(K,C)</m>-quasi isometric embeding <m>f:\ZZ^2 \to
	  \ZZ</m>. Consider the balls <m>B(1,r) \subset \ZZ^2</m>, on
	  the one hand they look like diamonds and contain
	  <m>|B(1,r)|=O(r^2)</m> points. On the other hand, because we
	  have a quasi-isometric embedding we have a containment.
	  <me>f(B(1,r)) \subset B(f(1),Kr+C) \subset \ZZ.</me> Since
	  <m>\ZZ</m> is a line we have <me> |B(f(1),Kr+c)| = O(r).
	</me>
	</p>

	<p> Because the cardinality of <m>B(1,r) \subset \ZZ^2</m> grows
	faster than the cardinality of <m>B(f(1)),Kr+C) \subset
	\ZZ</m> the restrictions <m>f|_{B(1,r)}</m> will be far from
	injetive, in partiular as <m>r \to \infty</m> then maximal
	number of preimages of a point in <m>B(f(1),Kr+C)</m> via the
	restrictions <m>f|_{B(1,r)}</m> must also go to infinity.
	</p>

	<p>
	  Pick <m>M</m> so large that any subset of <m>\ZZ^2</m> with
	  <m>M</m> or more elements must have diameter at least
	  <m>K\cdot(1+C)</m> and pick <m>r</m> so large that some
	  element <m>z_0 \in B(f(1),Kr+C)</m> has at least <m>M</m>
	  <m>f|_{B(1,r)}</m>-pre images.
	</p>

	<p>
	  On the one hand there must be elements <m>y,y&apos; \in
	  \ZZ^2</m> such that <m>f(y)=f(y&apos;)=z_0</m> but
	  <m>d(y,y&apos;)\geq K\cdot(1+C)</m>. But by definition of a
	  quasi-isometric embedding we must have
	  <men xml:id="eq_z2_to-z">
	    \frac 1 K d(y,y&apos;) -C \leq d(f(y),f(y&apos;))) = d(z_0,z_0)=0,
	  </men>
	  but
	  <me>
	    d(y,y&apos;)\geq K\cdot(1+C) \Rightarrow \frac 1 K (K(1+C)) -C
	    = 1 \leq 0
	  </me>
	  which is a contradiction. It follows that there can be no
	  quasi-isometric embedding from <m>\ZZ^2</m> to <m>\ZZ</m>.
	</p>
      </proof>
    </proposition>

    <p>
      So at least now we have established that quasi isometry is maybe
      not a completely useless notion as it can tell at least two
      groups apart. Quasi isometry, however, does have limitations and
      we will now explore these.
    </p>

    <p>
      From now on we will asssume our spaces <m>X</m> are path
      connected metric spaces, the readier at this point is free to
      assume that <m>X</m> is a connected graph, all of whose edges
      have a given length (usually they have unit length). A
      <term>path</term> is a continuous mapping
      <me>
	p: \underbrace{[0,L]}_{\subset \RR} \to X.
      </me>
      and we can define its speed at <m>s</m> as
      <me>
	|\dot p(s)| = \lim_{h \to 0^+}\frac{d(p(s+h),p(s))}{h}.
      </me>
    If <m>X</m> is a graph, viewing edges as isometric copies of
    intervals of <m>\RR</m> we can make sense of this for almost all
    values of <m>s \in [0,L]</m>.
    </p>
    <p>
    Integrating speed gives <term>arc length</term> and we say that
    <m>p</m> is <term>arc length parameterized</term> if <m>|\dot
    p(s)| =1</m> for all <m>s \in [0,L]</m>. We say that a path is a
    <term>geodesic</term> if it is a shortest path between its
    endpoints <m>p(0)</m> and <m>p(L)</m> and we can define the
    <term>path metric</term> to be given by the minimal length of all
    paths joining two points. A metric space is called a geodesic
    metric space if its metric coincides with the path metric.
    </p>
    <p>
      We assume the reader knows what a left group action
      <md>
	<mrow> G \times X \amp \to X</mrow>
	<mrow> (g,x) \amp \mapsto g\cdot x</mrow>
      </md>
      on a space is. We will use the <m>\cdot</m> symbol to denote the
      action of a group element on a point. We say that <term><m>G</m>
      acts by isometries</term> on <m>(X,d)</m> if for every <m>g \in
      G</m> and every <m>x,y \in X</m> we have:
      <me>
	d(x,y) = d(g\cdot x,g\cdot y).
      </me>
    </p>
    <p>
      For our current purposes it will be sufficient to only consider
      our metric spaces to be path connected graphs, but the results
      we state will be be more general. For our purposes a
      <term>compact set</term> is a finite subgraph. An <term>action
      by isometries </term> is an action by graph automorphisms. The
      action of <m>G</m> on a graph <m>X</m> is <term>proper</term> if
      the stablizer of any vertex is finite. The <term> quotient <m>G
      \backslash X</m></term> of an action has vertices that conist of
      equivalence classes
      <me>
	[v] =\{ u \in V(X) \mid \textrm{for some } g \in G, g\cdot u
	=v\}
      </me>
      and edges
      <me>
	[e] =\{ f \in E(X) \mid \textrm{for some } g \in G, g\cdot f
	=e\}
      </me>
      and is itself a graph. The action of <m>G</m> on <m>X</m> is
      <term>cocompact</term> if <m>G\backslash X</m> is finite and a
      <term>coarse fundamental domain</term> is compact subset
      <m>K \subset X</m> whose <m>G</m> translates cover <m>X</m>,
      i.e.
      <me>
	X = G\cdot K.
      </me>
    </p>

    <p>With all this terminology out of the way, we can start proving
    results.</p>

    <p>We will first state a useful result without proof. It follows
    from a careful consideration of the definitions.</p>
    <lemma>
      <statement>
	If a group <m>G</m> acts properly, cocompactly and by
	isometries on a graph <m>X</m>, then <m>X</m> is locally
	finite, i.e. all vertices are adjacent to only finitely many
	edges. In particular balls of finite radius only contain
	finitely many elements.
      </statement>
    </lemma>
    

    <lemma xml:id="lem_proper_action">
      <statement>
	<p>
	  Let <m>G</m> act properly and cocompactly on a path
	  connected graph <m>X</m> with a distinguished vertex
	  <m>p_0</m> by isometries. Then the following are true:
	  <ol>
	    <li xml:id="it_proper_1">There is some <m>r_0>0</m> such that <m>X = G\cdot
	    B(p_0,r_0)</m>, i.e. <m>G</m>-translates of <m>B(p_0,r_0)</m>
	    cover <m>X</m>.</li>
	    <li xml:id="it_proper_2"> The subset
	    <me>
	      R_s=\{g \in G \mid g\cdot B(p_0,s)\cap B(p_0,s)\neq \emptyset\} \subset G
	    </me> is <em>finite</em> for all radii <m>s>0</m>.
	    </li>
	    <li xml:id="it_proper_3">
	      Let <m>r_0</m> be as in <xref ref="it_proper_1"/>. Then
	      set
	      <me>
		S = R_{r_0}=\{g \in G \mid g\cdot B(p_0,r_0)\cap
		B(p_0,r_0)\neq\emptyset\}
	      </me>
	      is a generating set for <m>G</m>, i.e. <m>G = \gen S.</m>
	    </li>
	  </ol>
	</p>
      </statement>
      <proof>
	<p>Let&apos;s first prove <xref ref="it_proper_1"/>. Because the
	action is cocompact the quotient <m>G\backslash X</m> is a
	finite graph. Let <m>[v_1],\ldots,[v_k]</m> and
	<m>[e_1],\ldots,[e_l]</m> be the vertices and edges of
	<m>G\backslash X</m> respectively. For vertex each
	<m>[v_i]</m> of the quotient pick some vertex <m>[v_i]\ni \hat
	v_i \in V(X)</m> and for each edge <m>[e_j]</m> of the
	quotient pick some edge <m>[v_j]\ni \hat e_j \in E(X).</m>
	</p>
	<p>
	  Since cells of <m>G\backslash X</m> corespond to
	  <m>G</m>-orbts, for every <m>v \in V(X)</m> there is some
	  <m>g \in G</m> such that <m>g\cdot v = v_i</m> for some
	  <m>i</m> and the analogous statement also holds for
	  edges. Because the set of cells
	  <me>
	    C=\{\hat v_1, \ldots, \hat v_k,\hat e_1,\ldots \hat e_l\}
	    \subset X </me> is finite and <m>X</m> is path connected
	    there must be some sufficiently large <m>r_0</m> so that
	    <m>C \subset B(p_0,r_0)</m>.
	</p>

	<p>
	  Let&apos;s now prove <xref ref="it_proper_2"/>. Suppose towards a
	  contradiction that for some set <m>s>0</m> the subset <m>R_s
	  \subset G</m> is infinite. Since <m>B(p_0,s)</m> is finite
	  there must be some vertex <m>v_0 \in B(p_0,s)</m> such and
	  an infinite subset <m>\{g_1,g_2,\ldots\}</m> such that
	  <me>
	    v_0 \in \bigcap_{i=1} g_i \cdot B(p_0,s)
	  </me>
	  Let <m>w_i = g_i^{-1}\cdot v_0</m>. On the one hand <m>w_i \in
	  B(p_0,s)</m>, on the other hand since <m>B(p_0,s)</m> is
	  finite there must be infinitely many <m>w_i</m>&apos;s that are
	  equal, say <me>
	  w_{i_1}=w_{i_2} = \cdots
	</me>
	but then it follows that the elements<me> g_{i_j}g_{i_1}^{-1};
	j=1,2,3,4,\ldots </me> are all distinct, but all fix the the
	point <m>v_0</m>. This contradicts the hypothesis that the
	action of <m>G</m> on <m>X</m> is proper.
	</p>

	<p>
	  Finally we can prove <xref ref="it_proper_3"/>. Consider
	  first the set <me>V = G\cdot p_0 = \{v \in V(X)\mid v =
	  g\cdot p_0, \textrm{ for some } g \in G\}.</me> And suppose
	  towards a contradiction that <m>\gen{S} \subsetneq G.</m>
	</p>

	<p>
	  <em>Claim: <m>\gen S \cdot p_0 = V</m>.</em> Suppose this
	  was not the case, let <m>w_0 = g \cdot p_0</m> be an element
	  of minimal distance from <m>\gen S \cdot p_0</m>. Let
	  <m>u_0 \in \gen S \cdot p_0</m> be a point closest to
	  <m>w_0</m> and let <m>\alpha</m> be a path from <m>u_0</m>
	  to <m>w_0</m> that realizes their distance.
	</p>
	<p>
	  On the one hand there is some <m>s \in \gen S</m> such that
	  <m>s \cdot p_0 = u_0</m>, on the other hand there is some
	  vertex <m>u_1</m> a distance 1 from <m>u_0</m> along the
	  path <m>\alpha</m> which is strictly closer to <m>w_0</m>
	  than <m>u_0</m>. The element <m>s^{-1} \cdot u_1</m> is
	  distance <m>1</m> from <m>p_0</m>. There is some <m>h \in
	  G</m> such that <m>h \cdot p_0 = (s^{-1}\cdot u_1)</m> and
	  since <m>s^{-1}\cdot u_1 \in h \cdot B(p_0,3\cdot r_0) \cap
	  B(p_0,r_0) \neq \emptyset</m> we have that <m>h \in
	  S</m>. It now follows from equations above that <me>sh\cdot
	  p_0 = s\cdot (s^{-1}\cdot u_1) = u_1.</me> Thus, <m>u_1 \in
	  \gen S \cdot p_0</m>, but this contradicts that <m>u_0 \in
	  \gen S \cdot p_0</m> is as close as possible to <m>w_0.</m>
	  <em>This proves the claim.</em>
	</p>
	<p>
	  So suppose finally towards a contradiction that <m>\gen S
	  \subsetneq G</m>. Then there is some <m>G \ni g \not\in \gen
	  S</m>. By the claim above there is some <m>s\in \gen S</m>
	  such that <m>s^{-1}\cdot (g\cdot p_0) = p_0</m>, so that
	  <m>s^{-1}g</m> fixes <m>p_0</m>, but then <m>s^{-1}g \in
	  S</m> which implies that <m>g \in \gen S</m> which is a
	  contradiction.
	</p>
      </proof>
    </lemma>

    <p>
      The proof above illustrates the potent combination of a proper,
      cocompact action by isometries. Such an action is typically
      called <term>a geometric action</term>. The lemma above gives an
      unexpected consequence:
    </p>
    <corollary xml:id="cor_geometrical_fg">
      <statement>
	If a group <m>G</m> acts geometrically on a path connected
	graph <m>X</m> then <m>G</m> is finitely generated.
      </statement>
    </corollary>

    <p>
      Recall that the quasi isometry class of a group <m>G</m> is the
      smallest quasi isometry class which contains all word metrics on
      <m>G</m>. In particular the statement below makes complete sense
      without having to specify some metric on <m>G</m>.
    </p>
    
    <theorem xml:id="thm_svarc_milnor">
      <title>
	The Svarc-Milnor Lemma
      </title>
      <statement>
	If <m>G</m> acts geometrically on a geodesic metric space
	(e.g. a graph) <m>X</m>, then <m>G</m> is quasi-isometric to
	<m>X</m>
      </statement>
      <proof><title>sketch</title>
      <p>First note that by hypthesis
      <m>G\cdot p_0</m> is coarsely dense in <m>X</m> and in fact
      quasi isometric to <m>X</m>. So we need need only show that
      <m>G</m> is quasi isometric to <m>G \cdot p_0 \subset X</m>. We
      will show that the following map
      <md>
	<mrow> f:G \amp \to p_0</mrow>
	<mrow> g \amp \mapsto g\cdot p_0</mrow>
      </md>
      is a quasi-isometric embedding. Since it is surjective the
      result will follow.
      </p>

      <p>
	By <xref ref="lem_proper_action"/>, <xref ref="it_proper_3"/>
	<m>S = R_{r_0}</m> is a finite generating set of <m>G</m>,
	therefore(by <xref ref="lem_proper_action"/>, <xref
	ref="it_proper_3"/>) so must be <m>A = R_{3r_0}</m>. We equip
	<m>G</m> with the finite generating set <m>A</m>.  Note that
	for each <m>a \in A</m> we have <me> d_X(p_0,a\cdot p_0) \leq
	6\cdot r_0
      </me>
      
      So if <m>g = a_1\cdots a_n</m> is a product of minimal length
      representing <m>g \in G</m>, i.e. <m>d_A(1,g)=n</m> then
      considering the broken path:
      </p>
      <p>
      <image width="75%" xml:id="svarc_minor_1"
	     source="images/svarc_milnor_1.png"/>
      </p>
      <p>
      we have by the triangle inequality that
      <me>
	d_X(p_0,g\cdot p_0) \leq 6\cdot r_0 d_A(1,g),
      </me>
      which is one inequality we need to show.
      </p>
      <p>
	We now need to bound <m>d_A(1,g)</m> above by some linear
	function of <m>d_X(p_0,g\cdot p_0)</m>. This follows by noting
	that every point of <m>X</m> is a distance at most <m>r_0</m>
	from some point in <m>G\cdot p_0</m> ( <xref
	ref="lem_proper_action"/>, <xref ref="it_proper_1"/>) and that
	every point in <m>v\in G \cdot p_0 \cap B(p_1,3r_0)</m> there
	is some <m>a</m> such that <m>a \cdot p_0 = v</m>. The picture
	below which is obtained by dividing the shortest path from
	<m>P_0</m> to <m>g\cdot P_0</m> into a minimal number of
	segments of length at most <m>r_0</m> implies that <m>d_A(1,g)
	\leq \frac{1}{r_0}d_X(p_0,g\cdot p_0)+1</m>.
      </p>
      <p>
	  <image width="75%" xml:id="svarc_minor_2"
	     source="images/svarc_milnor_2.png"/>
	</p>
       <p>
	At this point showing that <m>f</m> is a quasi isometry is straightforward.
      </p>
      </proof>
    </theorem>
    <p>
      From this we get the following, which gives us the ultimate
      limitiation of quasi-isometry
      <corollary xml:id="cor_fg_qi">
      <statement>
	<p>
	  Any finitely generated group <m>G</m> is quasi isometric to
	  all its finite index subgroups.
	</p>
      </statement>
      </corollary>
    </p>

    <p>
      The result above seems trivial for the following reason. If
      <m>(X,d)</m> is a metric space and have a subset <m>S \subset
      X</m> and we equip <m>S</m> with the subspace metric
      <m>d|_S</m>, then <m>S</m> is isometrically embedded into
      <m>X</m> with respect to this metric. In particualr if <m>S</m>
      is coarsely dense in <m>X</m>, as is the case with a finite
      index subgroup, then <m>(S,d|_S)</m> will be quasi isometric to
      <m>(X,d_X)</m>. Let us call this the <term>extrinsic</term>
      metric on <m>S</m> from the embedding <m>S\subset
      X</m>. <em>Above corollary is stronger than that.</em> In
      particular any finite index subgroup of <m>H</m> is finitely
      generated so a finite generating set <m>\gen A = H</m> endows
      <m>H</m> with an <term>intrinsic</term> quasi isometry class.
    </p>
    <p>
      The above corollary states that if <m>H\leq G</m> is a finite
      index subgroup of of a finitely generated group. Then <m>H</m>
      and <m>G</m> are quasi isometric with respect to their
      respective <em>intrinsic</em> quasi isometry classes.
    </p>
    <p>
      Now it may happen that we have an injective homomorphism <m>H
      \into G</m> where both <m>H</m> and <m>G</m> are finitely
      generated but given aword metric <m>d</m> on <m>G</m> the
      induced extrinsic metric <m>d|_H</m> induced on <m>H</m> is not
      quasi isometric to any (intrinsic) word metric on <m>H</m>. In
      this case we say <m>H</m> is a <term>distorted subgroup.</term>
      We illustrate this with an example
    </p>
    <example xml:id="eg_BS12_1">
      <title><m>BS(1,2)</m> the simplest weird group</title>
      <p>
      <m>BS(1,2)</m>, the Baumslag-Solitar group is a weird group. It
      has the following presentation:
      <me>
	BS(1,2) = \pres{a,t}{tat^{-1}a^{-2}}.
      </me>
      Notice that the single relation gives the following commutation
      relation:
      <me>
	ta = a^2t
      </me>
      which means that every element can be expressed as a word of the
      form:
      <me>
	a^nt^m; n,m \in \ZZ.
      </me>
      So far that doesn&apos;t seem weird, but its Caley graph looks like
      this:
    </p>
      <p>
	<image width="50%" xml:id="img_BS12-cay" source="images/BS12-cay.png"/> .
      </p>
      <p>
	Consider the homomorphism <m>\phi:\ZZ \into BS(1,2)</m> given
	by <m>\psi(n) = a^n</m>. In the next chapter we will see that
	<m>\phi</m> is injective. For now we can see this as <m>\gen a
      \leq BS(1,2)</m> as being a copy of <m>\ZZ</m> sitting in
      <m>BS(1,2)</m>.
      </p>
      <p>
	We can now compare the standard metric <m>d_\ZZ</m> on
	<m>\ZZ</m> to the extrinsic metric <m>d|_{\gen a}</m> induced
	by its inclusion into <m>BS(1,2)</m>.
      </p>
      <p>
	On the one hand we have <m>d_\ZZ(1,a^n) = |n|</m>, which is
	straightforward. Now the relation lets us rewrite, for
	example,
	<me>
	  a^2 = tat^{-1} \Rightarrow a^{2^3} = aaaaaaaa =
	  tttat^{-1}t^{-1}t^{-1}.
	</me>
	More generally we have <m>a^{2^n} = t^nat^{-n}</m>, so on the
	other hand we have two different metrics:
	<me>
	  d_\ZZ(1,a^{2^n}) = 2^n, d|_{\gen a}(1,a^{2^n})=2n+1.
	</me>
	In other words this embedding <m>\phi:\ZZ \into BS(1,2)</m>
	exponentially distorts the intrinsic metric on <m>\ZZ</m>. In
	particular this embedding is not a quasi isometric embedding,
	as the latter only allows linear distortion.
      </p>
    </example>
    <p>
      We will say that groups <m>G</m> and <m>H</m> are
      <term>abstractly commensurable</term> if they have finite index
      subgroups <m>K\leq G</m> and <m>K&apos;\leq H</m> which are
      isomorphic, i.e <m>K \approx K&apos;</m>. <xref ref="cor_fg_qi"/>
      tells us that <em>commensurable groups are quasi-isometric</em>
      therefore we have the limitation that <em>quasi isometry</em>
      cannot distinguish between groups in a commensurability class.
    </p>
    
    <exercises>
      <exercise>
	<statement>
	  <p>
	  In the proof of <xref ref="prop_z2_not_qi_z"/> in equation
	  <xref ref="eq_z2_to-z"/>, we didn&apos;t use the same formulation
	  of quasi isometric embedding as in <xref
	  ref="def_qi_embedding"/>. Explain why this is still okay.
	  </p>
	  <p>
	    Comment: If anything this is to emphasize that even the
	    definition of a quasi isometric embedding is best left
	    vague.
	  </p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>
	  A group acts on itself on the left and the right. Consider a
	  generating set <m>\gen A =G</m>, and let <m>d</m> be the
	  word metric on <m>G</m>.
	  <ul>
	    <li>Show that the left action of <m>G</m> on itself is an
	    action by isometries with respect to this metric.</li>
	    <li>Show that the right action of <m>G</m> on itself is
	    not generally by isometries with respect to this
	    metric.</li> 
	  </ul>
	  </p>
	  <p>Hint: For part 2, <m>G</m> needs to be non abelian. Take
	  a free group and just check out a few examples.
	  </p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p> Look at the proof of <xref
	  ref="prop_z2_not_qi_z"/>. Informally explain whether or not
	  the argument could be generalized to distinguish
	  <m>\ZZ^n</m> and <m>\ZZ^m</m> for general distinct <m>m,n
	  \in \ZZ_{\geq 0}</m>
	  </p>
	</statement>
      </exercise>
      
      <exercise>
	<statement>
	  Consider <m>\cay{\{1\}}{\ZZ}</m>, the standard Cayley graph
	  for <m>\ZZ</m>. Consider the subgroup <m>3\ZZ \leq \ZZ</m>.
	  <ol>
	    <li>Sketch <m>3\ZZ \leq \ZZ</m> inside
	    <m>\cay{\{1\}}{\ZZ}</m>.</li>
	    <li> Draw the quotient
	    <m>3\ZZ\backslash\cay{\{1\}}{\ZZ}</m>
	    </li>
	  </ol>
	</statement>
      </exercise>
      
      <exercise xml:id="ex_fi_cocompact">
	<statement>
	  <p>
	  Let <m>G</m> be a finitely generated group  and let <m>K \leq
	  G</m> be a finite index subgroup. Let <m>A</m> be a finite
	  generating set of <m>G</m>. 
	  </p>
	  <p>
	    Prove that the induced action of <m>K</m> on <m>\cay A
	    G</m> is co-compact.
	  </p>
	  <p>
	    Hint: The vertices of the quotient <m>K\backslash \cay A
	    G</m> correspond to cosets.
	  </p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p> Prove <xref ref="cor_fg_qi"/>.</p>
	  <p> Hint: Just combine all the previous results.</p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p> Prove the commensurablity of finitely generated groups
	  is an equivalence relation.
	  </p>
	  <p>Hint: If <m>K_1,K_2\leq G</m> are finite index subgroups
	  of <m>G</m>, then the intersection <m>K_1\cap K_2</m> is a
	  finite index subgroup of <m>K_1,K_2,</m> and <m>G</m>.
	  </p>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>Let <m>f:G \to H</m> be a surjective group homorphism
	  such that <m>\ker(f)</m> is finite. Prove that <m>G</m> is
	  quasi isometric to <m>H</m></p>
	  <p>
	    Hint: <m>G</m> acts on the Cayley graph of <m>H</m> via
	    the action <m>g\cdot x = f(g)\cdot_H x</m> where
	    <m>\cdot_H</m> is the standard action of <m>H</m> on its
	    Cayley graph.
	  </p>
	</statement>
      </exercise>
      
    </exercises>
    <!-- Only Z and Z^2?-->
  </section>

  <section xml:id="sec_ends">
    <title>Lecture 10: Many ended graphs</title>
    <introduction><title>Our motivation: quasi isometric rigidity</title>
  <p>
    We say that two groups <m>G_1,G_2</m> are <term>virually
    isomorphic</term> if they contain finite index subgroups <m>G_i&apos;
    \stackrel{\mathrm{f.i.}}{\leq} G_i</m> and such that there are
    finite normal subgroups <m>K_i \triangleleft G_i&apos;</m>
    (<m>i=1,2</m>) such that: 
    <me>
      G_1&apos;/K_1 \approx G_2&apos;/K_2.
    </me>
  </p>
  <p>
    In the previous lecture, we saw that quasi isometry could not
    distinguish between virtually isomorphic groups. The question
    still remains: <em>Can quasi isometry determine a group up to
    virtual isomorphism?</em> The short answer is: no, not always.
  </p>

  <p>
    The longer answer is <em>sometimes, and even negative results in
    this matter tend to be non-trivial.</em> The phenomenon where
    quasi isometry (purely geometric/metric) determines a group
    property up to virtual isomorphism (purely algebraic) is known as
    <term>quasi isometric rigidity</term>. Our goal for the next few
    lectures is will be to prove the simplest possible such result.
  </p>
  <theorem xml:id="thm_Z_rigid">
    <statement>
      <p> <m>\ZZ</m> is quasi isometrically rigid. That is to say if
      <m>H</m> is some group that is quasi isometric to <m>\ZZ</m> then
      <m>H</m> contains a finite index subgroup <m>H&apos;
      \stackrel{\mathrm{f.i.}}{\leq} H</m> such that <m>H&apos; \approx
      \ZZ.</m>
      </p>
    </statement>
  </theorem>
  <p>
  We first note that all non trivial subgroups of <m>\ZZ</m> are
  isomorphic, so there is no need to pass to finite index subgroups of
  <m>\ZZ</m>. The example below shows that there are infnite groups
  (called periodic groups) which do not contain subgroups isomorphic
  to <m>\ZZ</m>.
  <example>
    <statement>
      The Burnside Problem is related to this issue. Consider the
      group
      <me>
	\pres{a,b,c}{w^n;w\in F(a,b,c)}
      </me>
      obtained by declaring every <m>n^{\mathrm{th}}</m> power to be
      trivial. For <m>n=2,3,4,6</m> this group is known to be
      finite. For <m>n=10^{10}</m> it is known to be infinite, for
      <m>n=5</m>, it is unknown. In particular, infinite Burnside
      groups (which exist) do not contain subgroups isomorphic to
      <m>\ZZ</m>.
    </statement>
  </example>
    In particular we will need to show that such a group <m>H</m>
    actually contains an infinite order element. The way we will
    achieve this is via group actions, and a quasi isometry invariant
    known as ends.
  </p>
  </introduction>
  <subsection>
  <title>Essential disconnecting sets and many endedness</title>
  
  <p>
    In graph theory, a <term>cutset</term> is a minimal (w.r.t
    inclusion) set of edges whose removal disconnects a graph. Such
    sets of edges abound, for example the set of edges incident to a
    vertex contains a cutset. For infinite graphs we have something
    more interesting: a subset of a graph is an <term>essential
    disconnecting set</term> if its removal disconnets the graph into
    two <em>infinite</em> components. Of most interest to us will be
    <term>finite essential disconnecting sets.</term>
  </p>
  <example xml:id="eg_ess_cutsets">
    <statement>
      <ul>
	<li>In an infinite tree, any finite subset is an essential
	disconnecting set.</li>
	<li> The grid
	<m>\cay{\{\pmatrix{1\\0},\pmatrix{0\\1}\}}{\ZZ^2}</m> doesn&apos;t
	admit any finite essential disconnecting sets.</li>
      </ul>
    </statement>
  </example>
  
  <p>
    Before defining what an <term>end</term> is we have the following.
    <definition xml:id="def_many_ended">
      <statement>
	<p>We say a graph <m>X</m> is
	<ul>
	  <li>zero ended if it is finite,</li>
	  <li>many ended if it admits a finite essential disconnecting
	  set</li>
	  <li>one ended if it none of the above are satisfies, i.e. it
	  is infinte but withuot an essential disconnecting set.
	  </li>
	</ul>
	</p>
	<p>
	  We say a finitely generated group <m>G</m> is zero, one, or
	  many ended if it has a Cayley graph (w.r.t. a finite
	  generating set) which is zero, one, or many ended,
	  respectively. 
	</p>
      </statement>
    </definition>
    We should pause to ponder whether this definition is even
    well-defined: <em>Why couldn&apos;t a group have two Cayley graphs, one
    of which is one ended and the other one isn&apos;t?</em>
  </p>
  </subsection>
  <subsection><title>A digression about paths</title>
  <p>
    At this point we want to provide a perspective on compact
    essential disconnecting sets that is compatible with
    quasi-isometry.
  </p>
  <p>
    If <m>X</m> is a path connected space (e.g. a connected graph)
    then we already encountered the notion of a geodesic <me>p:[0,L] \to
    X.</me> We can relax this notion to that of a <term>quasi
    geodesic</term> <me>q:[0,L] \to X</me> where <m>q</m> is a
    <m>(K,C)</m>-quasi isometric embedding (where we are equipping the
    interval <m>[0,L]</m> with the standard metric of length on
    <m>\RR</m>.) Now <m>q</m> is not necessarily continuous and can do
    all kinds of strange things. However we can do the following:
  </p>
  <lemma xml:id="lem_pw_geod">
    <statement>
      <p>
	Let <m>q:[0,L] \to X</m> be a <m>(K,C)</m>-quasi geodesic, where <m>L \in
	\ZZ_{>0}</m>, and consider a path <m>q_p:[0,L]\to X</m>
	satisfying the following:<ul>
	<li>For <m>i \in [0,L] \cap \ZZ</m> <m>q_p(i)=q(i)</m></li>
	<li>On the open intervals <m>(i,i+1)</m>,
	<m>i=0,\ldots,L-1</m> the restriction <m>q_p|_{(i,i+1)}</m> is
	a geodesic joining <m>q_p(i)</m> and <m>q_p(i+1),</m>
	</li>
      </ul>
      i.e. <m>q_p</m> is a <term>piecewise geodesic</term>.
      </p>
      <p>
	Then for every <m>z\in [0,L]</m> we have<me>
	d_X(q(x),q_p(x))\leq 2(K+C).
      </me>
      </p>
    </statement>
  </lemma>
  
  <p>
    The concept of a geodesic path is a global notion, and is a bit
    too restrictive. The right notion we want is
    <term>rectifiability</term>, but that takes too much work to
    properly define and justify. If we restrict ourselves to the case
    where <m>X</m> is a graph, then we can make the following
    assumption: <em>every path in <m>X</m> is a piecewise geodesic path,
    specifically it travels through every edge at constant unit
    speed.</em> This way we can ignore analysis and focus on
    combinatorics. 
  </p>
  </subsection>
  <subsection><title>Many endedness as a quasi-isometry invariant</title>
  <p>
    Now let us give a more metric characterization of a finite
    essential cut set.
  </p>
  <proposition xml:id="prop_metric_essential">
    <statement>
      <p>
	A locally finite graph <m>X</m> admits a finite essential
	cutset if and only if there is:
	<ul>
	  <li>some point <m>x_0 \in V(X)</m> and a fixed number
	  <m>D>0</m>, </li>
	  <li>two sequences of vertices <m>(x_n),(y_n)</m> with <me>
	  \lim_{n\to \infty}d(x_n,y_n)=\lim_{n\to \infty} d(x_0,x_n) =
	  \lim_{n\to \infty} d(x_0,y_n) = \infty, and </me></li>
	  <li>
	    the following property: every path <m>p_n</m> from
	    <m>x_n</m> to <m>y_n</m> intersects the ball
	    <m>B(x_0,D).</m>
	  </li>
	</ul>
      </p>
    </statement>
  </proposition>

  <p>
    In particular this result says that a finite essential
    disconnecting set is a "bottleneck in the graph". 
  </p>
  
  <corollary xml:id="cor_many_ended_qi">
    <statement>
      <p>
	If <m>X</m> and <m>Y</m> are quasi isometric graphs, then
	<m>X</m> is many ended if and only if <m>Y</m> is many ended.
      </p>
      <p>
	In particuar, being 0, 1, or many ended is a quasi isometric
	invariant.
      </p>
    </statement>
  </corollary>
  
  </subsection>
  <exercises>
    <exercise>
      <statement>
	<p>
	  Work out the two examples in <xref
	  ref="eg_ess_cutsets"/>. It&apos;s best to use pictures and to be
	  informal. 
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p>
	  Prove <xref ref="lem_pw_geod"/>
	</p>
	<p>
	  Hint: Use the triangle inequality, don&apos;t try to be optimal.
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p>
	  Prove <xref ref="prop_metric_essential"/>
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p>
	  Use <xref ref="prop_metric_essential"/> to give a rigourous
	  argument that <m>\ZZ^2</m> is one ended. 
	</p>
	<p>
	  Hint: Fix some <m>x_0,D</m> take sequences
	  <m>(x_n),(y_n)</m> satisfying the requrements of and show
	  how to construct <m>B(x_0,D)</m>-avoiding paths from
	  <m>x_n</m> to <m>y_n</m>, provided <m>n</m> is sufficiently
	  large.
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p>
	  Prove <xref ref="cor_many_ended_qi"/>
	</p>
	<p>
	  Hint: Let <m>q:X\to Y</m> be a <m>(K,C)</m>
	  quasi-isometry. The piecewise geodesic paths <m>p:[0,L] \to
	  X</m> are sent via <m>q \circ p</m> to piecewise
	  quasigeodesic paths, which can then be turned by <xref
	  ref="lem_pw_geod"/> into piecewise geodesics which stay
	  close to <m>q\circ p</m>. Assume that <m>X</m> is many-ended
	  and <m>Y</m> is one ended and use  <xref
	  ref="prop_metric_essential"/> to derive a contradiction.
	</p>
      </statement>
    </exercise>

  </exercises>
</section>

<section>
  <title>Lecture 11: What is an end, anyway?</title>
  <introduction>
    <p>
      In the previous lecture we presented the notion of a <term>many
      ended graph</term>, but didn&apos;t quite define what an end was. We
      will do this in this lecture and apply the concept to
      quasi-isometric rigidity.
    </p>
  </introduction>
  <subsection><title>Ends are like essential components at infinity.</title>
  <p>
    Previously we defined a locally finite connected graph <m>X</m> to
    be many ended if there was some point <m>x_0</m> such that the
   deletion of some ball <m>B(x_0,r)</m> in <m>X</m> produced multiple
   infinite components.
  </p>

  <p>
    Consider some sequence <m>0\lt r_1 \lt r_2 \lt \ldots</m> of radii
    growing to infinity and denote by
    <me>
      \mathcal{K^i}=\{K^i_{j} \subset X; 1\leq j \leq N_i\}
    </me>
    the infinite connected components of <m>X \setminus
    B(x_0,r_i)</m>. Common sense about sets implies that since we have
    <m>B(x_0,r_1)\subset B(x_0,r_2)\subset \cdots</m> then if
    <m>n>m</m> then each element of <m>\mathcal{K}^n</m> is contained
    in a unique element of <m>\mathcal{K}^m</m> which gives a well
    defined surjective function <m>f_{nm}:\mathcal K^n \to \mathcal K
    ^m</m>.
  </p>
  <p>
    If you want you can make a rooted tree where level <m>i</m> is a
    component in <m>\mathcal K^i</m> and the ancestor of each
    component is the element of <m>\mathcal K^{i-1}</m> which contains
    it.
  </p>
  <figure xml:id="fig_inverse_limit">
    <caption>Essential components</caption>
    <image width="50%" xml:id="img_inverse_limit">
      <latex-image>
	\begin{tikzpicture}[scale=2]
	\node (X) at (0,0) {$X$};
	\node (K11) at (-1,-1) {$K^1_1$};
	\node (K12) at (0,-1) {$K^1_2$};
	\node (L1d) at (1,-1) {$\cdots$};
	\node (K1n) at (2,-1) {$K^1_n$};
	\node (K21) at (-2,-2) {$K^2_1$};
	\node (K22) at (-1.5,-2) {$K^2_2$};
	\node (L2d) at (-1,-2) {$\cdots$};
	\node (K2n21) at (-0.5,-2) {$K^2_{n_{12}}$};
	\draw[->] (K11) --node[sloped,above]{$\subset$}(X);
	\draw[->] (K12) --node[sloped,above]{$\subset$}(X);
	\draw[->] (K1n) --node[sloped,above]{$\supset$}(X);
	\draw[->] (K21) --node[sloped,above]{$\subset$}(K11);
	\draw[->] (K22) --node[sloped,above]{$\subset$}(K11);
	\draw[->] (K2n21) --node[sloped,above]{$\supset$}(K11);
	\draw (K12) node[below]{$\vdots$};
	\draw (K1n) node[below]{$\vdots$};
	\draw (K21) node[below]{$\vdots$};
	\draw (K22) node[below]{$\vdots$};
	\draw (K2n21) node[below]{$\vdots$};
	\end{tikzpicture}
      </latex-image>
    </image>
  </figure>
  <p>
    The <term>ends of the graph <m>X</m></term> correspond to the
    infinite sequences <m>K^1_1 \supset K^2_{n_2} \supset K^3_{n_3}
    \supset \cdots</m> of nested components. Formally the set of ends
    is the defined as the set of inverse limits of components
    <me>
      \mathrm{Ends}(X) = \lim_{\leftarrow} \mathcal K^n
    </me>
    with respect to the system of functions <m>f_{nm}, n>m</m>. The
    elements of the inverse limit are formally sequences of infinite
    connected components, and so can be seen as "components" at
    infinity and they are in bijective correspondence with the
    infinite branches of the tree shown in <xref
    ref="fig_inverse_limit"/>.
  </p>
  <p>
    We suppress the concern that ends seem to be highly dependent on
    the choice of growing balls (we will confront this momentarily)
    and will consider two examples.
    <example xml:id="eg_z_and_F_ends">
      <statement>
	<p>
	  Let <m>L</m> be the infinite line (i.e. the standard Cayley
	  graph for <m>\ZZ</m>) and let <m>T_4</m> be the infinite
	  regular tree of valence 4 (i.e. <m>T_4 =
	  \cay{\{a,b\}{F(a,b)}</m>.) In both metric spaces consider
	  the balls <m>B(x_0,1)\subset B(x_0,2) \subset
	  B(x_0,3)\subset \cdots</m>. 
	</p>
	<p>
	  <ul>
	    <li>For <m>L</m> we always have that <m>L\setminus
	    B(x_0,n)</m> has exactly two components, so as the balls
	    grow we get the following containements of components
	    <me>
	      \cdots \subset K^2_1 \subset K^1_1 \subset L \supset
	      K^1_2 \supset K^2_2 \supset \cdots
	    </me>
	    so the diagram given in figure <xref
	    ref="fig_inverse_limit"/> has precisely two infinite
	    branches and, so <m>L</m> has two ends, which we should
	    think of as being <m>\pm \infty</m>.
	    </li>
	    <li>
	      In <m>T_4</m>, the complement <m>T_4 \setminus
	      B(x_0,n)</m> has precisely <m>4 \cdot 3^n</m>
	      components. In particular each <m>K^n_j \in \mathcal K^n
	      = T_4 \setminus B(x_0,n)</m> contains exactly 3
	      components in <m>\mathcal K^{n+1}</m>. It follows that
	      the ends of <m>T_4</m> are in bijective correspondence
	      with infinite strings of the form:<me>
	      ab_1b_2b_3\cdots, a\in\{1,2,3,4\}, b\in\{1,2,3\}
	    </me> and therefore form an infinite set of continuum size.
	    </li>
	  </ul>
	</p>
      </statement>
    </example>
  </p>
</subsection>
<subsection>
  <title>Ends are robust</title>
  <p>A <term>compact (or finite)</term> exhaustion of a set <m>X</m>
  is a sequence of compact (or finite) subsets <m>K_1 \subset K_2
  \subset \cdots</m> such that:
  <me>
    X = \bigcup_{i=1}^\infty K_i.
  </me>
  A sequence of balls with a common center whose radii grow to
  infinity is an example of a compact exhaustion.
  </p>
  <p>
    The main issue about our definition of ends is that it seems to
    depend on our choice of compact exhaustion. We will state our main
    robustness result, but only sketch a proof. The first item is a
    straightforward, yet non trivial exercise in inverse limits, which
    are beyond the scope of the prerequisites, and the second item is
    obvious given the material that was previously covered, but also
    ultimately depends on inverse limits.
    <theorem xml:id="thm_ends_robust">
      <statement>
	Let <m>X</m> be connected locally finite graph. Then
	<ul>
	<li> the set <m>\mathrm{Ends}(X)</m> does not depend on the
	choice of compact exhaustion, and</li>
	<li>
	  if <m>f:X\to Y</m> is a quasi-isometry, then there is a
	  natural induced bijection
	  <me>
	    \hat f: \mathrm{Ends}(X) \to \mathrm{Ends}(Y).
	  </me>
	</li>
	</ul>
      </statement>
      <proof><title>sketch</title>
      <p>We first sketch the proof of the first point. Let <m>A_1
      \subset A_2 \subset \cdots </m> and <m>B_1 \subset B_2 \subset
      \cdots</m> be two different compact exhaustions of <m>X</m> and
      denote by <m>\mathcal A^i</m> and <m>\mathcal B^j</m> the sets of
      infinite components of <m>X\setminus A_i</m> and <m>X \setminus
      B_i</m> we want to show an identification between the inverse
      limits <me> \lim_{\leftarrow} \mathcal A^n, \lim_{\leftarrow}
      \mathcal B^n </me> but the difficulty is that we may not have a
      well defined map <m>\mathcal A^n \to \mathcal B^m</m> where we
      want to send <m>Z \in \mathcal A^n</m> to the unique component
      <m> W \in \mathcal B^m</m> such that <m>Z \subset W</m> even if
      <m>n>m</m>.</p>
      <p>
	The issue is resolved by observing that for some sufficiently
	large <m>N(m)</m> such maps <m>\mathcal A^k \to \mathcal
	B^m</m> will exist provided <m>k> N(m)</m> and then applying
	the abstract nonsense of inverse limits which enables us to
	consider the inverse limits of the union <m>\{\mathcal
	A^n\}\cup\{\mathcal B^n\}</m> equipped with a compatible
	system of surjective functions.
      </p>
      <p>
	We now sketch a proof of the second point. If <m>K \subset
	X</m> is a finite essential disconnecting set, then it&apos;s quasi
	isometric image <m>f(K)\subset Y</m> can be enlarged (by a
	uniformly bounded amount) to a finite essential disconnecting
	set. Furthermore the quasi isometric image of a compact <m>A_1
	\subset A_2 \subset \cdots </m> exhaustion of <m>X</m> gives
	rise (perhaps after bounded enlargement) to a compact
	exhaustion <m>\widehat{f(A_1)} \subset \widehat{f(A_2)}
	\subset \cdots </m>of <m>Y</m>. Again, the image
	<m>f(K^i_j)\subset Y</m> of an infinite component of <m>K^i_j
	\subset X\setminus A_i</m> may not quite lie in a component of
	the counterpart <m> Y \setminus \widehat{f(A_i)}</m>, but if
	<m>n  \gt\gt m</m> then we will have <m>f(K^n_j)\subset
	Y\setminus \widehat{f(A_m)}</m>. The bijection then follows
	from the universal property of inverse limits. !
      </p>
      </proof>
    </theorem>
    Here&apos;s an even more informal explanation:<ul>
    <li>given different compact exhaustions of a space, we can always
    find a way to eventually match things up so that we have the same
    ends, and</li>
    <li>Quasi isometries sent compact exhaustions to compact
    exhaustions and finite essential disconnecting sets to finite
    essential disconnecting sets, and everything works out great.</li>
  </ul>
  The main point of all this is that we get a quasi-isometric
  invariant of groups.
  <corollary xml:id="cor_ends_qi">
    <statement>
      Any finitely generated group <m>G</m> has a well defined (up to
      bijection) set of ends <m>\mathrm{Ends}(G)</m>.
    </statement>
  </corollary>
  </p>
</subsection>
<subsection>
  <title>2 endedness and the quasi isometric rigidity of
  <m>\ZZ</m></title>
  <p> We have now developed just enough machinery to show that
  <m>\ZZ</m> is quasi isometrically rigid, what we will prove is
  precisely the following:
  <theorem xml:id="thm_two_ended">
    <statement>
      <p>
	If <m>G</m> is two ended (i.e. <m>|\mathrm{Ends}(G)|=2</m>)
	then it contains a subgroup of finite index isomorphic to
	<m>\ZZ</m>.
      </p>
    </statement>
  </theorem>  
  </p>
  <p>
    Here&apos;s the first step in the proof. Note that in this proof, quasi
    isometry is not used, but rather action by isometries.
    <lemma xml:id="lem_2_ended_Z2">
      <statement>
	<p>
	  Let <m>G</m> be two ended and let <m>X = \cay A G</m> be
	  some Cayley graph of <m>G.</m> Then <m>G</m> permutes the
	  set <m>\mathrm{Ends}(G) = \{\pm \infty\}</m> and <m>H\leq
	  G</m>, the kernel of this permutation representation is a
	  subgroup of index at most 2.
	</p>
	<p>
	  Furthermore, if <m>C\subset X</m> is a finite essential
	  disconnecting such that <m>E^+,E^- \subset X\setminus C</m>
	  are the two infinite components then there is no <m>h \in
	  H</m> such that <m>h \cdot E^+ \subset E^-</m>.
	</p>
      </statement>
      <proof>
	<p>
	  Since <m>G</m> acts on <m>X</m> by isometries, then in
	  particular it acts on <m>X</m> by quasi isometries, and
	  every compact exhaustion is sent to another compact
	  exhaustion. By <xref ref="thm_ends_robust"/>, this implies
	  that <m>G</m> acts on <m>\mathrm{Ends}(G)</m>. Now if <m>G
	  \onto F</m> is a homomorphism to a finite group then the
	  kernel has index <m>|F|</m>, an the first point follows from
	  the action of <m>G</m> on the two element set <m>\{\pm
	  \infty\}</m>.</p>
	<p>
	  Suppose now that we passed to <m>H</m> (note that we allow
	  <m>H=G</m>) and let <me> \cdots \subset K^2_1 \subset K^1_1
	  \subset L \supset K^1_2 \supset K^2_2 \supset \cdots </me>
	  be some nested sequence of components of complements of sets
	  in a compact exhaustion starting with <m>C</m>. Without loss
	  of generality (reversing <m>E^+</m> and <m>E^-</m> if
	  necessary) we may assume that <m>K^n_1 \subset E^-</m> and
	  <m>K^n_2 \subset E^+</m>, for all <m>n</m>. Then in
	  particular the point <m>\infty</m> corresponds to the chain
	  of inclusions <m> L \supset K^1_2 \supset K^2_2 \supset
	  \cdots</m>. Now if for some <m>h \in H</m> we have <m>h
	  \cdot E^+ \subset E^-</m> then this means that the
	  translated chain <m> L \supset h\cdot K^1_2 \supset h
	  \cdot K^2_2 \supset \cdots</m> is contained in <m>E^-</m>
	  and its terms converge to <m>-\infty</m> so we get <m>h
	  \cdot \infty = -\infty</m> contradicting our assumption that
	  <m>H \leq G</m> didn&apos;t permute the ends of <m>G</m>.
	</p>
      </proof>
    </lemma>

    We also have the following useful fact.
    <lemma xml:id="lem_only_infinte">
      <statement>
	<p>
	  Suppose that <m>X</m> admits an essential finite
	  disconnecting set <m>K</m>, then <m>X</m> also admits an
	  essential finite disconecting set <m>K&apos;\supset K</m>
	  such that all the components of <m>X \setminus K&apos;</m>
	  are infinite.
	</p>
      </statement>
      <proof><title>sketch</title>
	<p>
	  Let <m>F_1,\ldots, F_m</m> be the the finite components of
	  <m>X \setminus K</m> and let <m>I_1,\ldots,I_n</m> be the
	  infinite components of <m>X \setminus K</m>. Then every
	  component <m>F_i</m> touches <m>K</m> (actually, to be
	  accurate the closure of each component intersects <m>K</m>
	  in a non-empty set.) Take the set
	  <me>
	    K&apos;  = K \cup F_1 \cup \cdots \sup F_m.
	  </me>
	  It is an exercise in point-set topology to see that
	  <m>K&apos;</m> is also compact. Graph theoretically, finiteness
	  of <m>K&apos;</m> s obvious. Either the complement <m>X\setminus
	  K&apos;</m>  consists of a finite union of infintie components.
	</p>
      </proof>
    </lemma>

  </p>
</subsection>
  <exercises>
    <exercise>
      <statement>
	<p>
	  Draw the complements of the first three balls in <m>T_4</m>
	  as described in <xref ref="eg_z_and_F_ends"/>.
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p> Prove <xref ref="thm_two_ended"/></p>
	<p> Hint: Follow these steps.<ol>
	<li>
	  Start with <m>G</m> and take <m>X = \cay A G</m> for some
	  finite generating set.
	</li>
	<li>
	  Take <m>H\leq G</m> as in <xref ref="lem_2_ended_Z2"/>.
	</li>
	<li>
	  Let <m>C \subset X</m> be a finite essential cutset and
	  prove that there exists some <m>h \in H</m> such that <m>h
	  \cdot C \cap C = \emptyset</m>.
	</li>
	<li>
	  By Lemma <xref ref="lem_only_infinte"/> we can assume that
	  <m>X \setminus C</m> consists of precisely two
	  <em>infinite</em> components.
	</li>
	<li>
	  If <m>K_1,K_2</m> are the infinite components of <m>X
	  \setminus C</m>, argue that <m>g\cdot C</m> must lie in one
	  of these components an by the assumption that <m>g</m>
	  doesn't permute ends that (w.l.og. )<m>g\cdot K_1 \subset
	  K_1</m>. 
	</li>
	<li>
	  Iterate this nesting, i.e <m>K_1 \supset g\cdot K_1 \supset
	  g^2\cdot K_1 \supset \cdots</m>, to argue that <m>g</m> has
	  infinite order so that <m>\gen g \approx \ZZ.</m>
	</li>
	<li>
	  Argue that <m>\gen h</m> is finite index in <m>G</m> by
	  showing that the action of <m>\gen h</m> on <m>X</m> is
	  co-compact. This can be done by showing that every component
	  of <me> X \setminus\left(\bigcup_{n\in \ZZ} h^n\cdot
	  C\right) = Y </me> is finite, so that every <m>g \in G</m>
	  can be joined to an element of <m>\gen h</m> by a finite
	  path. Show that if this is not the case, then it is possible
	  to find an essential finite disconnecting set whose
	  complement has at least 3 infinite components (one of these
	  components must lie in a connected component of <m>Y</m> ),
	  contradicting 2-endedness.
	</li>
      </ol>
      </p>
      </statement>
    </exercise>
  </exercises>
</section>
<section>
  <title>Appendix: Some final facts about quasi-isometry</title>
  <introduction>
  <p>
    Although we will now move on to other topics, there are a few
    facts the author cannot continue to ignore.
  </p>
  </introduction>
  <subsection>
    <title> Counting ends, easy as <m>0, 1, 2, 2^{\aleph_0}</m>
    </title>
    <p> Although it&apos;s easy to come up with graphs that any number of
    ends, take for example an infinite tripod, for groups the
    situation is more restrictive. Suppose that <m>G</m> has more than
    two ends, then for some Cayley graph <m>X = \cay A G</m> there is
    some finite ball <m>B = B(1,r_0)</m> about the identity such that
    <m>X \setminus B</m> has at least three infinite components:
    <figure xml:id="fig_ess_disco">
      <caption>A finite essential disconnecting ball in a Cayley graph
      with more than two infinite complementary components</caption>
      <image width="75%" xml:id="ess_disco"
           source="images/ess_disco.png"/>
    </figure>
    </p>
    <p>
    Because a finitely generated group always acts freely (and
    therefore properly) on its own Cayley graphs we find that we can
    always find elements that will "push" <m>B</m> off itself and we
    have the following tree-like structure:
        <figure xml:id="fig_ess_disco_trans">
      <caption>Disjoint translates of an essential disconnecting
      ball.</caption>
      <image width="75%" xml:id="ess_disco_trans"
           source="images/ess_disco_trans.png"/>
	</figure>
	
    </p>
    <p>
      Given this picture, it is immediate that as we take compact
      exhaustions of <m>X</m> the number of infinite components of
      complements goes to infinity, therefore if
      <m>|\mathrm{Ends}(G)|>2</m>, then
      <m>|\mathrm{Ends}(G)|=\infty,</m> and it is easy to see that
      this infinite cardinality must be continuum or
      <m>2^{\aleph_0}.</m>
    </p>
  </subsection>

  <subsection>
    <title>The topology of <m>\mathrm{Ends}(G)</m></title>
    <p>
    As we saw, ends correspond to an infinite chains <m> K_1\supset
    K_2 \supset \cdots</m> of infinite components. Since these are
    complements of <em>exhaustions</em> we must have for a given end
    <me>
      \bigcap_{i=1}^\infty K_i = \emptyset.
    </me>
    The inverse limit construction, is what lets us get "something
    from nothing". Nonetheless, given some compact essential
    disconnecting set <m>C \subset X</m> it makes sense to think of an
    end as lying in some component of <m>X\setminus C</m>, formally we
    can think of some decreasing sequence of infinte components
    eventually lying in some component of <m>X \setminus C</m>. This
    lets us put a topology on <m>\mathrm{Ends}(X)</m>, for some
    graph. Let <m>C \subset X</m> be a compact set and let <m>K
    \subset X\setminus C</m> be an infinite component. Then we have an
    open set <m>U_C \subset \mathrm{Ends}(X)</m> consisting of all
    ends that "lie" in <m>C</m>. The topology can be informally, yet
    accurately, described as follows: two ends are "close" only if
    they are separated by a "large" ball about the identity.  </p> <p>
    Here are interesting facts:
    <ul>
      <li>
	A quasi isometry <m>f: X\to Y</m> induces not only a
	bijection, but in fact, homeomorphism <m>\hat
	f:\mathrm{Ends}(X) \to \mathrm{Ends}(Y)</m>
    </li>
    <li>
      In the case where <m>X = \cay A G</m>, then the topology on
      <m>\mathrm{Ends}(X)</m> is that of a Cantor set.
    </li>
    <li>
      When <m>X</m> is an infinite tree <m>X \cup \mathrm{Ends}(X)</m>
      can be topologized as a compactification of <m>X</m>, which is
      natural in the context of metric spaces. An example we say is
      compactifying <m>\RR</m> with the points <m>\pm \infty</m>.
    </li>
    <li>
      Certain groups admit refinements of ends which are also quasi
      isometric invariants, known as boundaries, which enable many
      stronger quasi isometric rigidity results.
    </li>
    </ul>
    </p>
  </subsection>
  <subsection>
    <title>Gromov&apos;s polynomial growth theorem</title>
    <p>Let us denote the commutator <m>[x,y] = x^{-1}y^{-1}x,y</m>,
    and the <m>n</m>-fold commutator <me>[x_1,x_2,\cdots,x_m] =
    [x_1,[x_2,\cdots,x_n]]</me>. A group <m>N</m> is said to be
    nilpotent of class <m>c</m> if every <m>(c+1)</m>-fold commutator
    is trivial. For example abelian groups are precisely nilpotent of
    class 1.
    </p>
    <p>
      The reader may have seen the class of solvable groups before and
      it would be natural to think that solvable and nilpotent are the
      same thing, but they&apos;re not. Nilpotent implies solvable, but not
      the other way around.
    </p>
    <p>
      Previously we saw that for the abelian groups <m>\ZZ^n</m>, the
      amount group elements contained in a ball <m>B(1,r)</m> with
      respect to some word metric grew like a polynomial. Since quasi
      isometries distort distances linearly and that the composition
      <m>f\circ l</m> of a degree <m>d</m> polynomial <m>f</m> and a
      linear function <m>\ell</m> is still a degree <m>d</m>
      polynomial, it can be shown that the <em>degree</em> of
      polynomial growth of balls is a quasi isometric invariant of
      groups. This phenomenon is called <term>polynomial
      growth.</term>
    </p>
    <p>
      Not all groups have polynomial growth, for example, the number
      of elements a ball of radius <m>r</m> in <m>F(a,b)</m> grow
      <em>exponentially.</em> 
    </p>
    <p>
      So far we have focused on quasi isometry as applied to a single
      group, and asked to which extent does a quasi isometry class
      determine the algebraic properties of the group. There are many
      other results about classes of groups such as the following.
    </p>
    <theorem xml:id="thm_gromov_poly_growth">
      <statement>
	<p>If <m>G</m> has polynomial growth, then <m>G</m> contains a
	finite index subgroup <m>H \leq G</m> which is nilpotent of
	some class <m>c \in \ZZ_{\geq 0}</m>.</p>
	<p>Equivalently, if <m>G</m> has polynomial growth, the
	<m>G</m> is virtually nilpotent.
	</p>
      </statement>
    </theorem>
    <p>
      We first note that due to the fundamental limitations of quasi
      isometry, it is impossible to make such a statement without the
      "virtually" qualification. Secondly, we note that this is a very
      strong algebraic conclusion based solely geometry. Finally, the
      way this is proved uses very cool machinery that is unlike
      anything that will be covered in this course.
    </p>
  </subsection>
  
</section>

</chapter>
<chapter>
  <title>
    Diagram methods
  </title>
  <section>
    <title>
      Lecture 12: Diagram methods for free groups I
    </title>
    <introduction>
    <p>
      Much of this chapter will involve working with 2 dimensional
      diagrams. As a warm-up let&apos;s start working in one dimension,
      i.e. with graphs.
    </p>

    <p>
      Here are some concepts worth recalling:
      <ul>
	<li>Elements of a free group <m>F(X)</m> can be represented by
	possibly unreduced words.</li>
	<li>In a directed labelled graph, paths can be given labels
	corresponding to words.</li>
	<li>Words in a free group can also be thought as a directed
	labelled linear graphs (i.e. graphs that are trees with two
	leaves.)</li>
      </ul>
    </p>

    <p>
      The goal of the present section is to give a solution to the
      <term>subgroup membership problem in free groups</term>
      which:<ul>
      <li>Takes as input some word <m>f \in F(X)</m> and a collection
      of words <m>h_1,\ldots,h_k</m> and </li>
      <li>asks whether <m>f \in \gen{h_1,\ldots,h_k}</m>.</li>
      </ul>
    </p>

    <p>
      The method we will provide to solve this problem is to construct
      from the set <m>\{h_1,\ldots,h_k\}</m> a graph <m>\Stal
      H</m>which is canonical for the subgroup <m>H =
      \gen{h_1,\ldots,h_k}</m> and which will easily enable us to
      determine whether given some word <m>w \in F(x)</m>, whether
      <m>w \in H</m>. Recall the subgroup <m>H \leq F(X)</m> admits
      infinitely many generating sets, so there is no single
      distinguished generating set for a given subgroup. What we will
      construct, however, is a graph that is canonically associated to
      a subgroup so that, for finitely generated subgroups <m>H,K \leq
      F(X)</m> we have:<me>
      H=K \Leftrightarrow \Stal H=\Stal K.
    </me>
    In particular, we will also be able to solve the subgroup equality
    problem.
    </p>
    </introduction>

    <subsection>
      <title>Bouquets and sets of words</title>
      <p>
	Let <m>\Gamma</m> be a directed labelled graph, with labels in
	<m>X</m>, let <m>u \in V(\Gamma)</m> and consider the set of
	words
	<me>
	  \lang{\Gamma}{u} = \left\{\lab(\gamma) \in (X^{\pm 1})^*\middle | \gamma
	  \textrm{ is a path in $\Gamma$ )starting and ending at } u\right\}.
	</me>
	Note that here we use <m>(X^{\pm 1})^*</m> do denote all
	strings in <m>X^{\pm 1}</m>, even non-reduced words.
      </p>
      <p>
	Given finite set <m>S=\{h_1,\cdots,h_n\} \subset F(X)</m> of
	words we can form the <term>bouquet of loops labelled from
	<m>S</m></term> <m>\mathcal B_S</m> as follows:
	<ol>
	  <li>For each <m>h_i \in S</m> make a directed labelled
	  segment whose label is <m>h_i</m></li>
	  <li>Take a distinguished vertex <m>v_0</m> and attach the
	  endpoints of the segments to this vertex.</li>
	</ol>
	An example is shown in <xref ref="fig_bouquet1"/> below.
	<figure xml:id="fig_bouquet1">
      <caption>The bouquet of loops formed from <m>S =
      \{abba,a^{-1}ba,a^3\}</m></caption>
      <image width="50%" xml:id="bouquet_1" source="images/bouquet_1.png"/>
	</figure>
	It is worth noting that by writing these words as loops we can
	read them in either direction, meaning that for <m>h^{-1} \in
	\lang{\mathcal B_S}{v_0}</m> fir each <m>h \in S</m>
      </p>
      <proposition>
	<statement>
	  For every <m>h \in \gen S</m> there is some <m>w \in
	  \lang{\mathcal B_S}{v_0}</m> such that <me>
	  h =_{F(X)} w.
	  </me>
	</statement>
	<proof>
	  This is an immediate consequence of <xref
	  ref="lem_generate"/>.
	</proof>
      </proposition>
      <p>
	So we had <m>S=\{abba,a^{-1}ba,aaa\}</m> and constructed the
	corresponding bouquet, and we want to ask whether <m>a \in
	\gen S</m>. We certainly have that <m>a \not\in \lang{\mathcal
	B_S}{v_0}</m>, but this set of words is full of non-reduced
	words. <em>Spoiler alert: <m>a\in \gen S</m>.</em>
      </p>
    </subsection>
    <subsection>
      <title>Stallings&apos;s foldings</title>
      <p>
	Let <m>\Gamma,\Delta</m> be directed labelled graphs with
	labels in <m>X</m> an <term>(<m>X</m>-digraph
	)morphism</term>, or briefly a <term>morphism</term>,
	<m>q:\Gamma \to \Delta</m> is a function that:
	<ul>
	  <li>maps vertices to vertices and edges to edges,</li>
	  <li>preserves edge labels and orientations. Specifically, if
	  <m>E(\Gamma) \ni e = (u,v)</m> and <m>\lab(e) = a</m>, then
	  <m>q(e) = (q(u),q(v))</m> and <m>\lab(q(e)) = a.</m>
	  </li>
	</ul>
	We note that if we are considering graphs as topological
	spaces, then morphism induce continuous maps.
      </p>
      <p>
	We now consider a very particular type of morhphism. Let <m>v
	\in \Gamma</m> be a vertex of an <m>X</m>-digraph and suppose
	there are two edges <m>e_1,e_2</m> incident to <m>V</m> which
	have the same label and that both simultaneously incoming or
	outgoing. Let <m>v_1,v_2</m> be the other endpoints of
	<m>e_1,e_2</m> respectively (there may be loops so that
	<m>v=v_1=v_2</m>). Then a <term>(Stallings&apos;s)
	folding</term> is the morphism <me>
	\Gamma \stackrel{f}{\to} \Gamma&apos;
      </me>
      which is obtained by <em>identifying</em> the edges
      <m>e_1,e_2</m> and the vertices <m>v_1,v_2</m>. Note that
      because we identified edges with compatible labels and
      orientations the resulting graph <m>\Gamma&apos;</m> is a
      well-defined <m>X</m>-digraph.
      </p>
      <p>
	We say an <m>X</m>-digraph is <term>folded</term> if there are
	no possible Stallings&apos;s foldings.
      </p>
      <p>
	Recall that a <term>reduced path</term> <m>\gamma</m> in a
	graph <m>\Gamma</m> can either be considered as a directed
	edge path in which there are not subpaths <m>\cdots e e^{-1}
	\cdots</m>, where <m>e^{-1}</m> represents <m>e</m> traversed
	in opposite direction. Topologically we can think of a reduced
	path as a path <m>\gamma:[0,L] \to \Gamma</m> that is
	<em>localy</em> injective, i.e. every point has an open
	neighbourhood for which the restriction is injective.
      </p>
      <p>
	Stallings&apos;s folding process is an algorithm which stars
	with the bouquet <m>\mathcal B_S</m> and repeatedly applies
	Stallings&apos;s foldings until it is no longer possible. See
	figure <xref ref="fig_sfp"/>
      </p>
      <figure xml:id="fig_sfp">
      <caption>Stalling&apos;s folding process applied to the bouquet
      of loops formed from <m>S = \{abba,a^{-1}ba,a^3\}.</m> Bold
      edges show which edges become identified.</caption>
      <image width="100%" xml:id="sfp" source="images/sfp.png"/>
      </figure>
      <p>We have three fundamental lemmas: </p>
      <lemma xml:id="lem_folded_reduced">
	<statement>
	 <p> <m>\Gamma</m> is folded if and only if the label 
	  <m>\lab(\gamma)</m> of any reduced path is a reduced
	  word.</p>
	</statement>
      </lemma>
      <lemma xml:id="lem_folding_preservation">
	<statement>
	  <p>
	    If <m>\Gamma \stackrel{f}{\to} \Gamma&apos;</m> is a
	    folding, then although the sets <m>\lang{\Gamma}{v_0}</m>
	    and <m>\lang{\Gamma&apos;}{f(v_0)}</m> are different as
	    sets of words, as sets of elements of the free groups we
	    have:
	    <me>
	      \gen{\lang{\Gamma}{v_0}} =_{F(X)}
	      \gen{\lang{\Gamma&apos;}{f(v_0)}}
	    </me>
	  </p>
	</statement>
      </lemma>
      <theorem xml:id="thm_folded_language">
	<statement>
	  <p>
	    If <m>\Gamma</m> is folded and obtained via the
	    Stallings's folding process from an initial bouquet
	    <m>\mathcal B_S</m>, viewing <m>F(X)</m> as a set of
	    reduced words we have <me> \gen{\lang{\Gamma}{v_0}}
	    =_{F(X)} \gen{S}, </me>i.e. the labels of paths of closed
	    loops correspond precisely to the reduced words
	    representing elements of the subgroup <m>\gen S</m>
	  </p>
	</statement>
      </theorem>
      <exercises>
	<exercise>
	  <statement>
	    <p>
	      Pick at least 4 reduced words in <m>F(a,b)</m> of
	      average length at least 4, and perform a Stallings's
	      folding process.
	    </p>
	  </statement>
	</exercise>
	<exercise>
	  <statement>
	    <p>
	      Prove <xref ref="lem_folded_reduced"/>
	    </p>
	    <p>
	      Hint: Suppose  <m>\Gamma</m> is not folded, then come up
	      with a reduced path with unreduced label.
	    </p>
	  </statement>
	</exercise>
	<exercise>
	  <statement>
	    <p>
	      Prove <xref ref="lem_folding_preservation"/>
	    </p>
	    <p>
	      Hint: First note that any non-reduced path <m>\gamma</m>
	      in <m>\Gamma</m> has a non-reduced label, and that by
	      removing the "pinch" in <m>\gamma</m> to obtain a
	      shorter path <m>\gamma&apos;</m> and we preserve:
	      <me>
		\lab(\gamma) =_{F(X)} \lab(\gamma').
	      </me>
	      Take a reduced loop <m>\ell</m> in <m>\Gamma</m>
	      starting at <m>v_0</m> and look at its image via the
	      folding morphism. It's image may no longer be reduced,
	      examine the effect of removing pinches.
	    </p>
	  </statement>
	</exercise>
	<exercise>
	  <statement>
	    <p>
	      Apply <xref ref="lem_folded_reduced"/> and <xref
	      ref="lem_folding_preservation"/> to prove <xref
	      ref="thm_folded_language"/>.
	    </p>
	  </statement>
	</exercise>
      </exercises>
    </subsection>
    <subsection>
      <title>The canonicity of folded graphs.</title>
      <p>
	Previously, we presented an algorithm which takes the
	generating set <m>S</m> of some subgroup <m>\gen S \leq
	F(X)</m> and constructs an <m>X</m>-digraph <m>\Gamma</m>
	which recognizes the reduced words in <m>S</m>. The following
	question remains: <em> it the <m>X</m>-digraph <m>\Gamma</m>
	canonically associated to the subgroup <m>\gen S</m>, or does
	it depend on the choice of generating set or the order of the
	folding?
	</em>
      </p>
      <p>
	We first note the the litterature in computer science on
	deterministic finite automata, which covers how labeled
	digraphs produce sets of words, doesn't give a simple answer
	to this question. There is a natural proof that the answer is
	"yes" by noting that this folded graph is the
	<term>core</term> of a covering space associated to <m>\gen S
	\leq F(X)</m>, where

	<m>F(x) = \pi_1(\textrm{some graph})</m>.

	
	Here however, we will opt for direct proof, which secretly
	contains all the elements of a covering space argument.
      </p>
      <theorem xml:id="thm_folded_canonical">
	<statement>
	  <p>
	    Let <m>S,S' \subset F(X)</m> be generating sets of the
	    subgroup <m>H = \gen S = \gen S' \leq F(X)</m> and let
	    <m>\Gamma,\Gamma'</m> be the respective results of
	    applying a Stallings's folding process to the bouquets
	    <m>\mathcal B_{S},\mathcal B_{S'}</m>, respectively. Then
	    there is a unique isomorphsm (i.e. an invertible morphism)
	    <me>
	      \Gamma' \stackrel\sim\to \Gamma.
	    </me>
	  </p>
	  <p>
	    In particular the end result does not depend on the order
	    of foldings.
	  </p>
	</statement>
	<proof>
	  <p>
	    We will construct a morphism <m>f:\Gamma \to \Gamma'</m>
	    which we shall see is invertible. We already know that
	    <m>\lang \Gamma {v_0} = \lang \Gamma'{u_0} = H\subset
	    F(X)</m> some vertices <m>v_0,u_0</m> in the respective
	    graphs, so we start by setting <m>f(v_0) = u_0</m>.
	  </p>
	  <p>
	    Because <m>\Gamma,\Gamma'</m> are folded, any reduced word
	    <m>w</m> gives rise to at most one path
	    <m>\gamma,\gamma'</m>(or zero if no such path exists) in
	    <m>\Gamma,\Gamma'</m> respectively starting at
	    <m>v_0,u_0</m> respectively such that <me> \lab(\gamma) =
	    \lab(\gamma')=w.
	    </me>
	  </p>
	  <p>
	    We define <m>f:V(\Gamma) \to V(\Gamma')</m> as
	    follows:
	    <ul>
	      <li><m>f(v_0)=u_0</m></li>
	      <li>If <m>v \in V(\Gamma)</m>, then pick a reduced path
	      <m>\alpha</m> starting at <m>v_0</m> and ending at
	      <m>v</m>, and set <m>f(v)=u</m> where <m>u \in
	      V(\Gamma')</m> is the enpoint of the path <m>\alpha'</m>
	      starting at <m>u_0</m> with
	      <me>
		\lab(\alpha) = \lab(\alpha').
	      </me></li>
	    </ul>
	    We note <m>\lab(\alpha)</m> is the prefix of some reduced
	    word in <m>H</m>, therefore such a path <m>\alpha'</m> in
	    <m>\Gamma'</m> must exist.
	  </p>
	  <p>
	    We must now show that <m>f(v)</m> is well-defined. The
	    only source of ambiguity is the choice of path joining
	    <m>v_0</m> to <m>v</m>. Suppose towards a contradiction
	    that there was a failure of well-definedness, i.e that
	    there were reduced two paths <m>\alpha,\beta</m> in
	    <m>\Gamma</m> joining <m>v_0,v</m> but whose counterparts
	    <m>\alpha',\beta'</m> had different endpoints. See <xref
	    ref="fig_diff_endpts"/>.

	    <figure xml:id="fig_diff_endpts">
	      <caption>When <m>f:\Gamma \to \Gamma'</m> is
	      undefined. </caption>
	      <image width="100%" xml:id="diff_endpts" source="images/diff_endpts.png"/>
	    </figure>
	  </p>
	  <p>
	    On the one hand, by minimality,
	    <m>w=\lab(\alpha)*\lab(\beta)^{-1}</m> is reduced as
	    written (see <xref ref="fig_minimal_failure"/> and note
	    that if <m>\alpha_1',\beta_1'</m> have the same endpoint
	    if and only if <m>\alpha',\beta'</m> have the same
	    endpoints) and since it is the label of a reduced loop in
	    <m>\Gamma</m> based at <m>v_0</m>, it must be a reduced
	    word repreenting an element of <m>H</m> by <xref
	    ref="thm_folded_language"/>. On the other hand since
	    <m>\alpha'</m> and <m>\beta'</m> have different endpoints,
	    we have that <m>\lab(\alpha)*\lab(\beta)^{-1} =w \not \in
	    \lang{\Gamma'}{u_0} =H</m> which is a contradiction. It
	    follows that <m>f</m> is well-defined on the vertex set.
	  </p>
	  
	    <figure xml:id="fig_minimal_failure">
	      <caption>If <m>\lab(\alpha_1)*\lab(\beta_1)^{-1}</m> is not
	      reduced then we can find shorter paths that
	      fail.</caption>
	      <image width="100%" xml:id="minimal_failure" source="images/minimal_failure.png"/>
	    </figure>
	  
	  <p>
	    We can now extend the domain of <m>f</m> do include edges,
	    since (by foldedness) every vertex sees at most one edge
	    with a given label and incidence <m>f</m> extends
	    naturally to <m>f:\Gamma \to \Gamma'</m>.
	  </p>
	  <p>
	    By symmetry there also exists a morphism <m>g:\Gamma' \to
	    \Gamma</m> and it is immediate from the definition that
	    <m>g\circ f = Id_\Gamma</m>, therefore <m>f</m> is an
	    <m>X</m>-digraph isomorphism.
	  </p>	    
	</proof>
      </theorem>

      <corollary>
	<statement>
	  <p>
	    There is an algorithm to decide whether two finite sets of
	    elements of <m>F(X)</m> generate the same subgroup.
	  </p>
	</statement>
      </corollary>
      
    </subsection>
  </section>

  <section>
    <title>Lecture 13: Diagram methods for free groups II</title>
    <introduction>
      <p>
	In the previous lecture we presented a method to solve the
	<em>subgroup membership problem</em> and the <em>equality
	problem</em> for subgroup of free groups defined by finite
	generating sets.
      </p>
      <p>
	In this lecture we will go a step further and use these folded
	graphs in order to obtain <em>algebraic</em> results about
	subgroups of free groups.
      </p>
      </introduction>
      <subsection>
	<title>A spot of applied graph theory</title>

	<p>We have a first definition lemma, that we ask the reader to
	accept on faith (or to prove to themselves)</p>
	<lemma xml:id="lem_tree">
	  <statement>
	    <p> Let <m>X</m> be a graph, then the following are
	    equivalent:
	    <ul>
	      <li>For any pair of vertices <m>u,v \in V(X)</m> there
	      is a unique reduced path <m>\gamma(u,v)</m> joining
	      <m>u</m> and <m>v</m>.</li>
	      <li><m>X</m> is connected and doesn't contain any
	      cycles.</li>
	    </ul>
	    </p>
	    <p>
	      A graph satisfying these properties is called <term> a
	      tree.</term>
	    </p>
	  </statement>
	</lemma>

	<definition xml:id="defn_max_spanning">
	  <statement>
	    <p>
	      Let <m>\Gamma</m> be a graph and let <m>T \subset
	      \Gamma</m> be a subgraph which is a tree.
	      <ol>
		<li> We say <m>T</m> is <term>a spanning tree</term>
		if it contains every vertex of the adjacent
		graph.</li>
		<li> We say <m>T</m> is a <term>maximal tree</term> if
		for any other tree <m>T \subset T' \subset G</m>, we
		have <m>T'=T.</m></li>
	      </ol>
	    </p>
	  </statement>
	</definition>
	<figure xml:id="fig_graph_and_spanning_tree">
      <caption>A graph and a spanning tree</caption>
      <image width="80%" xml:id="graph_and_tree" source="images/graph_and_tree.png"/>
	</figure>

	<p>
	  And finally we have:
	</p>
	<lemma>
	  <statement>
	    <p>
	      <m>G</m> is connected if and only if it contains a
	      spanning tree. If <m>G</m> is connected, then its
	      spanning subtrees coincide with its maximal subtrees.
	    </p>
	  </statement>
	</lemma>
      </subsection>

      <subsection>
	<title>The structure of finitely generated subgroups of free
	groups.</title>

	<p>Recall that to each finitely generated subgroup <m>H\leq
	F(X)</m>, we could construct a graph with a distnguished
	vertex <m>(\Gamma,v_0)</m> so that the set reduced words in
	<m>H</m> coincides with the set of labels of reduced paths in
	<m>\Gamma</m> starting and ending at <m>v_0</m>.</p>

	<p>Recall from Chapter 1 that a generating set <m>S</m> of a
	group <m>G</m> with the property that, in <m>G</m>, every
	reduced product of elements in <m>S</m> (i.e. no subfactors of
	the form <m>ss^{-1}, s \in S^{\pm 1}</m>) is non-trivial is
	called a <term>basis</term> of <m>G</m> and having a basis
	makes <m>G</m> isomorphic to <m>F(S)</m>. Our goal is, given
	<m>(\Gamma,v_0)</m>, to construct a basis of <m>H</m>.</p>

	<p>
	  To this end let <m>T \subset \Gamma</m> be a spanning tree
	  and let <m>N \subset E(\Gamma)</m> be the edges <em>not</em>
	  contained in <m>T</m>.
	  <figure xml:id="fig_tree_and_other_edges">
      <caption>A graph and a spanning tree</caption>
      <image width="50%" xml:id="tree_and_other_edges" source="images/tree_and_other_edges.png"/>
	</figure>
	</p>

	<p>
	  Let <m>T \subset \Gamma</m> be a spanning tree and let <m>N
	  = E(\Gamma\setminus T)</m>, be the edges of <m>\Gamma</m>
	  not contained in <m>T</m>. Since <m>\Gamma</m> is an
	  <m>X</m>-digraph, the edges of <m>N</m> are directed and for
	  any <m>e \in N</m> we formally define <m>e^{-1}</m> to be
	  the same edge with reversed orientation and inverted label,
	  i.e. <m>\lab(e^{-1}) = \lab(e)^{-1}</m>. Now given <m>e \in
	  N^{\pm 1}</m> we let <m>e^-</m> be the vertex at its origin
	  and let <m>e^+</m> be the vertex at its terminus.
	</p>
	<p>
	  For each <m>e \in N^{\pm 1}</m> we create a closed path
	  <m>\beta_e</m> starting and ending at <m>v_0</m> with the
	  following concatenation,
	  <me>
	    \beta_e = \gamma(v_0,e^-) * e * \gamma(e^+,v_0)
	  </me>
	  Where <m>\gamma(u,v)</m> is the unique reduced path in the
	  spanning tree <m>T</m> joining vertices <m>u,v</m>. See
	  <xref ref="fig_tree_basis"/>.
	</p>
	<figure xml:id="fig_tree_basis">
	  <caption>A loop in a folded graph, goinng through a single
	  non-tree edge.</caption>
	  <image width="50%" xml:id="tree_basis" source="images/tree_basis.png"/>
	</figure>
	<p>
	  The closed path <m>\beta_e</m> is reduced and, since
	  <m>\Gamma</m> is folded, <m>\lab(\beta_e)</m> is a reduced
	  word and by <xref ref="thm_folded_language"/>
	  <m>\lab(\beta_e)=h_e \in H</m>.
	</p>

	<p>
	  Our task is now to show that <m>\{h_e \mid e \in N\}</m>
	  forms a basis for <m>H</m>. Note that here we're running
	  <m>e</m> over <m>N</m> and not <m>N^{\pm 1}</m>. This is
	  done by two lemmas, which we will skecth below, leaving
	  details as an exercise.
	</p>
	<lemma xml:id="lem_loops_gen">
	  <statement>
	    <p>
	      The set <m>\{h_e \mid e \in N\} \subset F(X)</m>
	      generates <m>H</m>.
	    </p>
	  </statement>
	  <proof>
	    <title>sketch</title>
	    <p>It is important to make use of the
	    language of paths here. Crucially, we must show that for
	    any reduced path <m>\gamma</m> in <m>\Gamma</m> starting
	    and ending at <m>v_0</m> we can find a product
	    <m>h_{e_1}^{\epsilon_1}\cdots h_{e_k}^{\epsilon_k}</m> so
	    that although, as words we don't have an equality, after
	    preforming reductions we have<me>
	    \lab(\gamma) =_{F(X)}  h_{e_1}^{\epsilon_1}\cdots
	    h_{e_k}^{\epsilon_k}. 
	  </me>
	    </p>

	    <p>
	      The first two claims are proved, the third needs some
	      details. With these three claims it is possible to prove
	      the main result.
	    </p>
	    <p>
	      Claim 1: <em> any non-trivial reduced closed path
	      <m>\gamma</m> starting and ending at <m>v_0</m> must go
	      through some edge in <m>N</m></em>. Indeed, otherwise
	      <m>\gamma</m> stays within the spanning tree <m>T</m>,
	      and to return to <m>v_0</m>, because we're in a tree,
	      there must be a backtrack <m>\cdots f f^{-1}\cdots</m>,
	      contradicting that <m>\gamma</m> is reduced. The claim
	      follows. 
	    </p>
	    <p>
	      Claim 2: <em>any non-trivial reduced closed path
	      <m>\gamma</m> starting and ending at <m>v_0</m> fully
	      determined by the sequence of edges of <m>N^{\pm 1}</m>
	      it traverses (where the signs of the edges indicate in
	      which direction they are traversed.)</em> Segments of
	      <m>\gamma</m> between such edges are in the spanning tre
	      <m>T</m>, so by <xref ref="lem_tree"/> are fully
	      defined and this claim also follows.
	    </p>
	    <p>
	      Claim 3: <em> Let <m>\gamma</m> be a reduced path
	      starting and ending at <m>v_0</m>, and let <m>
	      e_1,\cdots, e_k</m> be sequence of edges in <m>N^{\pm
	      1}</m> traversed by <m>\gamma</m>. Then <me>
	      \lab(\gamma) = h_{e_1}\cdots h_{e_k} .
	    </me></em>
	    Look at <xref ref="fig_edge_to_edge"/>.
	    <figure xml:id="fig_edge_to_edge">
	      <caption>
		Paths in <m>T</m> between edges.
	      </caption>
	      <image width="50%" xml:id="edge_to_edge"
		     source="images/edge_to_edge.png"/> 
	    </figure>
	    </p>
	  </proof>
	</lemma>

	<lemma xml:id="lem_loops_free">
	  <statement>
	    <p>
	      Any reduced product <m>h_{e_1}^{\epsilon_1}\cdots
	      h_{e_k}^{\epsilon_k}</m> is non-trivial in <m>F(X)</m>.
	    </p>
	  </statement>
	  <proof>
	    <title>
	      sketch
	    </title>
	  <p>
	    Take the reduced product, each factor
	    <m>h_{e_j}^{\epsilon_j}</m> is the label of a path as
	    given in <xref ref="fig_tree_basis"/>. Each
	    <m>h_{e_j}^{\epsilon_j}</m>, which is a word in
	    <m>F(X)</m> contains a le tter coming from an edge in
	    <m>N</m>. Concatenate these paths/words and look at
	    the cancellation diagram (which may be seen a being
	    obtained from Stalling's folding). The the letters coming
	    from non-tree edges will never cancel out. See <xref
	    ref="fig_pinch_between_bases"/>.
	    <figure xml:id="fig_pinch_between_bases">
	  <caption>Letters from non-tree eges (red) don't get
	  cancelled.</caption>
	  <image width="100%" xml:id="pinch_between_bases" source="images/pinch_between_bases.png"/>
	</figure>
	  </p>
	  </proof>

	</lemma>	

	<corollary>
	  <statement><p>Every finitely generated subgroup of a free group
	  is free.</p>
	  </statement>
	</corollary>
	
      </subsection>

      <subsection>
	<title>
	  Infinitely generated subgroups of a free group.
	</title>
	<p>Although finitely generated subgroups of free groups are
	interesting. Free groups also contain infinitely generated
	subgroups. In fact whenever you have <m>\varphi:F(X) \onto
	G</m> where <m>|G|=\infty</m>, then <m>\ker(\varphi)</m> is
	infinitely generated. We conclude this lecture with a
	discussion of infinitely generated subgroups of free
	groups.</p>

	<p>
	  Suppose we have an infinite generating set
	  <m>\{h_1,h_2,\ldots\}</m> and we want to consider the
	  subgroup <m>H = \gen{h_1,h_2,\cdots}</m>. We can start by
	  defining <me>
	  H_i = \gen{h_1,\cdots,h_i}
	</me>
	and we have <m>i\lt j \Rightarrow H_i \leq H_j</m> and
	<me>
	  H = \bigcup_{i=1}^{\infty} H_i.
	</me>
	Now it may very well be that for some <m>i, H =H_i</m> which
	will happen if <m>H</m> is actually finitely generated and we
	were just enumerating the elements of <m>H</m>.
	</p>
	<p>
	  Now for each <m>H_i</m> we have the folded graph
	  <m>(\Gamma_i,v_0)</m>. Furthermore <m>\Gamma_{i+1}</m> can
	  be obtained by attaching a loop
	  <m>\gamma_{h_{i+1}}</m>labelled <m>h_{{i+1}}</m> to <m>v_0</m> and
	  then folding wich gives:<me> \Gamma_i \into
	  \Gamma_i\cup_{v_0}\gamma_{h_{i+1}}
	  \stackrel{\textrm{fold}}{\longrightarrow} \Gamma_{i+1}.
	</me>
	Seeing as this is a composition of morphisms we have a
	morphism <m>q_{i,i+1}:\Gamma_i \to \Gamma_{i+1}</m>. In
	<m>\Gamma_{i+1}</m> we define <m>v_0 =
	q_{i,i+1}(v_0)</m>. Furthermore we can compose these morphisms
	so that for all <m>j \gt i</m> we have a morphism
	<m>q_{i,j}:\Gamma_i \to \Gamma_j</m>.
	</p>
	<p>
	  Now the addition of these extra loops will cause extra
	  foldings so the morphisms <m>q_{i,j}</m> will not
	  necessarily be injective. Denote <me>\Gamma_i^j =
	  q_{i,j}(\Gamma_i) \subset \Gamma_j.</me>
	</p>

	<p>
	  Since <m>\Gamma_i</m> is finite, so must every image
	  <m>\Gamma_i^j</m>. Moreover since we have surjections
	  <m>\Gamma_i^{j} \onto \Gamma_i^{j+1}</m>, we can conclude
	  that for every <m>i</m> there exists <m>N(i)</m> such that
	  after this index, the images stabilize, i.e. fir all <m>j
	  \geq N(i)</m> we have isomorphisms:
	  <me>
	    \Gamma_i^{j} \stackrel\sim\to \Gamma_i^{j+1}
	    \stackrel\sim\to \cdots.
	  </me>
	</p>
	<p>
	  We the isomorphism class of these stablized graphs
	  <m>\Gamma_i^\infty</m>. We note that
	  <m>\Gamma_i^{\infty}</m> is folded and contains a
	  distinguished vertex <m>v_0</m>. We also not that there is a
	  morphism <m>q_{i,\infty}:\Gamma_i \to \Gamma_i^{\infty}</m>,
	  which means that <m>\lang{\Gamma_i}{v_0} \subset
	  \lang{\Gamma_i^\infty}{v_0}.</m>
	</p>
	<p>
	  Furthermore we see that if <m>j>i</m> there is a natural
	  injective morphism, which we may consider an inclusion so
	  that <m>\Gamma_i^\infty \subset \Gamma_j</m>. In this manner
	  if <m>H</m> is infinitely generated and we can form the chain
	  <me>
	    \Gamma = \bigcup_{i=1}^{\infty}\Gamma_i^\infty.
	  </me>
	</p>
	<p>
	  On the one hand because every <m>\Gamma_i^{\infty}</m> maps
	  into some sufficiently large <m>\Gamma_j</m> we an argue
	  that <m>H</m> which consists of <em>finite</em> products of
	  elements in <m>\{h_1,h_2,\ldots\}</m> consists precisely of
	  <m>\lang{\Gamma}{v_0}.</m>
	</p>
	<p>
	  On the other hand <m>\Gamma</m> is connected and by Zorn&amp;s
	  lemma contains a maximal subtree, therefore a spanning tree
	  and the arguments in the previous part carry through
	  (recalling that we only consider finite paths) to give us a
	  (possibly infinite) basis for <m>H</m>. We thus have:
	</p>
	<corollary xml:id="cor_subgroups_of_free">
	  <statement>
	    <p>
	      If <m>|X|</m> is countable, then every subgroup of
	      <m>F(X)</m> is isomorphic to a free group of countable
	      rank.
	    </p>
	  </statement>
	</corollary>
      </subsection>
      <exercises>
	<exercise>
	  <statement>
	    <p>Draw a folded graph <m>\Gamma</m> that has diameter at
	    least 5 and more than one loop and find a basis for the
	    subgroup <m>H \leq F(X)</m> it represents.</p>
	  </statement>
	</exercise>
	<exercise>
	  <statement>
	    Fill in the details in <xref ref="lem_loops_gen"/>
	  </statement>
	</exercise>
	<exercise>
	  <statement>
	    Fill in the details in <xref ref="lem_loops_free"/>
	  </statement>
	</exercise>
	<exercise>
	  <statement>
	    <p>
	      A group <m>G</m> is abelian if for every <m>a,b \in
	      G</m> we have <m>ab = ba</m> or
	      <m>a^{-1}b^{-1}ab=1</m>. Describe the abelian subgroups
	      of a non-abelian free group.
	    </p>
	  </statement>
	</exercise>
      </exercises>
      
  </section>

  <section>
    <title>Lecture 14: van Kampen diagrams and the geometry of the
    word problem</title>
    <introduction>
      <p>
	Let us now turn our attention back to finitely generated
	groups given by relations:<me>
	G = \pres X R.
      </me>
      </p>
      <p>
	In <xref ref="sec_generation_and_presentation"/> we say that
	any word representing the identity in <m>G</m> was equal in
	<m>F(X)</m> to a product of conjugates of elements of
	<m>R^{\pm1}</m>. In <xref ref="sec_free_group_dehn"/> in we
	saw that every element in <m>F(X)</m> was conjugate to a
	cyclically reduced element and that all cyclic permutations of
	an element are conjugate. With this in mind we have the
	following two-dimensional notion: an <term><m>X</m>-directed
	2-cell</term>, or just briefly <term>a 2-cell</term>, is a
	cyclic <m>X</m>-digraph enclosing a topological disc.
      </p>
      
      <figure xml:id="fig_two_cell">
	  <caption>A 2-cell</caption> <image width="25%"
	  xml:id="two_cell" source="images/two_cell.png"/>.
      </figure>

      <p>
	As defined, we note that a 2-cell has no preferred orientation
	or vertex. Thus, for a given boundary word <m>r</m>, the same
	2-cell represents every cyclic conjugate of <m>r^{\pm
	1}</m>. A <term>diagram</term> is 2-complex, i.e. a graph to
	which is attached 2-cells. A <term>planar embedding</term> of
	a diagram is a specific way of embedding/drawing a diagram in
	the plane. We will often abuse notation say <term>planar
	diagram</term> instead of "diagram equipped with a planar
	embedding". We will say that a planar diagram is <term>simply
	connected</term> if, informally, it has no holes, or if every
	cycle in the underlying graph is filled with discs. Noting
	that a diagram is a CW 2-complex, "simply connected" is
	perfectly well-defined.
      </p>
      <p>
	We point out that most of graphs shown in the previous section
	are definitely not simply connected.
      </p>
      <figure xml:id="fig_simply_connected">
	  <caption>Some planar diagrams. Can you pick out the simply
	  connected one? Note that we will sometimes omit drawing
	  directions and labels of edges.</caption> <image
	  width="100%" xml:id="simply_connected"
	  source="images/simply_connected.png"/>
      </figure>
    </introduction>
    <subsection>
      <title>van Kampen diagrams</title>
      <p>
	A <term>van Kampen diagram</term> is a simply connected planar
	diagram. The planar embedding gives rise to a <term>boundary
	word</term>, which is the label of the path that can be read
	<em>clockwise</em> around the boundary. We note that the
	boundary word is well up to cyclic permutation.
      </p>
      
      <figure xml:id="fig_boundary_words">
	  <caption>The boundary word is the label of the path read
	  clockwise around the boundary.</caption> <image width="100%"
	  xml:id="boundary_words" source="images/boundary_words.png"/>
      </figure>

      <p>
	Van Kampen diagrams are the most important tool in studying
	the word problem in groups. First note that if some word
	<m>w</m> represents the identity in <m>\pres X R</m>, then
	<me>w =_{F(X)} \prod_{i=1}^{k}w_ir_i^{\epsilon_i}
	w_i^{-1}</me> for some conjugates of <m>r_i^{\pm 1}\in
	R</m>. We can therefore form a <term>balloon diagram</term> as
	in <xref ref="fig_balloon"/> whose boundary word is precisely
	the (unreduced product) <m>\prod_{i=1}^{k}w_ir_i^{\epsilon_i}
	w_i^{-1}</m>.
      </p>

      <figure xml:id="fig_balloon">
	  <caption>A balloon diagram whose boundary word <m>w_1
	  r_1^{-1} w_1^{-1} w_2 r_2 w_2^{-1} w_3 r_3^{-1}w_3^{-1} w_4
	  r_4^{-1} w_4^{-1}.</m></caption> <image width="50%"
	  xml:id="balloon" source="images/balloon.png"/>
      </figure>

      <p>
	Let <m>\mathcal D</m> be a van Kampen diagram whose 2 cells
	are bounded by words <m>r \in R.</m> Then the boundary word
	<m>w</m> of <m>\mathcal D</m> represents the trivial element
	in <m>\pres X R</m>. See <xref ref="fig_Z2_diagram_eg"/>, for
	example.
	<figure xml:id="fig_Z2_diagram_eg">
	  <caption>A balloon diagram whose boundary word <m>w_1
	  r_1^{-1} w_1^{-1} w_2 r_2 w_2^{-1} w_3 r_3^{-1}w_3^{-1} w_4
	  r_4^{-1} w_4^{-1}.</m></caption> <image width="100%"
	  xml:id="Z2_diagram_eg" source="images/Z2_diagram_eg.png"/>
      </figure>
      </p>
      <p>
	The reason is that any such diagram can be "unfolded" to a
	balloon diagram (see <xref ref="fig_unfold"/>). This witnesses
	that a boudary word <m>w</m> is equal to a product
      </p>
	<figure xml:id="fig_unfold">
	  <caption>Unfolding a van Kampen diagram to a balloon
	  diagram.</caption> <image width="100%" xml:id="unfold"
	  source="images/unfold.png"/>
      </figure>
      <p>
	This unfolding fact and its converse give van Kampen's
	Lemma. The main difficulty resides in the fact that when
	folding a balloon diagram, some 2-cells can get folded "all
	the away around" creating spheres (think of a soccer ball.)
	The argument is to show that if we start with a balloon
	diagram with a minimal number of 2-cells, by performing the
	foldings corresponding to elementary reductions in boundary
	words, we remain planar at every step. Otherwise we could have
	removed 2-cells.
      </p>
      <theorem xml:id="thm_VK_lem">
	<title>van Kampen's Lemma</title>
	<statement>
	  <p>
	    Let <m>w</m> be a reduced word in alphabet <m>X</m>. Then
	    <m>w = 1</m> in <m>\pres X R</m> if and only if <m>w</m>
	    is the boundary of a van Kampen diagram whose 2-cells are
	    bounded by words in <m>R</m>.
	  </p>
	</statement>
	    
      </theorem>
    </subsection>
    <exercises>
      <exercise>
      <statement><p>Let <m>X</m> be some alphabet and let <m>T</m> be
      an <m>X</m>-digraph which is a tree. Prove that the boundary
      label is a word that is equal in <m>F(X)</m> to the
      identity.</p> <p>Hint: A <term>spur</term> is a vertex with
      degree 1. Perform elementary cancellations one at a time. Show at
      each step that the word obtained from an elementary cancellation
      can be obtained by deleting a spur and incident edge in a tree
      and taking the new boundary word.</p></statement></exercise>
      <exercise>
	<statement>
	  <p>"Unfold the van Kampen diagram in <xref
	  ref="fig_Z2_diagram_eg"/> an explicitly express that word as
	  a product of 3 conjugates of <m>(a^{-1}b^{-1}ab)^{\pm
	  1}</m></p> 
	</statement>
      </exercise>

      <exercise>
	<statement>
	  Show that if two word <m>w,w'</m> are reduced words that
	  are equal in <m>\pres X R</m> then there is a "possibly
	  pinched bigon" along whose top we can read <m>w</m> and
	  along whose bottom we can read <m>w'</m> that can be
	  filled with 2-cells bounded by words in <m>R</m>.
	  <figure xml:id="fig_bigon">
	  <caption>A possibly pinched bigon</caption> <image
	  width="75%" xml:id="bigon" source="images/bigon.png"/>
	</figure>
	</statement>
      </exercise>

      <exercise>
	<statement>
	  <p>In <xref ref="sec_homs_tietze"/> you were asked to show that
	  in <m>\pres{r,\rho}{\rho\rho\rho,rr,r\rho r\rho}</m> we have
	  <m>r\rho = \rho^2 r</m>. Construct the bigon witnessing this
	  fact.
	</p>
      </statement>
      </exercise>
      
    </exercises>
  </section>

  <section>
    <title>Lecture 15: HNN extensions and dual tracks</title>
    <introduction>
      <p>
	In this lecture we will develop a method to understand the
	famous Baumslag-Solitar group
	<me>
	  \mathrm{BS}(1,2) = \pres{a,t}{tat^{-1}a^2}.
	</me>
	It worth stressing again that there is no general procedure
	which can take an arbitrary finite presentation
	<m>\pres{x_1,\ldots,x_n}{r_1,\ldots,r_m}</m> and will
	decide if this is a presenation of the trivial group.
      </p>
      <p>
	For this reason, techniques to study groups from presentations
	are necessarily ad-hoc, and will only work in certain
	circumstances. We start with a construction in group theory
      </p>
    </introduction>
    <subsection>
      <title>
	HNN extensions
      </title>
      <p>
	<term>HNN extensions</term> are named after mathematicians
	Higman, Neumann, and Neumann (the Neumanns were married.) They
	are formed by putting a group <m>G</m> inside a larger group
	<m>G*_t</m> with an extra generator called the <term>stable
	letter</term>, typically we use <m>t</m>, which conjugates
	elements in <m>G</m>. More precisely, suppose that <m>G</m>
	contains two subgroups <m>A,A'</m> such that <m>A\approx
	A'</m>, i.e. <m>A,A'</m> are isomorphic and let
	<m>\varphi:A\stackrel{\sim}{\to} A'</m> be a specific
	isomorphism. See <xref ref="fig_HNN_diag"/>.
      	<figure xml:id="fig_HNN_diag">
	  <caption>The setup for an HNN extension</caption>
	  <image width="20%" xml:id="HNN_diagram">
	    <latex-image>
	      \begin{tikzpicture}
	      \node (G) at (0,0) {$G$};
	      \node (A) at (-1,-1) {$A$};
	      \node (A') at (1,-1) {$A'$};
	      \path (A) -- node[sloped]{$\leq$} (G);
	      \path (A') -- node[sloped]{$\geq$} (G);
	      \draw[->] (A) -- node[above]{$\sim$}node[below]{$\varphi$} (A');
	      \end{tikzpicture}.
	    </latex-image>
	  </image>
	</figure>
	If <m>G=\pres X R</m>, then the <term>HNN extension of
	<m>G</m> (with associates subgroup <m>A,A' \leq G</m> and
	attachment isomorphism <m>\varphi</m>)</term> is given by the
	following (possibly) presentation<men xml:id="eq_HNN_pres">
	G*_t=\pres{X,t}{R,t^{-1}at = \varphi(a); a\in A },
	</men>
	i.e. we add a new generator <m>t</m> (we assume <m>t \not\in
	X</m>), the stable letter, and for each <m>a \in A</m> we add
	a relation which says that conjugation of an element of
	<m>a</m> by <m>t</m> produces the same result as making taking
	the image <m>\varphi(a)</m>. Incidentally we slightly changed
	the <term>convention for relations</term>: instead of writing
	<m>t^{-1}at(\varphi(a)^{-1}</m> we wrote <m>t^{-1}at =
	\varphi(a)</m>, which is equivalent. Also note that for these
	relations we actually mean that we wrote words in <m>X^{\pm
	1}</m> represeting elements in <m>a,\varphi(a)\in G</m>. In
	particular we are not assuming <m>A,A'\subset X</m>.
      </p>
      <p>
	Needless to say, adding extra relations to a group can have
	unexpected consequences. We want to show that <m>G \leq
	G*_t</m>, i.e. that <m>G*_t</m> is an extension of <m>G</m>.
	Note that by Lemma <xref ref="lem_pres_hom"/> there is a
	natural homomorphism <m>G \into G*_t</m>. Our first task is to
	show that this homomorphism is <em>injective</em>.
      </p>
    </subsection>
    <subsection>
      <title>Dual tracks and van Kampen diagrams</title>
      <p>
	Comapring the presentation <m>G=\pres X R</m> and the
	presentation given in <xref ref="eq_HNN_pres"/> we see that we
	have extra <term>HNN relations</term> which give rise to the
	following 2-cells:
      </p>
      <figure xml:id="fig_HNN_2_cell">
	<caption>An HNN 2-cell.</caption> <image width="50%"
	xml:id="HNN_2_cell" source="images/HNN_2_cell.png"/>
      </figure>
      <p>
	Within each such 2-cell, we can draw a <term>dual
	<m>t</m>-track</term> which a segment in each HNN-2-cell
	joining the midpoints of the <m>t</m>-labeled edges. Within a
	van Kampen diagram, because the <em>only place</em>
	<m>t</m>-labelled edges occur is either as fully external
	edges, or inside HNN-2-cells, these segments join up to make
	<term>dual <m>t</m>-tracks in van Kampen diagrams.</term>
      <figure xml:id="fig_dual_t_tracks">
	<caption>Dual <m>t</m>-tracks.</caption> <image width="100%"
	xml:id="dual_t_tracks" source="images/dual_t_tracks.png"/>
      </figure>
      </p>
      <p>
	This next lemma is a topological consequence of our
	requirements that van Kampen diagrams are planar and simply
	connected, that dual tracks are curves, and the Jordan curve
	theorem. One could probably also come up with a simpler purely
	combinatorial proof... but whatever, the lemma is completely
	obvious.
      </p>
      
	<lemma xml:id="lem_track_lemma">
	  <title>
	    The dual track lemma
	  </title>
	  <statement>
	    <p>Dual tracks within a van Kampen diagram <m>\mathcal
	    D</m> are either points, arcs with endpoints in the
	    boundary of the diagram, or circles. Every track divides
	    <m>\mathcal D</m> into two disjoint regions. Distinct
	    tracks are disjoint.</p>
	  </statement>
	</lemma>
	<p>
	We note that if a  point type or an arc type track did not
	divide <m>\mathcal D</m> into two distinct components we would
	violate simple connectivity. If a circular track did not
	divide into two components we would have an embedded Möbius
	strip.
	<figure xml:id="fig_violations_and_strips">
	<caption>When tracks do not divide into 2 components.</caption> <image
	width="100%" xml:id="violations_and_strips"
	source="images/violations_and_strips.png"/>
      </figure>
      </p>
      <p>
	This topologically flavoured lemma is the key to proving
	things about HNN extensions. We start with the following:
      </p>
      <theorem xml:id="thm_HNN_embed">
	<statement>
	  <p>
	    If <m>G = \pres X R</m> and we have an HNN extension <me>
	    G*_t=\pres{X,t}{R,t^{-1}at = \varphi(a); a\in A },</me>
	    then <m>G</m> is naturally isomorphic to a subgroup of
	    <m>G*_t</m>. </p>
	</statement>
        <proof>
	<p>
	  Consider the two presentation. The inclusions <m>X \into
	  X\cup\{t\}</m> and <m>R \into R
	  \cup\{t^{-1}w_at(w_{\varphi(a)})^{-1}\mid a \in A\}</m>,
	  where <m>w_a,w_{\varphi(a)}</m> are choices of words in
	  <m>X^{\pm 1}</m> representing the elments
	  <m>a,\varphi(a)</m> in <m>G</m>, induce by Lemma <xref
	  ref="lem_pres_hom"/> a natural homomorphism <m>\psi:G \to
	  G*_t</m>. We need to show that <m>\psi</m> is injective.
	</p>
	<p>
	  Suppose towards a contradiction that <m>\psi</m> was not
	  injective. Then there is some <m>g \in G\setminus\{1\}</m>,
	  of minimal word length, such that <m>\varphi(g)\neq
	  1</m>. By van Kampen's Lemma (<xref ref="thm_VK_lem"/>)
	  there is some reduced word <m>w_g</m> (realizing minimal
	  word length) which is the boundary word of a van Kampen
	  diagram <m>\mathcal D</m> whose 2-cells have boundary words
	  from <m>R \into R \cup\{t^{-1}w_at(w_{\varphi(a)})^{-1}\mid
	  a \in A\}</m>.
	</p>
	<p>
	  Because <m>g \neq_G 1</m>, <m>\mathcal D</m> cannot consist
	  solely of 2-cells with boundaries from <m>R</m>, therefore
	  <m>\mathcal D</m> must contain HNN-2-cells and therefore at
	  least one dual <m>t</m>-tracks. Let <m>\mathcal D</m> such a
	  diagram with a <em>minimal</em> number of tracks. Because
	  the boundary word of <m>\mathcal D</m> is a word containing
	  letters only in <m>X</m> none of the tracks can reach the
	  boundary of <m>\mathcal D</m>, so they must all be cicrcles.
	</p>
	<p>
	  Let <m>\tau \subset \mathcal D</m> be an innermost circular
	  track, i.e. it doesn't enclose any other circular
	  tracks. The union of 2-cells containg it for an annulus
	  <m>\mathcal A</m> with an inner boundary word <m>w^{in}</m>
	  and an outer boundary word <m>w^{out}</m>. Now note on the
	  one hand that, without loss of generality, <m>w^{in}</m> is
	  a product of elements in <m>A</m> therefore <m>w^{in} \in
	  A</m> and <m>w^{out} = \varphi(w^{in})</m>. On the other
	  hand <m>w^{in}</m> is the boundary word of a van Kampen
	  (sub) diagram, and since <m>\tau</m> is innermost there are
	  no HNN-2-cells, so all 2-cells in the subdiagram have
	  boundary labels in <m>R</m>. This means that <m>w^{in} =_G
	  1</m> and since <m>\varphi A \to A'</m> is an isomorphism we
	  have that <m>w^{out}=_G 1</m> as well. Therefore by van
	  Kampen's lemma we can find a van Kampen diagram
	  <m>\mathcal{D}'</m>with 2-cells with boundary in <m>R</m>
	  whose boundary word is <m>w^{out}</m>.
	</p>
	<figure xml:id="fig_track_surgery">
	  <caption>Surgically decreasing the number of tracks, by
	  taking out an innermost track.</caption> <image width="100%"
	  xml:id="track_surgery" source="images/track_surgery.png"/>
	</figure>
	<p>
	  It follows that we can cut out the annulus <m>\mathcal A</m>
	  and surgically re-attach <m>\mathcal D'</m>. The resulting van
	  Kampen diagram is a witness of the triviality of <m>w_g</m>
	  in <me> G*_t=\pres{X,t}{R,t^{-1}at = \varphi(a); a\in A
	  },</me> with one less track than <m>\mathcal D</m>, but this
	  contradicts the fact that <m>\mathcal D</m> had a minimal
	  number of tracks.
	</p>
	</proof>
      </theorem>
      <p>
	In fact, the main thrust of the proof of the previous Theorem
	can be restated as the following lemma:
      </p>
      <lemma xml:id="lem_min_tracks">
	<statement>
	  <p>
	    Among all van Kampen diagrams witnessing the triviality of
	    a word in an HNN extension, a diagram <m>\mathcal D</m>
	    with a minimal number of dual <m>t</m>-tracks will not
	    contain any circlar tracks.
	  </p>
	</statement>
      </lemma>

      <p>
	Next we have this other injectivity result for the mapping
	<m>\ZZ \to \gen t</m>:
      </p>
      <proposition>
	<statement>
	  Let <m>G*_t</m> be an HNN extension with stable letter
	  <m>t</m>, then the element <m>t</m> has infinite order in
	  <m>G*_t</m>. 
	</statement>
	<proof>
	  <p>Suppsose towards a contradiction that <m>t^n=1</m> form
	  some <m>n>0</m>. Then <m>t^n</m> is the boundary word of a
	  van Kampen diagram <m>\mathcal D</m>. This means that there
	  are tracks starting and ending on the boundary of
	  <m>\mathcal D</m>, but since the 2-cells containing
	  containing tracks are HNN-2-cells, <xref
	  ref="fig_twisted_track"/> below  shows that any such track
	  <m>\tau</m> must lie in a "twisted strip".
	  <figure xml:id="fig_twisted_track">
	    <caption>A twisted strip.</caption> <image width="50%"
	    xml:id="twisted_track" source="images/twisted_track.png"/>
	  </figure>
	  </p>
	  <p>
	    This contradicts the planarity of <m>\mathcal D</m>, or
	    the fact that <m>\tau</m> cuts <m>\mathcal D</m> into two
	    components.
	  </p>
	</proof>
      </proposition>
      
    </subsection>

    <subsection>
      <title>Economical presentations and (some of) the secrets of
      <m>\mathrm{BS}(1,2)</m></title>
      <p>
	The presentation <xref ref="eq_HNN_pres"/> for <m>G*_t</m>
	may have infinitely many relators, one for each element in
	<m>A</m>. Until now, this infinite presentation has been
	convenient, but seeing as we are primarily interested in
	finitely presented groups, it will be nice to get a criterion
	for when an HNN extension is also finitely presented.
      </p>
      <proposition xml:id="prop_HNN_fp">
	<statement>
	  <p>
	    Suppose that the associated subgroup <m>A,A' \leq G</m>
	    are finitely generated and that <m>G=\pres X R</m> is
	    finitely presented. Then the HNN extension <m>G*_t</m> is
	    finitely presentable as
	    <me>
	      G*_t = \pres{X,t}{R; t^{-1}a_it(a_i')^{-1}: 1\leq i \leq
	      n}
	    </me>
	    where <m>\{a_1,\ldots a_n\}</m> are words in <m>X^{\pm
	    1}</m> representing a finite generating set for <m>A</m>
	    and the <m>a_i'</m> are words satisfying <m>\varphi(a_i)
	    = _G a_i'</m>.
	  </p>
	</statement>
      </proposition>
      <p>
	So now let's turn our attention to the following little
	presentation:
	<me>
	  \mathrm{BS}(1,2) = \pres{a,t}{t^{-1}ata^{-2}}.
	</me>
	Let's show that it is an HNN extension.
      </p>
      <p>
	We first note that <m>\ZZ \approx \pres{a}{}</m>. Now
	<m>\pres{a}{}</m> contains the subgroups <m>\gen a</m>,
	i.e. the whole thing, and <m>\gen{a^2}</m>,
	i.e. <m>2\ZZ</m>. Both of these subgroups are isomorphic to
	<m>\ZZ</m> and we can take the isomorphism:
	<md>
	  <mrow>
	    \varphi: \gen a \amp \to \gen{a^2}
	  </mrow>
	  <mrow>
	    a \amp \mapsto a^2.
	  </mrow>
	</md>
	Recall that a homomorphism is fully determined by the image of
	a generating set.
      </p>
      <p>
	Therefore <m>\mathrm{BS}(1,2)</m> is an HNN extension of the
	cyclic group. In particular we have an injective homomorphisms
	<me>
	\ZZ \approx \pres{a}{} \into \pres{a,t}{t^{-1}ata^{-2}},
	</me> 
	so <m>a</m> has infinite order in
	<m>\mathrm{BS}(1,2)</m>. This fact was what was missing in
	<xref ref="eg_BS12_1"/>. Now we have proved the existence of a
	group that is "algebraically" embedded into another group, but
	such that the inclusion is not a quasi isometric embedding. 
      </p>
      
      <p>
	Actually, the simplest examples of distorted subrgroups
	(i.e. subgroups that are not quasi isometrically embedded)
	arise from HNN extensions.
      </p>
      
      <p>
	Similarly, we see that the other Baumslag-Solitar groups
	<me>
	  \mathrm{BS}(n,m) = \pres{a,b}{b^{-1}a^nba^{-m}}
	</me>
	are also infinite and the element <m>a</m> has infinite
	order. Note that here although we used the letter <m>b</m>
	instead of <m>t</m>, we still have the HNN extensions
	structure.
      </p>
    </subsection>

    <subsection>
      <title>
	Syllables and Britton's lemma.
      </title>
      <p>
	Our treatment of HNN extensions, using van Kampen diagrams and
	tracks, is not historical. In this final section we will give
	some classical notation and the main classical result
	regarding HNN extensions.
      </p>
      <p>
	Suppose that we are given <m>G = \pres X R</m> then every
	element in <m>G*_t</m> can be represented as a word of the
	form
	<me>
	  g =_{G*_t} w= a_0t^{n_1}a_1 \cdots t^{n_m}a_m, \textrm{ or }
	  a_0t^{n_1}, \textrm{or} t^{n_m}a_m 
	</me>
	where the subwords <m>a_i</m> are words in <m>X^{\pm 1}</m>,
	<m>t</m> is the stable letter, and the <m>n_i \in \bbZ</m>. The
	words <m>a_i</m> are called <m>G</m>-syllables.
      </p>
      <p>
	If we are more explicit and identify <m>A,A' \leq G</m> and
	<m>\varphi:A \to A'</m> so that <m>\varphi(a) = t^{-1}at; a
	\in A</m> then we say that a word <m>w</m> can be
	<term>pinched</term> if it contains a subword<me>
	t a_i t^{-1} \textrm{ or } t^{-1} a_j t,
      </me>
      where <m>a_i \in A'</m> or <m>a_j \in A</m>. In this case we can
      reduce the numner of occurrences of <m>t</m> via
      <me>
	t a_i t^{-1} = \varphi^{-1}(a_i) \textrm{ or } t^{-1} a_j t =
	\varphi(a_j).
      </me>
      For this reason we will say that a word in an HNN extension is
      <term>reduced</term> if it doesn't contain any pinches. We now
      finish by stating what is the classical fundamental theorem of
      HNN extensions:
      </p>
      <theorem xml:id="thm_brittons_lem"><title>Britton's Lemma</title>
      <statement>
	<p>
	  If a word <m>w</m>in an HNN extension <m>>G*_t</m> represents the
	  trivial element, then either it is a word in <m>X^{\pm
	  1}</m> representing the trivial element in <m>G</m> or it
	  can be pinched.
	</p>
      </statement>
      </theorem>
      <p>
	In particular reduced words in HNN extensions are
	non-trivial. At this point there is enough machinery so that
	an interested reader could consult Chapter 9 of <xref
	ref="book_stillwell"/> to see how to contruct a group with
	undecidable word problem.
      </p>
    </subsection>
    <exercises>
      <exercise>
	<statement>
	  <p>Consider <m>\ZZ = \gen a</m>. <m>\gen a</m> has two
	  automorphisms, the identity automorphism and the
	  automorphism perscribed by <m>a \mapsto a^{-1}</m>.</p>
	  <ol>
	    <li>Identify the group you get when you use the identity
	    automorhpism. I assure you, you know this group.</li>
	    <li>
	      Show that the group <m>G'</m>obtained by forming a HNN
	      extension using the non-trivial automorphism of
	      <m>\ZZ</m> is not isomorphic to the group you found
	      previously.
	    </li>
	    <li>
	      Give a critique of the notation <m>G*_t</m> used to
	      denote an HNN extension.
	    </li>
	  </ol>
	</statement>
      </exercise>
      <exercise>
	<statement>
	  <p>Prove <xref ref="prop_HNN_fp"/>.</p>
	  <p>Hint: Start by showing that for each of the (possibly
	  infinitely many) old HNN-2-cells, you can construct a van
	  Kampen diagram with the same boundary word using your finite
	  set of relations. Use this and van Kampen's Lemma to apply
	  <xref ref="lem_pres_hom"/> in order to get an isomorphism
	  between the two groups corresponding to the finite and
	  infinite presentation.</p>
	</statement>
      </exercise>
      <exercise>
	<statement>
	  <p>
	    Prove Britton's Lemma (<xref ref="thm_brittons_lem"/>)
	  </p>
	  <p>
	    Hint: Draw a van Kampen diagram. Seriously, MAKE A
	    DRAWING. Explain why you can assume there are no circular
	    tracks. Find an "outermost" track and show that the piece
	    of the boundary word travelling between the endpoints of
	    the outermost track must lie in one of the associated
	    subgroups.
	  </p>
	</statement>
      </exercise>
      <exercise>
	<statement>
	  Take the free group <m>F_3 = F(a,b,c)</m> and find two isomorphic
	  subgroups <m>H,H'</m> of rank at least 4.
	  <ol>
	    <li> Give an isomorphism between <m>H,H'</m> and write out
	    the full presentation of the corresponding HNN extension
	    <m>G = (F_3*_t)</m>
	    </li>
	    <li>
	      Referring to results of the previous chapters, give a
	      convincing explanation of how to solve the word problem
	      in this group.
	    </li>
	  </ol>
	  <p>
	    Hint: Subgroup membership and pinching.
	  </p>
	</statement>
      </exercise>
    </exercises>
  </section>

  <section>
    <title>
      A pause: why are doing any of this anyway?
    </title>
    <introduction>
      <p>
	In the previous chapter we presented HNN extensions. The
	motivation for doing so was to demonstrate the effectiveness
	of van Kampen diagram arguments. That said why should anybody
	care about HNN extensions to begin with? In this section we
	will try to place HNN extensions into a larger (and more
	interesting) context.
      </p>
      <p>
	One thing HNN extensions are good for are to construct groups
	with interesting properties, for example we constructed
	<m>\mathrm{BS}(1,2)</m> as an HNN extension of <m>\ZZ</m> and
	in so doing were able to show that some subgroups are not
	quasi-isometrically embedded.
      </p>
      <p>
	Another important application is as follows. A state of a <url
	href="https://en.wikipedia.org/wiki/Turing_machine">Turing
	machine</url> (i.e. <url
	href="https://www.youtube.com/watch?v=E3keLeMwfHY"> a
	theoretical computer </url>) consists : one of finitely many
	an internal state <m>\{Q_1,\ldots,Q_r\}</m>, and the string of
	symbols written on a tape. It is possible, by a clever choice
	of normal forms, to encode the state of a as elements of some
	group <m>H</m> so that, given a state <m>s</m>, there is a
	corresponding a word <m>w_s</m> and corresponding group
	element. Crucially different states give different <em>group
	elements</em>. A transition <m>s_1\to s_2</m> is achieved by
	an HNN extension <m>H*_t</m> such that
	<me>
	  t^{-1}w_{s_1}t =_H w_{s_2}.
	</me>
	From there, using elementary but clever arguments, it is
	possible to construct a group with undecidable word problem
	and to show that the isomorphism problem is undecidable. An
	interested reader can consult Chapter 9 of <xref
	ref="book_stillwell"/> for a thorough account.
      </p>

      <p>
	Besides creating designer groups, HNN extensions play a much
	deeper role.
      </p>
      
    </introduction>
    <subsection>
      <title>
	The amalgamated product: the HNN extension's more popular
	sibling
      </title>
      <p>
	Given groups <m>G,H</m> it is possible to form their Cartesian
	product <m>G\times H = \{(g,h)\mid g\in G,h\in H\}</m> with
	multiplication defined componentwise. Another way of combining
	groups is via a <term>free product</term> which we define in
	terms of presentations as follows:
	<ol>
	  <li> Let <m>G = \pres X R</m> and <m>H = \pres Y S</m>, then
	  the free product is:</li>
	  <li>
	    <me>
	      G*H = \pres{X,Y}{R,S}
	    </me>
	  </li>
	</ol>
	Where we abuse notation and write, for example, <m>X,Y</m>
	instead of <m>X \cup Y</m>. As for HNN extensions, elements of
	<m>G*H</m> are represented as words<me> a_1b_1\cdots a_nb_n
	</me> where the <m>a_i,b_j</m> are (possibly empty) words in
	<m>X^{\pm 1},Y^{\pm 1}</m>, respectively. Call them
	<term><m>G</m> and <m>H</m>-syllables</term> if you want. Here
	there are no relations involving letters from both <m>X</m>
	and <m>Y</m>, so an van Kampen diagram argument similar to,
	but easier than, the one used to prove <xref
	ref="thm_HNN_embed"/> shows that we can assume <m>G,H \leq
	G*H</m>.
      </p>
      <p>
	Note that if we present <m>\ZZ =
	\pres{a}{}\approx\pres{b}{}</m> then we find that
	<me>
	  \ZZ*\ZZ = \pres{a,b}{} = F(a,b).
	</me>
	Even better, consider the trivial group <m>\{1\}=\pres c c</m>
	(i.e. a group with one generator that is declared to be
	trivial.) The trivial group admits the identity automorphism,
	in this case, given by <m>c \mapsto c</m> so we can form the
	HNN extension of the trivial group
	<me>
	  \{1\}*_t = \pres{c,t}{c,t^{-1}ctc^{-1}}
	  \stackrel{\mathrm{Tietze}}{\approx} \pres{t}{} \approx \ZZ.
	</me>
	So in this way, starting with the trivial group, it is
	possible to construct all free groups just by using HNN
	extensions free products. In fact only HNN extensions are
	sufficient.
      </p>
      <p>
	Suppose now we are given two group <m>G = \pres X R,H = \pres
	Y S</m> and suppose we have a pair of injective
	homomorphisms:
	<men xml:id="eq_amalg_monos"> G \stackrel{\psi}{\hookleftarrow} A
	\stackrel{\phi}{\hookrightarrow} H,
	</men>
	i.e. <m>G</m> and <m>H</m> contains isomorphic copies of
	<m>A</m> as subgroups. Then these isomorphisms prescribe a way
	of making a new group by "gluing" <m>G</m> and <m>H</m> along
	the images of <m>A</m>. The <term>amalgamated product of
	<m>G</m> and <m>H</m> over <m>A</m> </term> is the group
	<men xml:id="eq_amalg_pres">
	  G*_A H = \pres{X,Y}{R,S, \psi(a)=\varphi(a);a \in A}
	</men>
	Note here that although <m>A</m> is not a subgroup of <m>G</m>
	or <m>H</m> we have for all <m>a \in A, \psi(a)\in G,
	\varphi(a) \in H</m> so that the set of <term>amalgamating
	relations</term> <m>\{\psi(a)\varphi(a)^{-1} \mid a \in
	A\}</m> can in fact be written as words in <m>(X\cup Y)^{\pm
	1}</m>.
      </p>
      <p>
	Similarly to the case with HNN extensions, we can observe that
	ther only relations containing letters from both <m>X</m> and
	<m>Y</m> are the amalgamating relations, so in van Kampen
	diagrams we have <term>amalgamating 2-cells</term>. Similarly
	to the case for <term>HNN-e-cells</term> we can draw tracks in
	such 2-cells.
	<figure xml:id="fig_amalg_track">
	  <caption>A track in an amalgamating 2-cell.</caption> <image
	  width="30%" 
	  xml:id="amalg_track" source="images/amalg_track.png"/>
	</figure>
      </p>
      <p>
	Using the arguments of the previous chapter we can prove
	analogous results for amalgamated products, like embedding
	theorems, i.e. <m>G \leq G*_A H</m> and the analogue of
	Britton's lemma, i.e. if a word
	<me>
	a_1b_1\cdots a_nb_n = _{G*_AH} 1
	</me>
	Then either some syllable <m>G \ni a_i \in \psi(A)</m> or <m>H
	\ni b_j \in \varphi(A)</m>. Finally if the amalgamating
	subgroup <m>A</m> is finitely generated and both <m>G</m> and
	<m>H</m> are finitely presented, then the amalgamated product
	is finitely also presented (again same argument as for HNN
	extensions.) <em>The only difference is that tracks are nicer
	to draw in the HNN case.</em>
      </p>

      <p>
	Ultimately the reason why amalgamated products are more
	popular is that gluing two groups together along a subgroup
	is more intuitively easier to understand than whatever is done
	for HNN extensions. Both are equally important.
      </p>
    </subsection>
    <subsection>
      <title>
	Stop avoiding the question! Why should I care?
      </title>
      <p>
	It is now time to have the talk about category theory. So,
	um... when a mother and a father, or any couple whose members
	may or may not have biary genders, care alot for each
	other... oops wrong talk.
      </p>
	
	<p>
	A <term>category</term> consists of a collection of
	<term>objects</term> and a collection of <terms>arrows</terms>
	between these objets, sometimes called
	<term>morphisms</term>. In practice categories consist of
	objects of the same <term>type.</term> Here are some examples:
	<ol>
	  <li> The category <m>\mathbf{set}</m> whose objects consists
	  of all sets (so the collection of objects in a category need
	  not be a set [ignore this parenthesis if you don't know about
	  <url
	  href = "https://en.wikipedia.org/wiki/Russell%27s_paradox">
	    Russell's  paradox</url>]) and the morphisms are
	  functions.</li>
	  <li>
	    The category <m>\mathbf{group}</m> whose objects are
	    groups and whose morphisms are homomorphisms.
 	  </li>
	  <li>
	    The category <m>\mathbf{AbGroup}</m> whose objects are
	    abelian groups and whose morphisms are homomorphisms.
 	  </li>
	  <li>
	    The category <m>\mathbf{Zmod}</m> whose objects are
	    <m>\ZZ</m>-modules abelian groups and whose morphisms are
	    <m>\ZZ</m>-linear homomorphisms.
 	  </li>
	  <li>
	    A <term>based topological space</term> consists of a pair
	    <m>(X,x_0)</m> where <m>x_0</m> is some point in <m>X</m>
	    called a basepoint and we can form a category out of these
	    objects by taking <term>based continuous functions</term>
	    denoted<me> (X,x_0) \to (Y,y_0) </me> are continuous map
	    <m>X\to Y</m> that map basepoints to basepoints,
	    i.e. <m>x_0 \mapsto y_0</m>.
	  </li>
	  <li>
	    A directed graph forms a <term>small category</term> the
	    objects are the vertices and arrows are the edges (which
	    are literally arrows.)
	  </li>
	</ol>
	We also have rings, field extensions, etc.
      </p>
      <p>
	Certain categories have features that others don't. For
	example for all the listed categories, except the small
	category, each object admits an arrow to itself: the identity
	arrow, which acts as the identity function. Again, with the
	exception of the small category, all other morphisms come from
	functions so we have a composition operation <me> f\circ g
	</me> on morphisms, provided their domains and codomains match
	up.
      </p>
      <p>
	One advantage of category theory is that we can universally
	define concepts. For example the categories of groups, abelian
	groups, <m>\ZZ</m>-modules, and rings are all algebraic we
	have for example the following:
	<ol>
	  <li> An isomorphism is a morhpism <m>f:A \to B</m> such that
	  there exists another morphism <m>g</m> such that <m>g\circ f
	  = 1_A</m>, the identity morphism on <m>A</m>.</li>
	  <li>
	    Up to unique isomorphism (i.e. there may be multiple
	    objects that have this property, but for any two there is
	    a unique isomorphism between them), the trivial object
	    <m>T</m> is the object such that for any other object
	    <m>A</m> there exists a unique surjective morphisms <m>f:A
	  \to T</m>. I.e. the trivial object is the universal receiver.
	  </li>
	  <li>
	    If we define the <term>cokernel</term> of a morphism to be
	    it's image then we have the first isomorphism theorem<me>
	    \mathrm{coker}(f) \approx \mathrm{dom}(f)/\ker(f)
	  </me>
	  </li>
	</ol>
	Note that free groups play the opposite role as a universal
	sender.
      </p>
    </subsection>
    <subsection>
      <title>
	Come one! You just gave me yet another super abstract thing
	not to care about!
      </title>
      <p>
	I assure you there is a point to this!
      </p>
      <p>
	Certain constructions can also be defined categorically for
	example. Take two objects <m>A,B</m> we want to define a third
	object <m>C</m> which satisfies the following property: There
	is a pair of surjective morphisms (also called
	<term>epimorphisms</term>) <m>p_A:C\to A, p_B:C\to B</m> such
	that for any object <m>T</m> and any pair of morphisms
	<m>\psi:T \to A</m> and <m>\phi:T \to B</m>, there to
	exist a unique morphism <m>\rho</m> which makes the following
	diagram commute:
	<figure xml:id="fig_product">
	  <caption>The specification of a product</caption>
	  <image width="40%" xml:id="product">
	    <latex-image>
	      \begin{tikzpicture}[scale = 2]
	      \node (C) at (0,-1) {$C$};
	      \node (A) at (-1,-1) {$A$};
	      \node (B) at (1,-1) {$B$};
	      \node (T) at (0,0) {$T$};
	      \draw[->>] (C) -- node[above]{$p_A$} (A);
	      \draw[->>] (C) -- node[above]{$p_B$} (B);
	      \draw[->] (T) -- node[above]{$\forall \psi$} (A);
	      \draw[->] (T) -- node[above]{$\forall \phi$} (B);
	      \draw[dashed,->] (T) --node[left]{$\exists! f$} (C);
	      \end{tikzpicture}
	    </latex-image>
	  </image>
	</figure>
	Such an object, if it exists, is called the <em>product</em>
	of <m>A</m> and <m>B</m>. Note that in most familiar algebraic
	structures, the Cartesian product <m>A\times B</m> satisfies
	all these properties. Indeed, we have the projection morphisms
	onto factors, e.g.  <m>A\times B \stackrel{p_A}{\onto} A</m>,
	and the maps <m>\phi,\psi</m>, from and an arbitrary object
	<m>T</m> specify the images on each factor, so the only
	possibility for <m>f</m> is
	<md>
	  <mrow>f \amp = \psi \times \phi</mrow>
	  <mrow> x \amp \mapsto (\psi(x),\phi(y)) </mrow>.
      </md>
      </p>
      <p>
	Note that if another object <m>C'</m> also satisfies this
	property, we can put in the place of <m>T</m> in the diagram
	and use the projection functions and we'll get that <m>C'
	\approx C</m> and that this isomorphism is unique.
      </p>
      <p>
	In this way we have a completely categorical definition of a
	<term>(direct) product</term>. In category theory a cool thing
	to do is to put the word co in front of stuff and reverse
	arrows. Compare the diagram below with <xref
	ref="fig_product"/>.
	<figure xml:id="fig_coproduct">
	  <caption>The specification of a coproduct</caption>
	  <image width="40%" xml:id="coproduct">
	    <latex-image>
	      \begin{tikzpicture}[scale = 2]
	      \node (C) at (0,-1) {$C$};
	      \node (A) at (-1,-1) {$A$};
	      \node (B) at (1,-1) {$B$};
	      \node (T) at (0,0) {$T$};
	      \draw[right hook->] (A) -- node[above]{$i_A$} (C);
	      \draw[left hook->] (B) -- node[above]{$i_B$} (C);
	      \draw[->] (A) -- node[above]{$\forall \psi$} (T);
	      \draw[->] (B) -- node[above]{$\forall \phi$} (T);
	      \draw[dashed,->] (C) --node[left]{$\exists! f$} (T);
	      \end{tikzpicture}
	    </latex-image>
	  </image>
	</figure>
	where <m>i_A,i_B</m> (which reverse the surjective
	<m>p_A,p_B</m>) are injective. The object <m>C</m> satisfying
	this diagram is called the coproduct.
      </p>
      <p>
	In the category of groups the coproduct of <m>A,B</m> is the
	direct product <m>A*B</m> given at the very beginning of this
	section. Indeed for <m>A*B</m> we mentioned a van Kampen
	diagram argument which gives the inclusion <m>i_A:A \into
	A*B</m>, furthermore the maps <m>\psi,\phi</m> fully specify
	images of a generating set of <m>A*B</m> into <m>T</m>,
	finally by <xref ref="lem_pres_hom"/> it is immediate that all
	the relations on <m>A*B</m> vanish, thus giving us our unique
	homomorphism, compatible with the given <m>\psi,\phi.</m>
      </p>
      <p>
	Thus, even though a direct product seems just like stupidly
	smashing two presentations together, in the category of
	groups, the free product realizes the coproduct, i.e. the
	dual of the direct product. Amalgamated products and HNN
	extensions can also be similarly be defined, albeit with more
	complicated diagrams. For example amalgamated products are the
	result of dualizing <url href =
	"https://en.wikipedia.org/wiki/Pullback_(category_theory)">fibre
	products.</url> Have another look at <xref
	ref="eq_amalg_monos"/>.
      </p>

      <p>
	Incidentally, in the categories of <m>\ZZ</m> modules and
	rings, coproducts are direct sums, i.e. <m>A\oplus B</m> and
	products are <m>A \times B</m>, which unless when taking
	infinitely many terms, are interchangeable. In group theory
	coproducts are more complicated because of the
	non-commutativity.
      </p>
    </subsection>
    <subsection>
      <title>
	Okay, so maybe smashing presentations together isn't that
	random after all. What is it good for?
      </title>
      <p>
	We must now discuss <term>functoriality</term>. A functor
	<m>F</m> is a map <m>F:C_1 \to C_2</m> between categories such
	that for any arrow <m>A \stackrel{f}{\to} B</m> in <m>C_1</m>,
	in <m>C_2</m> we have <m>F(A) \stackrel{F(f)}{\to}
	F(B)</m>. Let's give some examples.
	<ol>
	  <li>
	    Every group has an underlying set, and every homomorphisms
	    is a function. We therefore have the <term>forgetful
	    functor</term> <m>F:\mathbf{group} \to
	    \mathbf{set}</m>. We say it's forgetful because we forgot
	    about the algebra.
	  </li>
	  <li>
	    Every <m>\ZZ</m> module is an abelian group via the
	    addition operation. Conversely any ableian group <m>A</m>
	    admits a <m>\ZZ</m> multiplication via the exponentiation
	    map <m>g \mapsto g^n</m>. Since <m>A</m> is abelian
	    exponentiation is <m>\ZZ</m>-linear, i.e. <m>(gh)^n = g^n
	    h^n</m>, for all <m>n \in \ZZ.</m> Since <m>\ZZ</m>-linear
	    homomorphism are group homomorphism, and abelian group
	    homomorphisms commute with exponentiation (and therefore
	    have a linear structure). We have functors
	    <m>F:\mathbf{AbGroup} \to \mathbf{Zmod}</m> and
	    <m>G:\mathbf{Zmod} \to \mathbf{AbGroup}</m> with <m>F\circ
	    G = Id</m>, so the categories of ablian groups and
	    <m>\ZZ</m>-modules are isomorphic. Functionality thus
	    gives a rigorous way of saying abelian groups and
	    <m>\ZZ</m> modules are the same thing.
	  </li>
	  <li>
	    In <xref ref="sec_free_group_dehn"/> we mentionned
	    abelianization: take any group <m>G</m> and add relations
	    so that all its generators commute. This gives an ableian
	    quotient group <m>G_{ab}</m>. Again <xref
	    ref="lem_pres_hom"/> tells us that given a morphism
	    <m>f:G\to H</m>, following the images of generators gives
	    another morphism <m>f_{ab}:G_{ab} \to H_{ab}</m>, so
	    abelianizaition is a functor. Moreover since abelian
	    groups are isomorphic to <m>\ZZ</m>-modules. We can use
	    ableianization and linear algebra as a tool to study
	    groups. Recall that this was sufficient to prove that free
	    groups of different rank are not isomorphic, and can be
	    used to show that if a group has fewer relations then
	    generators, then it is non-trivial and in fact infinite.
	  </li>
	</ol>
      </p>
      <p>
	The importance of amalgamated free products and HNN extensions
	shows up in topology. Let <m>(S^1,s_0)</m> be a based circle
	and let <m>(X,x_0)</m> be a based space. Then a contiuous
	based map <m>\gamma: (S^1,s_0),(X,x_0)</m> is a loop in
	<m>X</m> based at <m>x_0</m>. The set of based loops of
	<m>(X,x_0)</m> (modulo homotopy), with the concatenation
	opeation form the fundamental group of <m>(X,x_0)</m>
	denoted<me> \pi_1(X,x_0).
      </me>
      </p>
      <p>
	Remarkably, although we have a continuum of based loops, if we
	only consider homotopy classes, then in many cases we have a
	countable set, in fact:
	<theorem>
	  <statement>
	    <p>
	      A group <m>G</m> is finitely presented if and only if it
	      acts properly and cocompactly by isometries on a
	      simply-connected geodesic space
	    </p>
	  </statement>
	</theorem>
      </p>
      <p>
	Basically the fundamental group of any compact manifold or CW
	complex will be finitely presented. <em>It is in this context
	that the study of groups with generators and relations
	originated.</em>
      </p>
      <p>
	Now if <m>\gamma :(S^1,s_0) \to (X,x_0)</m> is a loop and
	<m>f:(X,x_0) \to (Y,y_0)</m> is a continuous map, then
	<m>f\circ\gamma</m> is a loop in <m>(Y,y_0)</m>. In a topology
	course it is shown that the map:
	<me>
	  \pi_1(X,x_0) \ni [\gamma] \mapsto [f\circ\gamma] \in
	  \pi_1(Y,y_0), </me> where <m>[\gamma]</m> represents a
	  based homotopy class in fact is a <em>homomorphism</em>
	  <me>f_\sharp:\pi_1(X,x_0)\to \pi_1(Y,y_0).</me>
	  Thus <m>\pi_1</m> gives a functor from the category of based
	  topological spaces to the category of groups.
      </p>
      <p>
	Consider not the following generalization of a
	coproduct. Supose we have a pair of injective morphisms
	<m>i_X:Z\into X,i_Y:Z \into Y</m> then the <term>coproduct
	over <m>(i_X,i_Y)</m></term> is an object <m>C</m> equipped
	with two inclusions <m>\rho_X:X \into C,\rho_Y: Y\into
	C</m>such that givem any triple of commuting maps
	<m>\phi_X,\phi_Y</m> from <m>X,Y</m> (respectively)
	to any object <m>T</m>, there exists a unique a unique map
	<m>f:C \to T</m> making the following diagram commute:
      </p>
      <figure xml:id="fig_amalg_product">
	  <caption>The a coproduct over a pair of monomorphisms</caption>
	  <image width="40%" xml:id="amalg_product">
	    <latex-image>
	      \begin{tikzpicture}[scale = 2]
	      \node (C) at (0,-1) {$C$};
	      \node (A) at (-1,-1) {$X$};
	      \node (B) at (1,-1) {$Y$};
	      \node (T) at (0,0) {$T$};
	      \node (Z) at (0,-2) {$Z$};
	      \draw[right hook->] (A) -- node[above]{$\rho_X$} (C);
	      \draw[left hook->] (B) -- node[above]{$\rho_Y$} (C);
	      \draw[->] (A) -- node[above]{$\forall \phi_X$} (T);
	      \draw[->] (B) -- node[above]{$\forall \phi_Y$} (T);
	      \draw[dashed,->] (C) --node[left]{$\exists! f$} (T);
	      \draw[right hook->] (Z) --node[above]{$i_X$} (A);
	      \draw[right hook->] (Z) --node[above]{$i_Y$} (B);
  	      \end{tikzpicture}
	    </latex-image>
	  </image>
      </figure>
      <p>
	Note that our diagram commutation requirement means that we
	have an equality of compositions
	<me>
	  \phi_X\circ i_X : Z \to T = \phi_Y\circ i_Y : Z \to T 
	</me>
      </p>
	<p>
	  If the standard coproduct was the free product, it should
	  not come as a surprise to the reader that the the coproduct
	  ovar a pair of monomorphisms is nothing else than the
	  amalgamated product.
	</p>
	<p>
	  We therefore have two definitions of the amalgamated
	  product: a concrete one involving an explicit presentation
	  and one using the language of category theory, also
	  affectionately known as <term>abstract nonsense.</term>
	</p>
	<p>
	  What good is abstract nonsense? Let us now turn our
	  attention to based spaces. Let us first define an injective
	  continuous map <m>f:(Z,u_0) \into (X,x_0)</m> to be
	  <term><m>\pi_1</m>-injective</term> if it's functorial image
	  <m>f_\sharp \pi_1(U,u_0) \to \pi_1(X,x_0)</m> is also
	  injective. And consider the diagram <xref
	  ref="fig_amalg_product"/> in the context of of based
	  spaces. Then the universal object in the category of based
	  spaces is the topological space <m>X\cup_Z Y</m> obtained by
	  gluing <m>X</m> to <m>Y</m> as prescribed by the pair of
	  functions of from <m>Z</m> to <m>X,Y</m>. 
	</p>
	<p>
	  As an immediate consequence of functoriality, we get the
	  <term>Seifert van Kampen</term> (yes the same van Kampen)
	  theorem: the fundamental group of space obtained by gluing
	  spaces together is obtained by gluing the fundamental group
	  together. 
	</p>
	<figure xml:id="fig_glue_surfaces">
	  <caption>Gluing spaces together, glues together fundamental
	  groups. This picture depicts spaces, fundamental groups and
	  morphisms.</caption>
	  <image width="75%" xml:id="glue_surfaces"
		 source="images/glue_surfaces.png"/>
	</figure>
	<p>
	  Actually, the real Seifert van Kampen theorem handles when
	  the inclusion maps are not <m>\pi_1</m>-injective, but is
	  proved the same way (it's just that we would have to
	  generalize amalgamated products and all that stuff, but
	  there is nothing new needed.)
	</p>
	<p>
	  The mysterious HNN extensions occurs when a space gets glued
	  to itself, basepoint issues make things awkward, however.
	</p>
	<figure xml:id="fig_HNN_glue">
	  <caption>Glueing a space to itself. Notice how an extra loop
	  gets created.</caption>
	  <image width="75%" xml:id="HNN_glue"
		 source="images/HNN_glue.png"/>
	</figure>
    </subsection>

    <subsection>
      <title>
	Final remark.
      </title>
      <p>
      In the field of combinatorial and geometric group theory, we
      typically require that the amalgamating subgroup is mapped
      injectively. We could relax the definition of an amalgamated
      product and no longer require the maps <m>i_X,i_Y</m> to be
      injective as below:
       <figure xml:id="fig_gen_fibre_coprod">
	  <caption>Relaxing to coproducts over a pair of possibly
	  non-injective morphisms</caption>
	  <image width="40%" xml:id="gen_fibre_coprod">
	    <latex-image>
	      \begin{tikzpicture}[scale = 2]
	      \node (C) at (0,-1) {$C$};
	      \node (A) at (-1,-1) {$X$};
	      \node (B) at (1,-1) {$Y$};
	      \node (T) at (0,0) {$T$};
	      \node (Z) at (0,-2) {$Z$};
	      \draw[->] (A) -- node[above]{$\rho_X$} (C);
	      \draw[->] (B) -- node[above]{$\rho_Y$} (C);
	      \draw[->] (A) -- node[above]{$\forall \phi_X$} (T);
	      \draw[->] (B) -- node[above]{$\forall \phi_Y$} (T);
	      \draw[dashed,->] (C) --node[left]{$\exists! f$} (T);
	      \draw[->] (Z) --node[above]{$g_X$} (A);
	      \draw[->] (Z) --node[above]{$g_Y$} (B);
  	      \end{tikzpicture}
	    </latex-image>
	  </image>
       </figure>
       Again we would have a universal object, actually given by the
       same kind of presentation as <xref ref="eq_amalg_pres"/>, only
       here since <m>\psi,\varphi</m> are no longer injective, the
       factors <m>G,H</m> may no longer embed in the cofibered
       coproduct (or whatever it should be called). Still <xref
       ref="lem_pres_hom"/> can be used to show that this presentation
       will give the corresponding universal object. This
       generlaization of an amalgamated product is what is used in the
       full Seifert van Kampen Theorem, which covers the case where
       inclusions are no longer <m>\pi_1</m>-injective.
      </p>
       <p>
	 For example: the unit disc <m>D</m> has <m>\pi_1(D)=\{1\}</m>
	 whereas the unit circle <m>S^1</m> has <m>\pi_1(S_1)=\ZZ</m>
	 we certainly have the inclusion <m>S^1 \subset D</m>, and
	 this inclusion is not <m>\pi_1</m>-injective. The full
	 Seifert van Kampen Theorem covers this case.
       </p>
       <p>
	 This Seifert van Kampen Theorem is the one of the main tool
	 used to study the fundamental groups of topological spaces, a
	 field in which one of the most important results of this
	 century has been made:
	 <theorem>
	   <title>
	     Poincaré conjecture
	   </title>
	   <statement>
	     Let <m>M</m> be a closed 3-manifold. Then <m>M</m> is
	     homeomorphic to the the 3-sphere <m>S^3</m> if an only if
	     <m>\pi_1(M)=\{1\}</m>.
	   </statement>
	 </theorem>
       </p>
    </subsection>
  </section>

  <section><title>Lecture 16: The combinatorial geometry and topology
  of van Kampen diagrams.</title>
  <introduction>
    <p>Although we've been using them for a few lectures already, we
    will now give formal definitions of 2-complexes.</p>
    <p>
      An <term>open <m>n</m>-cell</term> is a copy of the open ball in
      <m>\RR^n</m>. For example an open <m>1</m>-cell is an open
      interval, and open <m>2</m>-cell is an open disc. We will now
      define a cell complex inductively as follows:
      <ol>
	<li>
	  A closed 0-cell is a point. A zero-complex is a disjoint
	  union of points.
	</li>
	<li>
	  A closed 1-cell consists of an open 1-cell (an interval) and
	  a boundary consisting of two closed zero-cells, i.e. an open
	  interval with it's two endpoints. We think of a 1-cell as
	  being embeddable into <m>\RR</m>. Note that if an open cell
	  is the 1-ball, then the 0-sphere (i.e. the points of
	  distance 1 from the origin in <m>\RR</m>) consists of two
	  points. A 1 complex is obtained by taking a collection of
	  1-cells and identifying points in their boundaries. Note
	  that this is precisely the definition of an undirected graph
	  that can contain multiedges and loops. <term>A combinatorial
	  mapping of 1-complexes</term> is a function between 1
	  complexes which sends 0-cells to 0-cells and 1-cells to
	  1-cells.
	</li>
	<li>
	  A closed 2-cell <m>D</m> consists of an open 2-cell and a
	  boundary <m>\partial B</m> which is 1-complex homeomorphic
	  to a circle (i.e. a closed polygon). Again we think of a
	  2-cell as being embeddable into <m>\RR^2</m>. A 2-complex
	  <m>X</m> is obtained by taking <m>X^{(1)}</m>, called a
	  1-skeleton, and attaching 2-cells via the identification
	  given by a combinatorial mapping <m>\partial B \to
	  X^{(1)}.</m>
	</li>
      </ol>
      The reader will probably see that this construction generalized
      to arbitrarily high dimensions. For our purposes, however, it is
      sufficient to stay in dimension 2, i.e. to work with
      2-complexes.
    </p>
    <p>
      Now we note that 2-complexes can be realized, and should be
      thought of, as CW complexes, also called <term>cell
      complexes</term>. That said the data that goes into describing
      them is completely discrete. It actually turns out that many
      interesting topological spaces can be studied from a
      combinatorial viewpoint.
    </p>
  </introduction>
  <subsection>
    <title>
      Euler characteristic of van Kampen diagrams.
    </title>
    <p>
      Given a finite (i.e. with finitely many cells) connected 2-complex
      <m>X</m> we have the following invariant called <term>Euler
      Characteristic</term>
      <men xml:id="eq_euler">
	\chi(X) = V_X-E_X+F_X
      </men>
      Were <m>V_X,E_X,F_X</m> denote the number of vertices (0-cells),
      edges (1-cells), faces (2-cells) of <m>X</m> (respectively).
    </p>
    <p>
      We will now define <term>collapses</term> which are
      transformations of cell complexes that are useful for inductive
      arguments. A <term>free <m>n</m>-face</term> in a cell complex
      <m>X</m> is an <m>n</m>-cell <m>f</m> which is contained in the
      boundary <m>\partial \sigma</m> of single open <m>n+1</m>-cell
      <m>\sigma</m>.
    </p>
    <figure xml:id="fig_free_faces">
      <caption>Some free faces and complexes without free
g      faces.</caption> <image width="75%" xml:id="free_faces"
      source="images/free_faces.png"/>
    </figure>
    <p>
      An <term>elementary collapse of cell complex <m>X</m> at a free
      face <m>f</m></term> is the process of passing to <m>X' \subset
      X</m> which is optained by deleting the free <m>n-face</m>
      <m>f</m> and the unique open (<m>n+1</m>)-cell <m>\sigma</m>
      containing <m>f</m>. We note that although <m>X'\subset X</m> we
      actually have a continuous function <me>r: X \onto X' </me> such
      that the restriction <m>r|_{X'} = Id_{X'}</m>, so that <m>r</m>
      is a retraction. In fact <m>r</m> is a <em>deformation
      retraction</em>. The reader should not panic if they don't know
      what a deformation retraction is, as the following consequence
      of this fact (which can be proved directly from definitions) is
      all we will need.
    </p>
    <lemma xml:id="lem_collapse_preserve_characteristic">
      <statement>
	<p> If <m>X \to X'</m> is an elementary collapse then
	<me>
	  \chi(X) = \chi(X').
	</me>
	</p>
      </statement>
    </lemma>
    <p>
      We now turn our attention specifically to van Kampen diagrams,
      which we have defined as finite planar simply connected
      2-complexes. We start with the following lemma.
    </p>
    <lemma xml:id="lem_van_kampen_free_faces">
      <statement>
	<p>
	  Any van Kampen diagram, which is not a point, contains a
	  free face and theredore admits an elementary collapse.
	</p>
      </statement>
      <proof>
	<p>
	  We first consider the case where <m>X</m> contains
	  2-cells. First note that because <m>X</m> is planar every
	  edge is contained in at most 3 edges.
	</p>
	<figure xml:id="fig_book">
	  <caption>Edges in van Kampen diagrams can only be contained
	  in two 2-cells and some 2-complexes without free
	  <m>1</m>-faces. </caption>
	  <image width="25%" xml:id="book"
		 source="images/book.png"/>
	</figure>
	<p>
	  So <m>X</m> has 2-cells, but no free faces, then every
	  connected union of 2-cells must be a closed 2-manifold
	  (i.e. a compact 2 manifold without boundary) contradicting
	  that <m>X</m> is planar.
	</p>
	<p>
	  We now consider the situation where <m>X</m> doesn't have
	  any 2-cells. Then <m>X</m> is a finite graph. Since <m>X</m>
	  is simply connected it doesn't contain any cycles, so
	  <m>X</m> is a finite tree, therefore it contains vertices of
	  degree 1, which are precisely free <m>0</m>-faces.
	</p>
	<p>
	  Having exhausted all possibilities, the result follows.
	</p>
      </proof>
    </lemma>

    From this we immediately have, which we will use later.
    <corollary>
      <statement>
	<p>
	  If <m>X</m> is a van Kampen diagram then <m>\chi(X)=1.</m>
	</p>
      </statement>
    </corollary>
    
  </subsection>
  <subsection>
    <title>The combinatorial Gauss-Bonnet theorem for planar
    diagrams.</title> <url
    href="https://en.wikipedia.org/wiki/Gauss–Bonnet_theorem">The
    classical Gauss-Bonnet theorem</url> relates the integral of
    curvature over a Riemannian manifold to the manifold's Euler
    characteristic. We will now present a combinatorial version of
    this fact. We&apos;ll start by stating the theorem and then define
    what is meant by curvature.  <theorem xml:id="thm_CGBT">
    <statement> <p>Let <m>X</m> be an angled 2-complex, then<me>
    \sum_{f \in 2\mathrm{-cells}} \mathrm{Curvature}(f) + \sum_{v \in
    0\mathrm{-cells}} \mathrm{Curvature}(v) = 2\pi\chi(X).  </me> </p>
    </statement> </theorem> <p> <term>An angled 2-complex</term> is a
    2-complex such that an angle has been assigned corner. We note
    that this is done abstractly, we don't actually care about whether
    it is realizable.

    <figure xml:id="fig_angled_2_cell"> <caption>An
    angled 2-cell. Angles are in radians. </caption> <image
    width="50%" xml:id="angled_2_cell"
    source="images/angled_2_cell.png"/> 
    </figure> 

    Given a 2-cell <m>f</m> we denote it's <term>perimeter</term>, the
    length of <m>\partial f</m>, by <m>|\partial f|</m>. We note that
    if <m>f</m> is such that two of it's boundary edges are identified
    as <m>e</m>, then we count <m>e</m> twice in <m>f</m>. We can now
    define the <term>curvature of a face</term>:
    <me>
    \mathrm{Curvature}(f) = \sum_{c \in \mathrm{corners}(f)} \angle c
    - (|\partial f|-2)\pi.
    </me>
  </p>

  <p> We note that for a regular polygon <m>P</m> with <m>|\partial
  P|</m> side in <m>\mathbf{E}^2</m>, the total angle sum is
  <m>(|\partial P|-2)\pi</m> (e.g. the sum of the internal angles of a
  triangle is <m>\pi</m>, for
  a square it's <m>2\pi</m>, etc). The
  curvature of a 2-cell therefore measures the excess angle sum
  compared to a Euclidean polygon.  </p> <p> The curvature of a vertex
  is a bit more subtle. On the one hand it is set up so that <xref
  ref="thm_CGBT"/> holds, but it also has geometrical
  significance. Given a vertex <m>v \in X</m> in a 2-cell, we can
  consider a spheres (i.e. a sets of points equidistant to <m>v</m>)
  shrinking to <m>v</m>. These sphere will intersect incident edges in
  points and incident 2-faces in arcs. We call the resulting,
  persisting 1-complex the <term>link of <m>v</m></term>, denoted
  <m>\mathrm{link(v)}</m>.
      <figure xml:id="fig_link">
	<caption>The link of a vertex. </caption>
	<image width="75%" xml:id="link"
	       source="images/link.png"/>
      </figure>
      We note, for example, that if <m>e</m> forms a loop at <m>v</m>,
      then it contributes two vertices to <m>\mathrm{link}(v)</m>. We
      also note that because <m>X</m> is an angled complex, each edge
      in <m>\mathrm{link}(v)</m> corresponds to the corner of some
      2-cell and therefore carries an angle. I.e. if <m>e \in
      E(\mathrm{link}(v)</m> then there is a well defined <m>\angle e</m>
    </p>

    <p>
      We can now define the curvature of a vertex:
      <me>
	\mathrm{Curvature}(v) =
	\pi(2-\chi(\mathrm{link}(v)))-
	\left( 
	\sum_{e \in E(\mathrm{link}(v))} \angle e
	\right)
      </me>
    </p>
    <p>
      We note that in the case where <m>\mathrm{link}(v)</m> is just a
      cycle, then if the picture is realized in the plane, the sum of
      the angles should add up to <m>2\pi</m>, and in this case the
      cuvature measures the total angle deficiency. This definition,
      however, extends to arbitrary angled 2-complexes.
    </p>
    <p>
      Ultimately <xref ref="thm_CGBT"/> is simply a double counting
      argument: the terms in these sums of curvature cancel out to
      give <m>2\pi\chi(X)</m>.
    </p>
  </subsection>
  <exercises>
    <exercise>
      <statement>
	<p>
	  Consider the (topological )2-sphere realized as a
	  tetrahedtron, <m>T</m> consisting of 4 triangles.
	</p>
	<p>
	  <ol>
	    <li>
	      Sketch <m>T</m> and compute <m>\chi(T)</m>.
	    </li>
	    <li>
	      Angle the triangles so that they are Euclidean
	      equilateral triangles, i.e. each corner has angle
	      <m>\pi/3</m>. What is the curvature of the faces, what
	      is the curvature of the vertices?
	    </li>
	    <li>
	      Now angle the complex so that each vertex has curvature
	      0. This can be done by making all the angles adjacent to
	      a vertex <m>v</m> add up to <m>2\pi.</m> Verify that
	      this indeed makes vertices have curvature 0. What is the
	      curvature of each face?
	    </li>
	  </ol>
	</p>
      </statement>
    </exercise>
    <exercise>
      <statement>
	<p> Repeat the previous exercise with a cube</p>
      </statement>
    </exercise>
    <exercise>
      <p>
	 Consult the following link for a <url
	 href="http://geometrygames.org/HyperbolicBlanket/">hyperbolic
	 blanket</url>, which is an infinite planar 2-complex whose
	 2-cells are 5 sided and such that every vertex is adjacent to
	 4 2-cells.
      </p>
      <p>
	Assume that the pentagons are regular Euclidean i.e. each
	angle is <m>\frac{3\pi}{5}</m>, what is the curvature of the
	vertices? 
      </p>
      <p>
	Why would people say a hyperbolic blanket is a negatively
	curved space?
      </p>
    </exercise>
  </exercises>
  
  </section>
  
</chapter>

  <!-- Chapter: Diagrams -->
  <!-- Lollipops. -->
 
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  <!-- END OF LECTURES -->
  
  
  <backmatter>
    <references>
      <p>
      Much of the material in these lectures is covered in <xref
      ref="book_lyndon-schupp"/>, but this book is difficult to
      read. Stillwell&apos;s book <xref ref="book_stillwell"/> has an
      excellent treatment of algorithmic problems and covers many
      crucial interactions between topology and group theory that
      will not be not covered in this course. Both of these books also
      give important historical accounts.
      </p>
      <p>
      Although the ideas of small cancellation theory have been around
      for many decades the paper <xref ref="art_mccammond-wise"/>
      gives a thorough and modern treatment of the topic. Most
      material on hyperbolic groups will be taken from <xref
      ref="notes_hyperbolic"/>.
      </p>

      <p> The book, which as of 2020, gives the best description of
      the field is Drutu and Kapovich&apos;s <em>Geometric Group
      Theory</em> <xref ref="book_drutu-kapovich"/>. This book also
      has many historical references. Many important topics not
      covered in this book are covered in <xref ref="GGT-park"/> which
      is also called... <em>Geometric Group Theory.</em>
      </p>


      <p>
    	As far as accessible contemporary introductions go, the texts
    	<xref ref="book_bogopolski"/> and <xref ref="book_loh_ggt"/>
    	are at a level similar to this course, but cover different
    	topics.(And yes, so far there are three books with the same
    	title.) <url
    	href="https://www.jstor.org/stable/j.ctt1vwmg8g">Office Hours
    	with a Geometric Group Theorist</url> apparently also gives a
    	good idea of the field. And finally <xref
    	ref="book_groups_and_back"/> is another good introductory text
    	which covers substantially different topics.
      </p>
      
      <biblio xml:id="book_bogopolski">
    	Oleg Bogopolski. <em>Introduction to Group Theory.</em>
    	February 2008.
      </biblio>
      <biblio xml:id="notes_hyperbolic">
    	J. M. Alonso, T. Brady, D. Cooper, V. Ferlini, M. Lustig,
    	M. Mihalik, M. Shapiro, and H. Short. <em>Notes on word hyperbolic
    	groups. In Group theory from a geometrical viewpoint (Trieste,
    	1990),</em> pages 3–63. World Sci. Publ., River Edge, NJ, 1991.
      </biblio>

      <biblio xml:id="GGT-park">
    	Mladen Bestvina, Michah Sageev, and Karen Vogtmann,
    	editors. <em>Ge- ometric group theory.</em> Number volume 21
    	in IAS/Park City math- ematics series. American Mathematical
    	Society ; Institute for Ad- vanced Studyb, Providence, RI :
    	[Princeton, N.J.], 2014.
      </biblio>

      <biblio xml:id="book_drutu-kapovich">
    	Cornelia Druţu and Michael Kapovich. <em>Geometric Group
    	Theory.</em> American Mathematical Soc., March
    	2018.
      </biblio>

      <biblio xml:id="book_lyndon-schupp">
    	Roger C. Lyndon and Paul E. Schupp. <em>Combinatorial group
    	theory.</em> Classics in Mathematics. Springer-Verlag, Berlin,
    	2001.
      </biblio>

      <biblio xml:id="book_stillwell">
    	John Stillwell. <em>Classical topology and combinatorial group
    	theory,</em> volume 72 of Graduate Texts in
    	Mathematics. Springer-Verlag, New York, second edition, 1993.
      </biblio>

      <biblio xml:id="art_mccammond-wise">
    	Jonathan P. McCammond and Daniel T. Wise. <em>Fans and Ladders
    	in Small Cancellation Theory.</em>. Proceedings of the London
    	Mathematical Society, 84(3):599–644, May 2002. Publisher:
    	Cambridge University Press.
      </biblio>

      <biblio xml:id="book_ggt_officehours">
    	Matt Clay and Dan Margalit, editors. <em>Office hours with a
    	geometric group theorist.</em> Princeton University Press,
    	Princeton, NJ, 2017.
      </biblio>

      <biblio xml:id="book_loh_ggt">Clara Löh. <em>Geometric group
      theory.</em> Universitext. Springer, Cham, 2017.</biblio>

      <biblio xml:id="book_groups_and_back">
    	Vaughn Climenhaga and Anatole Katok. <em>From Groups to
    	Geometry and Back.</em> American Mathematical Soc., April 2017
      </biblio>
    </references>
  </backmatter>
  
  </book>
</pretext>
